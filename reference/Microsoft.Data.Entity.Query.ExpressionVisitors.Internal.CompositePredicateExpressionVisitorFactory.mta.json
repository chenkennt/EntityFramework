
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory",
    "id": "CompositePredicateExpressionVisitorFactory",
    "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.#ctor(Microsoft.Data.Entity.Infrastructure.IDbContextOptions)",
            "id": "CompositePredicateExpressionVisitorFactory_IDbContextOptions_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.yml",
            "name": "CompositePredicateExpressionVisitorFactory(IDbContextOptions)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.CompositePredicateExpressionVisitorFactory(Microsoft.Data.Entity.Infrastructure.IDbContextOptions)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs",
              "startLine": 14,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "public CompositePredicateExpressionVisitorFactory(IDbContextOptions contextOptions)",
              "content.vb": "Public Sub New(contextOptions As IDbContextOptions)",
              "parameters": [
                {
                  "id": "contextOptions",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Infrastructure.IDbContextOptions",
                    "parent": "Microsoft.Data.Entity.Infrastructure",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Infrastructure.IDbContextOptions.yml",
                    "name": "IDbContextOptions",
                    "fullName": "Microsoft.Data.Entity.Infrastructure.IDbContextOptions",
                    "type": "interface",
                    "summary": "<p>The options to be used by a <xref href=\"Microsoft.Data.Entity.DbContext\"></xref>. You normally override\n<xref href=\"Microsoft.Data.Entity.DbContext.OnConfiguring(Microsoft.Data.Entity.DbContextOptionsBuilder)\"></xref> or use a <xref href=\"Microsoft.Data.Entity.DbContextOptionsBuilder\"></xref>\nto create instances of classes that implement this interface, they are not designed to be directly created\nin your application code.</p>\n",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.IDbContextOptions\" name=\"Microsoft.Data.Entity.Infrastructure.IDbContextOptions\"/>",
                    "id": "IDbContextOptions",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.#ctor(Microsoft.Data.Entity.Infrastructure.IDbContextOptions)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.CompositePredicateExpressionVisitorFactory(Microsoft.Data.Entity.Infrastructure.IDbContextOptions)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs/#L15"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create",
            "id": "Create__",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.yml",
            "name": "Create()",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs",
              "startLine": 21,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "public virtual ExpressionVisitor Create()",
              "content.vb": "Public Overridable Function Create As ExpressionVisitor",
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.ExpressionVisitor",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "ExpressionVisitor",
                  "fullName": "System.Linq.Expressions.ExpressionVisitor",
                  "specName": "<xref href=\"System.Linq.Expressions.ExpressionVisitor\" name=\"System.Linq.Expressions.ExpressionVisitor\"/>",
                  "id": "ExpressionVisitor",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs/#L22"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.yml",
    "name": "CompositePredicateExpressionVisitorFactory",
    "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs",
      "startLine": 10,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Relational"
    ],
    "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
    "syntax": {
      "content": "public class CompositePredicateExpressionVisitorFactory : ICompositePredicateExpressionVisitorFactory",
      "content.vb": "Public Class CompositePredicateExpressionVisitorFactory Implements ICompositePredicateExpressionVisitorFactory"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory"
    ],
    "inheritedMembers": [
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory\"/>",
    "level": 1,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitorFactory.cs/#L11"
  },
  "isClass": true,
  "_allowToc": true
}
