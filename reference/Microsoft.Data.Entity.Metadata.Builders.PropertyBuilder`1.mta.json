
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
    "id": "PropertyBuilder_TProperty_",
    "parent": "Microsoft.Data.Entity.Metadata.Builders",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder)",
            "id": "PropertyBuilder_InternalPropertyBuilder_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
            "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
            "name": "PropertyBuilder(InternalPropertyBuilder)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>.PropertyBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty).PropertyBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
              "startLine": 30,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<para>\nInitializes a new instance of the <xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder\"></xref> class to configure a given\nproperty.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
            "syntax": {
              "content": "public PropertyBuilder(InternalPropertyBuilder builder)",
              "content.vb": "Public Sub New(builder As InternalPropertyBuilder)",
              "parameters": [
                {
                  "id": "builder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder.yml",
                    "name": "InternalPropertyBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder\" name=\"Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder\"/>",
                    "id": "InternalPropertyBuilder",
                    "level": 0
                  },
                  "description": "<p>Internal builder for the property being configured.</p>\n"
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder)\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;.PropertyBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs/#L31"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasAnnotation(System.String,System.Object)",
            "id": "HasAnnotation_String__Object_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
            "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
            "name": "HasAnnotation(String, Object)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>.HasAnnotation(System.String, System.Object)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty).HasAnnotation(System.String, System.Object)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
              "startLine": 42,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Adds or updates an annotation on the property. If an annotation with the key specified in</p>\n<p><paramref name=\"annotation\"></paramref> already exists it&#39;s value will be updated.</p>\n",
            "syntax": {
              "content": "public virtual PropertyBuilder<TProperty> HasAnnotation(string annotation, object value)",
              "content.vb": "Public Overridable Function HasAnnotation(annotation As String, value As Object) As PropertyBuilder(Of TProperty)",
              "parameters": [
                {
                  "id": "annotation",
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  },
                  "description": "<p>The key of the annotation to be added or updated.</p>\n"
                },
                {
                  "id": "value",
                  "type": {
                    "uid": "System.Object",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Object",
                    "fullName": "System.Object",
                    "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
                    "id": "Object",
                    "level": 0
                  },
                  "description": "<p>The value to be stored in the annotation.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
                  "id": "PropertyBuilder_TProperty_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasMaxLength(System.Int32)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsConcurrencyToken(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedNever",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAdd",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAddOrUpdate"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
                  "name": "PropertyBuilder<TProperty>",
                  "name.vb": "PropertyBuilder(Of TProperty)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                    "startLine": 17,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a <xref href=\"Microsoft.Data.Entity.Metadata.Internal.Property\"></xref>.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class PropertyBuilder<TProperty> : PropertyBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalPropertyBuilder>",
                    "content.vb": "Public Class PropertyBuilder(Of TProperty) Inherits PropertyBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalPropertyBuilder)",
                    "typeParameters": [
                      {
                        "id": "TProperty"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalPropertyBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasAnnotation(System.String,System.Object)\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;.HasAnnotation(System.String, System.Object)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs/#L43"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasMaxLength(System.Int32)",
            "id": "HasMaxLength_Int32_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
            "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
            "name": "HasMaxLength(Int32)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>.HasMaxLength(System.Int32)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty).HasMaxLength(System.Int32)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
              "startLine": 61,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures the maximum length of data that can be stored in this property.\nMaximum length can only be set on array properties (including <xref href=\"System.String\"></xref> properties).</p>\n",
            "syntax": {
              "content": "public virtual PropertyBuilder<TProperty> HasMaxLength(int maxLength)",
              "content.vb": "Public Overridable Function HasMaxLength(maxLength As Integer) As PropertyBuilder(Of TProperty)",
              "parameters": [
                {
                  "id": "maxLength",
                  "type": {
                    "uid": "System.Int32",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Int32",
                    "fullName": "System.Int32",
                    "specName": "<xref href=\"System.Int32\" name=\"System.Int32\"/>",
                    "id": "Int32",
                    "level": 0
                  },
                  "description": "<p>The maximum length of data allowed in the property.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
                  "id": "PropertyBuilder_TProperty_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasMaxLength(System.Int32)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsConcurrencyToken(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedNever",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAdd",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAddOrUpdate"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
                  "name": "PropertyBuilder<TProperty>",
                  "name.vb": "PropertyBuilder(Of TProperty)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                    "startLine": 17,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a <xref href=\"Microsoft.Data.Entity.Metadata.Internal.Property\"></xref>.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class PropertyBuilder<TProperty> : PropertyBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalPropertyBuilder>",
                    "content.vb": "Public Class PropertyBuilder(Of TProperty) Inherits PropertyBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalPropertyBuilder)",
                    "typeParameters": [
                      {
                        "id": "TProperty"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalPropertyBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasMaxLength(System.Int32)\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;.HasMaxLength(System.Int32)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs/#L62"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsConcurrencyToken(System.Boolean)",
            "id": "IsConcurrencyToken_Boolean_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
            "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
            "name": "IsConcurrencyToken(Boolean)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>.IsConcurrencyToken(System.Boolean)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty).IsConcurrencyToken(System.Boolean)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
              "startLine": 73,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures whether this property should be used as a concurrency token. When a property is configured\nas a concurrency token the value in the database will be checked when an instance of this entity type\nis updated or deleted during <xref href=\"Microsoft.Data.Entity.DbContext.SaveChanges\"></xref> to ensure it has not changed since\nthe instance was retrieved from the database. If it has changed, an exception will be thrown and the\nchanges will not be applied to the database.</p>\n",
            "syntax": {
              "content": "public virtual PropertyBuilder<TProperty> IsConcurrencyToken(bool concurrencyToken = true)",
              "content.vb": "Public Overridable Function IsConcurrencyToken(concurrencyToken As Boolean = True) As PropertyBuilder(Of TProperty)",
              "parameters": [
                {
                  "id": "concurrencyToken",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether this property is a concurrency token.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
                  "id": "PropertyBuilder_TProperty_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasMaxLength(System.Int32)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsConcurrencyToken(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedNever",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAdd",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAddOrUpdate"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
                  "name": "PropertyBuilder<TProperty>",
                  "name.vb": "PropertyBuilder(Of TProperty)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                    "startLine": 17,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a <xref href=\"Microsoft.Data.Entity.Metadata.Internal.Property\"></xref>.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class PropertyBuilder<TProperty> : PropertyBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalPropertyBuilder>",
                    "content.vb": "Public Class PropertyBuilder(Of TProperty) Inherits PropertyBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalPropertyBuilder)",
                    "typeParameters": [
                      {
                        "id": "TProperty"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalPropertyBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsConcurrencyToken(System.Boolean)\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;.IsConcurrencyToken(System.Boolean)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs/#L74"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsRequired(System.Boolean)",
            "id": "IsRequired_Boolean_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
            "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
            "name": "IsRequired(Boolean)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>.IsRequired(System.Boolean)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty).IsRequired(System.Boolean)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
              "startLine": 52,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures whether this property must have a value assigned or whether null is a valid value.\nA property can only be configured as non-required if it is based on a CLR type that can be\nassigned null.</p>\n",
            "syntax": {
              "content": "public virtual PropertyBuilder<TProperty> IsRequired(bool required = true)",
              "content.vb": "Public Overridable Function IsRequired(required As Boolean = True) As PropertyBuilder(Of TProperty)",
              "parameters": [
                {
                  "id": "required",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether the property is required.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
                  "id": "PropertyBuilder_TProperty_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasMaxLength(System.Int32)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsConcurrencyToken(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedNever",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAdd",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAddOrUpdate"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
                  "name": "PropertyBuilder<TProperty>",
                  "name.vb": "PropertyBuilder(Of TProperty)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                    "startLine": 17,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a <xref href=\"Microsoft.Data.Entity.Metadata.Internal.Property\"></xref>.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class PropertyBuilder<TProperty> : PropertyBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalPropertyBuilder>",
                    "content.vb": "Public Class PropertyBuilder(Of TProperty) Inherits PropertyBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalPropertyBuilder)",
                    "typeParameters": [
                      {
                        "id": "TProperty"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalPropertyBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsRequired(System.Boolean)\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;.IsRequired(System.Boolean)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs/#L53"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedNever",
            "id": "ValueGeneratedNever__",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
            "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
            "name": "ValueGeneratedNever()",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>.ValueGeneratedNever()",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty).ValueGeneratedNever()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
              "startLine": 85,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures a property to never have a value generated when an instance of this\nentity type is saved.</p>\n",
            "remarks": "<p>Note that temporary values may still be generated for use internally before a\nnew entity is saved.</p>\n",
            "syntax": {
              "content": "public virtual PropertyBuilder<TProperty> ValueGeneratedNever()",
              "content.vb": "Public Overridable Function ValueGeneratedNever As PropertyBuilder(Of TProperty)",
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
                  "id": "PropertyBuilder_TProperty_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasMaxLength(System.Int32)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsConcurrencyToken(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedNever",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAdd",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAddOrUpdate"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
                  "name": "PropertyBuilder<TProperty>",
                  "name.vb": "PropertyBuilder(Of TProperty)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                    "startLine": 17,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a <xref href=\"Microsoft.Data.Entity.Metadata.Internal.Property\"></xref>.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class PropertyBuilder<TProperty> : PropertyBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalPropertyBuilder>",
                    "content.vb": "Public Class PropertyBuilder(Of TProperty) Inherits PropertyBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalPropertyBuilder)",
                    "typeParameters": [
                      {
                        "id": "TProperty"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalPropertyBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedNever\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;.ValueGeneratedNever()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs/#L86"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAdd",
            "id": "ValueGeneratedOnAdd__",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
            "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
            "name": "ValueGeneratedOnAdd()",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>.ValueGeneratedOnAdd()",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty).ValueGeneratedOnAdd()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
              "startLine": 95,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures a property to have a value generated only when saving a new entity, unless a non-null,\nnon-temporary value has been set, in which case the set value will be saved instead. The value\nmay be generated by a client-side value generator or may be generated by the database as part\nof saving the entity.</p>\n",
            "syntax": {
              "content": "public virtual PropertyBuilder<TProperty> ValueGeneratedOnAdd()",
              "content.vb": "Public Overridable Function ValueGeneratedOnAdd As PropertyBuilder(Of TProperty)",
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
                  "id": "PropertyBuilder_TProperty_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasMaxLength(System.Int32)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsConcurrencyToken(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedNever",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAdd",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAddOrUpdate"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
                  "name": "PropertyBuilder<TProperty>",
                  "name.vb": "PropertyBuilder(Of TProperty)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                    "startLine": 17,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a <xref href=\"Microsoft.Data.Entity.Metadata.Internal.Property\"></xref>.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class PropertyBuilder<TProperty> : PropertyBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalPropertyBuilder>",
                    "content.vb": "Public Class PropertyBuilder(Of TProperty) Inherits PropertyBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalPropertyBuilder)",
                    "typeParameters": [
                      {
                        "id": "TProperty"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalPropertyBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAdd\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;.ValueGeneratedOnAdd()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs/#L96"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAddOrUpdate",
            "id": "ValueGeneratedOnAddOrUpdate__",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
            "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
            "name": "ValueGeneratedOnAddOrUpdate()",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>.ValueGeneratedOnAddOrUpdate()",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty).ValueGeneratedOnAddOrUpdate()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
              "startLine": 104,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures a property to have a value generated only when saving a new or existing entity, unless\na non-null, non-temporary value has been set for a new entity, or the existing property value has\nbeen modified for an existing entity, in which case the set value will be saved instead.</p>\n",
            "syntax": {
              "content": "public virtual PropertyBuilder<TProperty> ValueGeneratedOnAddOrUpdate()",
              "content.vb": "Public Overridable Function ValueGeneratedOnAddOrUpdate As PropertyBuilder(Of TProperty)",
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1",
                  "id": "PropertyBuilder_TProperty_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.HasMaxLength(System.Int32)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsConcurrencyToken(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedNever",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAdd",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAddOrUpdate"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
                  "name": "PropertyBuilder<TProperty>",
                  "name.vb": "PropertyBuilder(Of TProperty)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
                    "startLine": 17,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a <xref href=\"Microsoft.Data.Entity.Metadata.Internal.Property\"></xref>.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class PropertyBuilder<TProperty> : PropertyBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalPropertyBuilder>",
                    "content.vb": "Public Class PropertyBuilder(Of TProperty) Inherits PropertyBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalPropertyBuilder)",
                    "typeParameters": [
                      {
                        "id": "TProperty"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalPropertyBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAddOrUpdate\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;.ValueGeneratedOnAddOrUpdate()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs/#L105"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1.yml",
    "name": "PropertyBuilder<TProperty>",
    "name.vb": "PropertyBuilder(Of TProperty)",
    "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder<TProperty>",
    "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder(Of TProperty)",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs",
      "startLine": 17,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Metadata.Builders",
    "summary": "<para>\nProvides a simple API for configuring a <xref href=\"Microsoft.Data.Entity.Metadata.Internal.Property\"></xref>.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
    "syntax": {
      "content": "public class PropertyBuilder<TProperty> : PropertyBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalPropertyBuilder>",
      "content.vb": "Public Class PropertyBuilder(Of TProperty) Inherits PropertyBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalPropertyBuilder)",
      "typeParameters": [
        {
          "id": "TProperty"
        }
      ]
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      },
      {
        "uid": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder",
        "parent": "Microsoft.Data.Entity.Metadata.Builders",
        "isExternal": false,
        "href": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.yml",
        "name": "PropertyBuilder",
        "fullName": "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder",
        "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder\"/>",
        "id": "PropertyBuilder",
        "level": 0,
        "index": 1
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
      "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalPropertyBuilder}"
    ],
    "inheritedMembers": [
      "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalPropertyBuilder}#Instance",
      "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Metadata",
      "Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder`1\" name=\"Microsoft.Data.Entity.Metadata.Builders.PropertyBuilder&lt;TProperty&gt;\"/>",
    "level": 2,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/PropertyBuilder`.cs/#L18"
  },
  "isClass": true,
  "_allowToc": true
}
