
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory",
    "id": "SelectExpressionFactory",
    "parent": "Microsoft.Data.Entity.Query.Expressions",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.#ctor(Microsoft.Data.Entity.Query.Sql.IQuerySqlGeneratorFactory)",
            "id": "SelectExpressionFactory_IQuerySqlGeneratorFactory_",
            "parent": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory",
            "href": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.yml",
            "name": "SelectExpressionFactory(IQuerySqlGeneratorFactory)",
            "fullName": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.SelectExpressionFactory(Microsoft.Data.Entity.Query.Sql.IQuerySqlGeneratorFactory)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Expressions/SelectExpressionFactory.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Expressions/SelectExpressionFactory.cs",
              "startLine": 13,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Expressions",
            "syntax": {
              "content": "public SelectExpressionFactory(IQuerySqlGeneratorFactory querySqlGeneratorFactory)",
              "content.vb": "Public Sub New(querySqlGeneratorFactory As IQuerySqlGeneratorFactory)",
              "parameters": [
                {
                  "id": "querySqlGeneratorFactory",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Sql.IQuerySqlGeneratorFactory",
                    "parent": "Microsoft.Data.Entity.Query.Sql",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Sql.IQuerySqlGeneratorFactory.yml",
                    "name": "IQuerySqlGeneratorFactory",
                    "fullName": "Microsoft.Data.Entity.Query.Sql.IQuerySqlGeneratorFactory",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.IQuerySqlGeneratorFactory\" name=\"Microsoft.Data.Entity.Query.Sql.IQuerySqlGeneratorFactory\"/>",
                    "id": "IQuerySqlGeneratorFactory",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.#ctor(Microsoft.Data.Entity.Query.Sql.IQuerySqlGeneratorFactory)\" name=\"Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.SelectExpressionFactory(Microsoft.Data.Entity.Query.Sql.IQuerySqlGeneratorFactory)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Expressions/SelectExpressionFactory.cs/#L14"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.Create",
            "id": "Create__",
            "parent": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory",
            "href": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.yml",
            "name": "Create()",
            "fullName": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.Create()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Expressions/SelectExpressionFactory.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Expressions/SelectExpressionFactory.cs",
              "startLine": 20,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Expressions",
            "syntax": {
              "content": "public virtual SelectExpression Create()",
              "content.vb": "Public Overridable Function Create As SelectExpression",
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Query.Expressions.SelectExpression",
                  "parent": "Microsoft.Data.Entity.Query.Expressions",
                  "isExternal": false,
                  "href": "Microsoft.Data.Entity.Query.Expressions.SelectExpression.yml",
                  "name": "SelectExpression",
                  "fullName": "Microsoft.Data.Entity.Query.Expressions.SelectExpression",
                  "type": "class",
                  "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.SelectExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.SelectExpression\"/>",
                  "id": "SelectExpression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.Create\" name=\"Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.Create()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Expressions/SelectExpressionFactory.cs/#L21"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.Create(System.String)",
            "id": "Create_String_",
            "parent": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory",
            "href": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.yml",
            "name": "Create(String)",
            "fullName": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.Create(System.String)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Expressions/SelectExpressionFactory.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Expressions/SelectExpressionFactory.cs",
              "startLine": 23,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Expressions",
            "syntax": {
              "content": "public virtual SelectExpression Create(string alias)",
              "content.vb": "Public Overridable Function Create(alias As String) As SelectExpression",
              "parameters": [
                {
                  "id": "alias",
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Query.Expressions.SelectExpression",
                  "parent": "Microsoft.Data.Entity.Query.Expressions",
                  "isExternal": false,
                  "href": "Microsoft.Data.Entity.Query.Expressions.SelectExpression.yml",
                  "name": "SelectExpression",
                  "fullName": "Microsoft.Data.Entity.Query.Expressions.SelectExpression",
                  "type": "class",
                  "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.SelectExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.SelectExpression\"/>",
                  "id": "SelectExpression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.Create(System.String)\" name=\"Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.Create(System.String)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Expressions/SelectExpressionFactory.cs/#L24"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory.yml",
    "name": "SelectExpressionFactory",
    "fullName": "Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Relational/Query/Expressions/SelectExpressionFactory.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Relational/Query/Expressions/SelectExpressionFactory.cs",
      "startLine": 9,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Relational"
    ],
    "namespace": "Microsoft.Data.Entity.Query.Expressions",
    "syntax": {
      "content": "public class SelectExpressionFactory : ISelectExpressionFactory",
      "content.vb": "Public Class SelectExpressionFactory Implements ISelectExpressionFactory"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Query.Expressions.ISelectExpressionFactory"
    ],
    "inheritedMembers": [
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory\" name=\"Microsoft.Data.Entity.Query.Expressions.SelectExpressionFactory\"/>",
    "level": 1,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Expressions/SelectExpressionFactory.cs/#L10"
  },
  "isClass": true,
  "_allowToc": true
}
