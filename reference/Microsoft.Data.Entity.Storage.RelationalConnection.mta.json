
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Storage.RelationalConnection",
    "id": "RelationalConnection",
    "parent": "Microsoft.Data.Entity.Storage",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.#ctor(Microsoft.Data.Entity.Infrastructure.IDbContextOptions,Microsoft.Extensions.Logging.ILogger)",
            "id": "RelationalConnection_IDbContextOptions__ILogger_",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "RelationalConnection(IDbContextOptions, ILogger)",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.RelationalConnection(Microsoft.Data.Entity.Infrastructure.IDbContextOptions, Microsoft.Extensions.Logging.ILogger)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 31,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "protected RelationalConnection(IDbContextOptions options, ILogger logger)",
              "content.vb": "Protected Sub New(options As IDbContextOptions, logger As ILogger)",
              "parameters": [
                {
                  "id": "options",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Infrastructure.IDbContextOptions",
                    "parent": "Microsoft.Data.Entity.Infrastructure",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Infrastructure.IDbContextOptions.yml",
                    "name": "IDbContextOptions",
                    "fullName": "Microsoft.Data.Entity.Infrastructure.IDbContextOptions",
                    "type": "interface",
                    "summary": "<p>The options to be used by a <xref href=\"Microsoft.Data.Entity.DbContext\"></xref>. You normally override\n<xref href=\"Microsoft.Data.Entity.DbContext.OnConfiguring(Microsoft.Data.Entity.DbContextOptionsBuilder)\"></xref> or use a <xref href=\"Microsoft.Data.Entity.DbContextOptionsBuilder\"></xref>\nto create instances of classes that implement this interface, they are not designed to be directly created\nin your application code.</p>\n",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.IDbContextOptions\" name=\"Microsoft.Data.Entity.Infrastructure.IDbContextOptions\"/>",
                    "id": "IDbContextOptions",
                    "level": 0
                  }
                },
                {
                  "id": "logger",
                  "type": {
                    "uid": "Microsoft.Extensions.Logging.ILogger",
                    "parent": "Microsoft.Extensions.Logging",
                    "isExternal": true,
                    "name": "ILogger",
                    "fullName": "Microsoft.Extensions.Logging.ILogger",
                    "specName": "<xref href=\"Microsoft.Extensions.Logging.ILogger\" name=\"Microsoft.Extensions.Logging.ILogger\"/>",
                    "id": "ILogger",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.#ctor(Microsoft.Data.Entity.Infrastructure.IDbContextOptions,Microsoft.Extensions.Logging.ILogger)\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.RelationalConnection(Microsoft.Data.Entity.Infrastructure.IDbContextOptions, Microsoft.Extensions.Logging.ILogger)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L32"
          }
        ]
      },
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.CommandTimeout",
            "id": "CommandTimeout",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "CommandTimeout",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.CommandTimeout",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 76,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
                "content": "public virtual int ? CommandTimeout { get; set; }",
                "content.vb": "Public Overridable Property CommandTimeout As Integer?",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Nullable{System.Int32}",
                    "parent": "System",
                    "definition": "System.Nullable`1",
                    "name": "Nullable<Int32>",
                    "name.vb": "Nullable(Of Int32)",
                    "fullName": "System.Nullable<System.Int32>",
                    "fullName.vb": "System.Nullable(Of System.Int32)",
                    "spec.csharp": [
                      {
                        "uid": "System.Nullable`1",
                        "name": "Nullable",
                        "fullName": "System.Nullable",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Int32",
                        "name": "Int32",
                        "fullName": "System.Int32",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Nullable`1",
                        "name": "Nullable",
                        "fullName": "System.Nullable",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Int32",
                        "name": "Int32",
                        "fullName": "System.Int32",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Nullable`1\" name=\"System.Nullable\"/>&lt;<xref href=\"System.Int32\" name=\"System.Int32\"/>&gt;",
                    "id": "Nullable_Int32_",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.CommandTimeout\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.CommandTimeout\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L77"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.ConnectionString",
            "id": "ConnectionString",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "ConnectionString",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.ConnectionString",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 70,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
                "content": "public virtual string ConnectionString { get; }",
                "content.vb": "Public Overridable ReadOnly Property ConnectionString As String",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.ConnectionString\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.ConnectionString\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L71"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.CurrentTransaction",
            "id": "CurrentTransaction",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "CurrentTransaction",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.CurrentTransaction",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 74,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
                "content": "public virtual IDbContextTransaction CurrentTransaction { get; protected set; }",
                "content.vb": "Public Overridable Property CurrentTransaction As IDbContextTransaction",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IDbContextTransaction.yml",
                    "name": "IDbContextTransaction",
                    "fullName": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\" name=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\"/>",
                    "id": "IDbContextTransaction",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.CurrentTransaction\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.CurrentTransaction\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L75"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.DbConnection",
            "id": "DbConnection",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "DbConnection",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.DbConnection",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 72,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
                "content": "public virtual DbConnection DbConnection { get; }",
                "content.vb": "Public Overridable ReadOnly Property DbConnection As DbConnection",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Data.Common.DbConnection",
                    "parent": "System.Data.Common",
                    "isExternal": true,
                    "name": "DbConnection",
                    "fullName": "System.Data.Common.DbConnection",
                    "specName": "<xref href=\"System.Data.Common.DbConnection\" name=\"System.Data.Common.DbConnection\"/>",
                    "id": "DbConnection",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.DbConnection\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.DbConnection\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L73"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.IsMultipleActiveResultSetsEnabled",
            "id": "IsMultipleActiveResultSetsEnabled",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "IsMultipleActiveResultSetsEnabled",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.IsMultipleActiveResultSetsEnabled",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 259,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
                "content": "public virtual bool IsMultipleActiveResultSetsEnabled { get; }",
                "content.vb": "Public Overridable ReadOnly Property IsMultipleActiveResultSetsEnabled As Boolean",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.IsMultipleActiveResultSetsEnabled\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.IsMultipleActiveResultSetsEnabled\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L260"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.Logger",
            "id": "Logger",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "Logger",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.Logger",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 68,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
                "content": "protected virtual ILogger Logger { get; }",
                "content.vb": "Protected Overridable ReadOnly Property Logger As ILogger",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Extensions.Logging.ILogger",
                    "parent": "Microsoft.Extensions.Logging",
                    "isExternal": true,
                    "name": "ILogger",
                    "fullName": "Microsoft.Extensions.Logging.ILogger",
                    "specName": "<xref href=\"Microsoft.Extensions.Logging.ILogger\" name=\"Microsoft.Extensions.Logging.ILogger\"/>",
                    "id": "ILogger",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.Logger\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.Logger\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L69"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransaction",
            "id": "BeginTransaction__",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "BeginTransaction()",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransaction()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 91,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "public virtual IDbContextTransaction BeginTransaction()",
              "content.vb": "Public Overridable Function BeginTransaction As IDbContextTransaction",
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                  "parent": "Microsoft.Data.Entity.Storage",
                  "isExternal": false,
                  "href": "Microsoft.Data.Entity.Storage.IDbContextTransaction.yml",
                  "name": "IDbContextTransaction",
                  "fullName": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                  "type": "interface",
                  "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\" name=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\"/>",
                  "id": "IDbContextTransaction",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransaction\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransaction()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L92"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransaction(System.Data.IsolationLevel)",
            "id": "BeginTransaction_IsolationLevel_",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "BeginTransaction(IsolationLevel)",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransaction(System.Data.IsolationLevel)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 98,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "public virtual IDbContextTransaction BeginTransaction(IsolationLevel isolationLevel)",
              "content.vb": "Public Overridable Function BeginTransaction(isolationLevel As IsolationLevel) As IDbContextTransaction",
              "parameters": [
                {
                  "id": "isolationLevel",
                  "type": {
                    "uid": "System.Data.IsolationLevel",
                    "parent": "System.Data",
                    "isExternal": true,
                    "name": "IsolationLevel",
                    "fullName": "System.Data.IsolationLevel",
                    "specName": "<xref href=\"System.Data.IsolationLevel\" name=\"System.Data.IsolationLevel\"/>",
                    "id": "IsolationLevel",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                  "parent": "Microsoft.Data.Entity.Storage",
                  "isExternal": false,
                  "href": "Microsoft.Data.Entity.Storage.IDbContextTransaction.yml",
                  "name": "IDbContextTransaction",
                  "fullName": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                  "type": "interface",
                  "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\" name=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\"/>",
                  "id": "IDbContextTransaction",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransaction(System.Data.IsolationLevel)\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransaction(System.Data.IsolationLevel)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L99"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)",
            "id": "BeginTransactionAsync_IsolationLevel__CancellationToken_",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "BeginTransactionAsync(IsolationLevel, CancellationToken)",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransactionAsync(System.Data.IsolationLevel, System.Threading.CancellationToken)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 111,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "public virtual Task<IDbContextTransaction> BeginTransactionAsync(IsolationLevel isolationLevel, CancellationToken cancellationToken = null)",
              "content.vb": "Public Overridable Function BeginTransactionAsync(isolationLevel As IsolationLevel, cancellationToken As CancellationToken = Nothing) As Task(Of IDbContextTransaction)",
              "parameters": [
                {
                  "id": "isolationLevel",
                  "type": {
                    "uid": "System.Data.IsolationLevel",
                    "parent": "System.Data",
                    "isExternal": true,
                    "name": "IsolationLevel",
                    "fullName": "System.Data.IsolationLevel",
                    "specName": "<xref href=\"System.Data.IsolationLevel\" name=\"System.Data.IsolationLevel\"/>",
                    "id": "IsolationLevel",
                    "level": 0
                  }
                },
                {
                  "id": "cancellationToken",
                  "type": {
                    "uid": "System.Threading.CancellationToken",
                    "parent": "System.Threading",
                    "isExternal": true,
                    "name": "CancellationToken",
                    "fullName": "System.Threading.CancellationToken",
                    "specName": "<xref href=\"System.Threading.CancellationToken\" name=\"System.Threading.CancellationToken\"/>",
                    "id": "CancellationToken",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Threading.Tasks.Task{Microsoft.Data.Entity.Storage.IDbContextTransaction}",
                  "parent": "System.Threading.Tasks",
                  "definition": "System.Threading.Tasks.Task`1",
                  "href": "Microsoft.Data.Entity.Storage.IDbContextTransaction.yml",
                  "name": "Task<IDbContextTransaction>",
                  "name.vb": "Task(Of IDbContextTransaction)",
                  "fullName": "System.Threading.Tasks.Task<Microsoft.Data.Entity.Storage.IDbContextTransaction>",
                  "fullName.vb": "System.Threading.Tasks.Task(Of Microsoft.Data.Entity.Storage.IDbContextTransaction)",
                  "spec.csharp": [
                    {
                      "uid": "System.Threading.Tasks.Task`1",
                      "name": "Task",
                      "fullName": "System.Threading.Tasks.Task",
                      "isExternal": true
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                      "name": "IDbContextTransaction",
                      "fullName": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Storage.IDbContextTransaction.yml"
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "System.Threading.Tasks.Task`1",
                      "name": "Task",
                      "fullName": "System.Threading.Tasks.Task",
                      "isExternal": true
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                      "name": "IDbContextTransaction",
                      "fullName": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Storage.IDbContextTransaction.yml"
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"System.Threading.Tasks.Task`1\" name=\"System.Threading.Tasks.Task\"/>&lt;<xref href=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\" name=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\"/>&gt;",
                  "id": "Task_IDbContextTransaction_",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransactionAsync(System.Data.IsolationLevel, System.Threading.CancellationToken)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L112"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransactionAsync(System.Threading.CancellationToken)",
            "id": "BeginTransactionAsync_CancellationToken_",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "BeginTransactionAsync(CancellationToken)",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransactionAsync(System.Threading.CancellationToken)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 94,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "public virtual Task<IDbContextTransaction> BeginTransactionAsync(CancellationToken cancellationToken = null)",
              "content.vb": "Public Overridable Function BeginTransactionAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IDbContextTransaction)",
              "parameters": [
                {
                  "id": "cancellationToken",
                  "type": {
                    "uid": "System.Threading.CancellationToken",
                    "parent": "System.Threading",
                    "isExternal": true,
                    "name": "CancellationToken",
                    "fullName": "System.Threading.CancellationToken",
                    "specName": "<xref href=\"System.Threading.CancellationToken\" name=\"System.Threading.CancellationToken\"/>",
                    "id": "CancellationToken",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Threading.Tasks.Task{Microsoft.Data.Entity.Storage.IDbContextTransaction}",
                  "parent": "System.Threading.Tasks",
                  "definition": "System.Threading.Tasks.Task`1",
                  "href": "Microsoft.Data.Entity.Storage.IDbContextTransaction.yml",
                  "name": "Task<IDbContextTransaction>",
                  "name.vb": "Task(Of IDbContextTransaction)",
                  "fullName": "System.Threading.Tasks.Task<Microsoft.Data.Entity.Storage.IDbContextTransaction>",
                  "fullName.vb": "System.Threading.Tasks.Task(Of Microsoft.Data.Entity.Storage.IDbContextTransaction)",
                  "spec.csharp": [
                    {
                      "uid": "System.Threading.Tasks.Task`1",
                      "name": "Task",
                      "fullName": "System.Threading.Tasks.Task",
                      "isExternal": true
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                      "name": "IDbContextTransaction",
                      "fullName": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Storage.IDbContextTransaction.yml"
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "System.Threading.Tasks.Task`1",
                      "name": "Task",
                      "fullName": "System.Threading.Tasks.Task",
                      "isExternal": true
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                      "name": "IDbContextTransaction",
                      "fullName": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Storage.IDbContextTransaction.yml"
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"System.Threading.Tasks.Task`1\" name=\"System.Threading.Tasks.Task\"/>&lt;<xref href=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\" name=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\"/>&gt;",
                  "id": "Task_IDbContextTransaction_",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransactionAsync(System.Threading.CancellationToken)\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.BeginTransactionAsync(System.Threading.CancellationToken)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L95"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.Close",
            "id": "Close__",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "Close()",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.Close()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 240,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "public virtual void Close()",
              "content.vb": "Public Overridable Sub Close"
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.Close\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.Close()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L241"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.CommitTransaction",
            "id": "CommitTransaction__",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "CommitTransaction()",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.CommitTransaction()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 171,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "public virtual void CommitTransaction()",
              "content.vb": "Public Overridable Sub CommitTransaction"
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.CommitTransaction\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.CommitTransaction()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L172"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.CreateDbConnection",
            "id": "CreateDbConnection__",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "CreateDbConnection()",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.CreateDbConnection()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 66,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "protected abstract DbConnection CreateDbConnection()",
              "content.vb": "Protected MustOverride Function CreateDbConnection As DbConnection",
              "return": {
                "type": {
                  "uid": "System.Data.Common.DbConnection",
                  "parent": "System.Data.Common",
                  "isExternal": true,
                  "name": "DbConnection",
                  "fullName": "System.Data.Common.DbConnection",
                  "specName": "<xref href=\"System.Data.Common.DbConnection\" name=\"System.Data.Common.DbConnection\"/>",
                  "id": "DbConnection",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.CreateDbConnection\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.CreateDbConnection()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L67"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.Dispose",
            "id": "Dispose__",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "Dispose()",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.Dispose()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 261,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "public virtual void Dispose()",
              "content.vb": "Public Overridable Sub Dispose"
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.Dispose\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.Dispose()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L262"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.Open",
            "id": "Open__",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "Open()",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.Open()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 191,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "public virtual void Open()",
              "content.vb": "Public Overridable Sub Open"
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.Open\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.Open()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L192"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.OpenAsync(System.Threading.CancellationToken)",
            "id": "OpenAsync_CancellationToken_",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "OpenAsync(CancellationToken)",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.OpenAsync(System.Threading.CancellationToken)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 210,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "public virtual Task OpenAsync(CancellationToken cancellationToken = null)",
              "content.vb": "Public Overridable Function OpenAsync(cancellationToken As CancellationToken = Nothing) As Task",
              "parameters": [
                {
                  "id": "cancellationToken",
                  "type": {
                    "uid": "System.Threading.CancellationToken",
                    "parent": "System.Threading",
                    "isExternal": true,
                    "name": "CancellationToken",
                    "fullName": "System.Threading.CancellationToken",
                    "specName": "<xref href=\"System.Threading.CancellationToken\" name=\"System.Threading.CancellationToken\"/>",
                    "id": "CancellationToken",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Threading.Tasks.Task",
                  "parent": "System.Threading.Tasks",
                  "isExternal": true,
                  "name": "Task",
                  "fullName": "System.Threading.Tasks.Task",
                  "specName": "<xref href=\"System.Threading.Tasks.Task\" name=\"System.Threading.Tasks.Task\"/>",
                  "id": "Task",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.OpenAsync(System.Threading.CancellationToken)\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.OpenAsync(System.Threading.CancellationToken)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L211"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.RollbackTransaction",
            "id": "RollbackTransaction__",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "RollbackTransaction()",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.RollbackTransaction()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 181,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "public virtual void RollbackTransaction()",
              "content.vb": "Public Overridable Sub RollbackTransaction"
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.RollbackTransaction\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.RollbackTransaction()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L182"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.RelationalConnection.UseTransaction(System.Data.Common.DbTransaction)",
            "id": "UseTransaction_DbTransaction_",
            "parent": "Microsoft.Data.Entity.Storage.RelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
            "name": "UseTransaction(DbTransaction)",
            "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection.UseTransaction(System.Data.Common.DbTransaction)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
              "startLine": 145,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "public virtual IDbContextTransaction UseTransaction(DbTransaction transaction)",
              "content.vb": "Public Overridable Function UseTransaction(transaction As DbTransaction) As IDbContextTransaction",
              "parameters": [
                {
                  "id": "transaction",
                  "type": {
                    "uid": "System.Data.Common.DbTransaction",
                    "parent": "System.Data.Common",
                    "isExternal": true,
                    "name": "DbTransaction",
                    "fullName": "System.Data.Common.DbTransaction",
                    "specName": "<xref href=\"System.Data.Common.DbTransaction\" name=\"System.Data.Common.DbTransaction\"/>",
                    "id": "DbTransaction",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                  "parent": "Microsoft.Data.Entity.Storage",
                  "isExternal": false,
                  "href": "Microsoft.Data.Entity.Storage.IDbContextTransaction.yml",
                  "name": "IDbContextTransaction",
                  "fullName": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                  "type": "interface",
                  "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\" name=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\"/>",
                  "id": "IDbContextTransaction",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection.UseTransaction(System.Data.Common.DbTransaction)\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection.UseTransaction(System.Data.Common.DbTransaction)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L146"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Storage.RelationalConnection.yml",
    "name": "RelationalConnection",
    "fullName": "Microsoft.Data.Entity.Storage.RelationalConnection",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Relational/Storage/RelationalConnection.cs",
      "startLine": 20,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Relational"
    ],
    "namespace": "Microsoft.Data.Entity.Storage",
    "syntax": {
      "content": "public abstract class RelationalConnection : IRelationalConnection, IRelationalTransactionManager, IDbContextTransactionManager, IDisposable",
      "content.vb": "Public MustInherit Class RelationalConnection Implements IRelationalConnection, IRelationalTransactionManager, IDbContextTransactionManager, IDisposable"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Storage.IRelationalConnection",
      "Microsoft.Data.Entity.Storage.IRelationalTransactionManager",
      "Microsoft.Data.Entity.Storage.IDbContextTransactionManager",
      "System.IDisposable"
    ],
    "inheritedMembers": [
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalConnection\" name=\"Microsoft.Data.Entity.Storage.RelationalConnection\"/>",
    "level": 1,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/RelationalConnection.cs/#L21"
  },
  "isClass": true,
  "_allowToc": true
}
