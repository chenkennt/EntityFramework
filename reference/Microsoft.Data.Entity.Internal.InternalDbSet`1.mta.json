
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
    "id": "InternalDbSet_TEntity_",
    "parent": "Microsoft.Data.Entity.Internal",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.#ctor(Microsoft.Data.Entity.DbContext)",
            "id": "InternalDbSet_DbContext_",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "InternalDbSet(DbContext)",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.InternalDbSet(Microsoft.Data.Entity.DbContext)",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).InternalDbSet(Microsoft.Data.Entity.DbContext)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 23,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public InternalDbSet(DbContext context)",
              "content.vb": "Public Sub New(context As DbContext)",
              "parameters": [
                {
                  "id": "context",
                  "type": {
                    "uid": "Microsoft.Data.Entity.DbContext",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.DbContext.yml",
                    "name": "DbContext",
                    "fullName": "Microsoft.Data.Entity.DbContext",
                    "specName": "<xref href=\"Microsoft.Data.Entity.DbContext\" name=\"Microsoft.Data.Entity.DbContext\"/>",
                    "id": "DbContext",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.#ctor(Microsoft.Data.Entity.DbContext)\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.InternalDbSet(Microsoft.Data.Entity.DbContext)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L24"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.#ctor(System.Linq.IQueryable{`0},Microsoft.Data.Entity.DbSet{`0})",
            "id": "InternalDbSet_IQueryable_TEntity___DbSet_TEntity__",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "InternalDbSet(IQueryable<TEntity>, DbSet<TEntity>)",
            "name.vb": "InternalDbSet(IQueryable(Of TEntity), DbSet(Of TEntity))",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.InternalDbSet(System.Linq.IQueryable<TEntity>, Microsoft.Data.Entity.DbSet<TEntity>)",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).InternalDbSet(System.Linq.IQueryable(Of TEntity), Microsoft.Data.Entity.DbSet(Of TEntity))",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 36,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public InternalDbSet(IQueryable<TEntity> source, DbSet<TEntity> dbSet)",
              "content.vb": "Public Sub New(source As IQueryable(Of TEntity), dbSet As DbSet(Of TEntity))",
              "parameters": [
                {
                  "id": "source",
                  "type": {
                    "uid": "System.Linq.IQueryable{{TEntity}}",
                    "parent": "System.Linq",
                    "definition": "System.Linq.IQueryable`1",
                    "name": "IQueryable<TEntity>",
                    "name.vb": "IQueryable(Of TEntity)",
                    "fullName": "System.Linq.IQueryable<TEntity>",
                    "fullName.vb": "System.Linq.IQueryable(Of TEntity)",
                    "spec.csharp": [
                      {
                        "uid": "System.Linq.IQueryable`1",
                        "name": "IQueryable",
                        "fullName": "System.Linq.IQueryable",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Linq.IQueryable`1",
                        "name": "IQueryable",
                        "fullName": "System.Linq.IQueryable",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Linq.IQueryable`1\" name=\"System.Linq.IQueryable\"/>&lt;TEntity&gt;",
                    "id": "IQueryable_TEntity_",
                    "level": 0
                  }
                },
                {
                  "id": "dbSet",
                  "type": {
                    "uid": "Microsoft.Data.Entity.DbSet{{TEntity}}",
                    "parent": "Microsoft.Data.Entity",
                    "definition": "Microsoft.Data.Entity.DbSet`1",
                    "href": "Microsoft.Data.Entity.DbSet`1.yml",
                    "name": "DbSet<TEntity>",
                    "name.vb": "DbSet(Of TEntity)",
                    "fullName": "Microsoft.Data.Entity.DbSet<TEntity>",
                    "fullName.vb": "Microsoft.Data.Entity.DbSet(Of TEntity)",
                    "spec.csharp": [
                      {
                        "uid": "Microsoft.Data.Entity.DbSet`1",
                        "name": "DbSet",
                        "fullName": "Microsoft.Data.Entity.DbSet",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.DbSet`1.yml"
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "Microsoft.Data.Entity.DbSet`1",
                        "name": "DbSet",
                        "fullName": "Microsoft.Data.Entity.DbSet",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.DbSet`1.yml"
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"Microsoft.Data.Entity.DbSet`1\" name=\"Microsoft.Data.Entity.DbSet\"/>&lt;TEntity&gt;",
                    "id": "DbSet_TEntity_",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.#ctor(System.Linq.IQueryable{`0},Microsoft.Data.Entity.DbSet{`0})\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.InternalDbSet(System.Linq.IQueryable&lt;TEntity&gt;, Microsoft.Data.Entity.DbSet&lt;TEntity&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L37"
          }
        ]
      },
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.Microsoft#Data#Entity#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance",
            "id": "IInfrastructure_IServiceProvider__Instance",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "IInfrastructure<IServiceProvider>.Instance",
            "name.vb": "Microsoft.Data.Entity.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.Microsoft.Data.Entity.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).Microsoft.Data.Entity.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 93,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
                "content": "IServiceProvider IInfrastructure<IServiceProvider>.Instance { get; }",
                "content.vb": "ReadOnly WriteOnly Property Microsoft.Data.Entity.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance As IServiceProvider Implements IInfrastructure(Of IServiceProvider).Instance",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.IServiceProvider",
                    "parent": "System",
                    "isExternal": true,
                    "name": "IServiceProvider",
                    "fullName": "System.IServiceProvider",
                    "specName": "<xref href=\"System.IServiceProvider\" name=\"System.IServiceProvider\"/>",
                    "id": "IServiceProvider",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.Microsoft#Data#Entity#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.Microsoft.Data.Entity.Infrastructure.IInfrastructure&lt;System.IServiceProvider&gt;.Instance\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L94"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.Microsoft#Data#Entity#Query#Internal#IAsyncEnumerableAccessor{TEntity}#AsyncEnumerable",
            "id": "IAsyncEnumerableAccessor_TEntity__AsyncEnumerable",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable",
            "name.vb": "Microsoft.Data.Entity.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.Microsoft.Data.Entity.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).Microsoft.Data.Entity.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 85,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
                "content": "IAsyncEnumerable<TEntity> IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable { get; }",
                "content.vb": "ReadOnly WriteOnly Property Microsoft.Data.Entity.Query.Internal.IAsyncEnumerableAccessor<TEntity>.AsyncEnumerable As IAsyncEnumerable(Of TEntity) Implements IAsyncEnumerableAccessor(Of TEntity).AsyncEnumerable",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Collections.Generic.IAsyncEnumerable{{TEntity}}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IAsyncEnumerable`1",
                    "name": "IAsyncEnumerable<TEntity>",
                    "name.vb": "IAsyncEnumerable(Of TEntity)",
                    "fullName": "System.Collections.Generic.IAsyncEnumerable<TEntity>",
                    "fullName.vb": "System.Collections.Generic.IAsyncEnumerable(Of TEntity)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IAsyncEnumerable`1",
                        "name": "IAsyncEnumerable",
                        "fullName": "System.Collections.Generic.IAsyncEnumerable",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IAsyncEnumerable`1",
                        "name": "IAsyncEnumerable",
                        "fullName": "System.Collections.Generic.IAsyncEnumerable",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IAsyncEnumerable`1\" name=\"System.Collections.Generic.IAsyncEnumerable\"/>&lt;TEntity&gt;",
                    "id": "IAsyncEnumerable_TEntity_",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.Microsoft#Data#Entity#Query#Internal#IAsyncEnumerableAccessor{TEntity}#AsyncEnumerable\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.Microsoft.Data.Entity.Query.Internal.IAsyncEnumerableAccessor&lt;TEntity&gt;.AsyncEnumerable\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L86"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.System#Linq#IQueryable#ElementType",
            "id": "IQueryable_ElementType",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "IQueryable.ElementType",
            "name.vb": "System.Linq.IQueryable.ElementType",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.System.Linq.IQueryable.ElementType",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).System.Linq.IQueryable.ElementType",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 87,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
                "content": "Type IQueryable.ElementType { get; }",
                "content.vb": "ReadOnly WriteOnly Property System.Linq.IQueryable.ElementType As Type Implements IQueryable.ElementType",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Type",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Type",
                    "fullName": "System.Type",
                    "specName": "<xref href=\"System.Type\" name=\"System.Type\"/>",
                    "id": "Type",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.System#Linq#IQueryable#ElementType\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.System.Linq.IQueryable.ElementType\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L88"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.System#Linq#IQueryable#Expression",
            "id": "IQueryable_Expression",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "IQueryable.Expression",
            "name.vb": "System.Linq.IQueryable.Expression",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.System.Linq.IQueryable.Expression",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).System.Linq.IQueryable.Expression",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 89,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
                "content": "Expression IQueryable.Expression { get; }",
                "content.vb": "ReadOnly WriteOnly Property System.Linq.IQueryable.Expression As Expression Implements IQueryable.Expression",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Linq.Expressions.Expression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "Expression",
                    "fullName": "System.Linq.Expressions.Expression",
                    "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                    "id": "Expression",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.System#Linq#IQueryable#Expression\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.System.Linq.IQueryable.Expression\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L90"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.System#Linq#IQueryable#Provider",
            "id": "IQueryable_Provider",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "IQueryable.Provider",
            "name.vb": "System.Linq.IQueryable.Provider",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.System.Linq.IQueryable.Provider",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).System.Linq.IQueryable.Provider",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 91,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
                "content": "IQueryProvider IQueryable.Provider { get; }",
                "content.vb": "ReadOnly WriteOnly Property System.Linq.IQueryable.Provider As IQueryProvider Implements IQueryable.Provider",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Linq.IQueryProvider",
                    "parent": "System.Linq",
                    "isExternal": true,
                    "name": "IQueryProvider",
                    "fullName": "System.Linq.IQueryProvider",
                    "specName": "<xref href=\"System.Linq.IQueryProvider\" name=\"System.Linq.IQueryProvider\"/>",
                    "id": "IQueryProvider",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.System#Linq#IQueryable#Provider\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.System.Linq.IQueryable.Provider\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L92"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.Add(`0,Microsoft.Data.Entity.GraphBehavior)",
            "id": "Add_TEntity__GraphBehavior_",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "Add(TEntity, GraphBehavior)",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.Add(TEntity, Microsoft.Data.Entity.GraphBehavior)",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).Add(TEntity, Microsoft.Data.Entity.GraphBehavior)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 45,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public override EntityEntry<TEntity> Add(TEntity entity, GraphBehavior behavior = 0)",
              "content.vb": "Public Overrides Function Add(entity As TEntity, behavior As GraphBehavior = 0) As EntityEntry(Of TEntity)",
              "parameters": [
                {
                  "id": "entity",
                  "type": {
                    "uid": "{TEntity}",
                    "isExternal": false,
                    "name": "TEntity",
                    "fullName": "TEntity",
                    "specName": "<xref href=\"{TEntity}\" name=\"TEntity\"/>",
                    "id": "TEntity",
                    "level": 0
                  }
                },
                {
                  "id": "behavior",
                  "type": {
                    "uid": "Microsoft.Data.Entity.GraphBehavior",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.GraphBehavior.yml",
                    "name": "GraphBehavior",
                    "fullName": "Microsoft.Data.Entity.GraphBehavior",
                    "type": "enum",
                    "summary": "<p>Indicates how the navigation properties of an entity are traversed so that a given operation can be recursively\nperformed on the entities that it is related to.</p>\n",
                    "specName": "<xref href=\"Microsoft.Data.Entity.GraphBehavior\" name=\"Microsoft.Data.Entity.GraphBehavior\"/>",
                    "id": "GraphBehavior",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry{{TEntity}}",
                  "parent": "Microsoft.Data.Entity.ChangeTracking",
                  "definition": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1",
                  "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1.yml",
                  "name": "EntityEntry<TEntity>",
                  "name.vb": "EntityEntry(Of TEntity)",
                  "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry<TEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.ChangeTracking.EntityEntry(Of TEntity)",
                  "spec.csharp": [
                    {
                      "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1",
                      "name": "EntityEntry",
                      "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1.yml"
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "name": "TEntity",
                      "fullName": "TEntity",
                      "isExternal": false
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1",
                      "name": "EntityEntry",
                      "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1.yml"
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "name": "TEntity",
                      "fullName": "TEntity",
                      "isExternal": false
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry`1\" name=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry\"/>&lt;TEntity&gt;",
                  "id": "EntityEntry_TEntity_",
                  "level": 0
                }
              }
            },
            "overridden": "Microsoft.Data.Entity.DbSet{{TEntity}}.Add({TEntity},Microsoft.Data.Entity.GraphBehavior)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.Add(`0,Microsoft.Data.Entity.GraphBehavior)\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.Add(TEntity, Microsoft.Data.Entity.GraphBehavior)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L46"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.AddRange(`0[])",
            "id": "AddRange_TEntity___",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "AddRange(TEntity[])",
            "name.vb": "AddRange(TEntity())",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.AddRange(TEntity[])",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).AddRange(TEntity())",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 57,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public override void AddRange(params TEntity[] entities)",
              "content.vb": "Public Overrides Sub AddRange(ParamArray entities As TEntity())",
              "parameters": [
                {
                  "id": "entities",
                  "type": {
                    "uid": "{TEntity}[]",
                    "isExternal": false,
                    "name": "TEntity[]",
                    "name.vb": "TEntity()",
                    "fullName": "TEntity[]",
                    "fullName.vb": "TEntity()",
                    "spec.csharp": [
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": "[]",
                        "fullName": "[]",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": "()",
                        "fullName": "()",
                        "isExternal": false
                      }
                    ],
                    "specName": "TEntity[]",
                    "id": "TEntity__",
                    "level": 0
                  }
                }
              ]
            },
            "overridden": "Microsoft.Data.Entity.DbSet{{TEntity}}.AddRange({TEntity}[])",
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.AddRange(`0[])\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.AddRange(TEntity[])\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L58"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0},Microsoft.Data.Entity.GraphBehavior)",
            "id": "AddRange_IEnumerable_TEntity___GraphBehavior_",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "AddRange(IEnumerable<TEntity>, GraphBehavior)",
            "name.vb": "AddRange(IEnumerable(Of TEntity), GraphBehavior)",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.AddRange(System.Collections.Generic.IEnumerable<TEntity>, Microsoft.Data.Entity.GraphBehavior)",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).AddRange(System.Collections.Generic.IEnumerable(Of TEntity), Microsoft.Data.Entity.GraphBehavior)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 69,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public override void AddRange(IEnumerable<TEntity> entities, GraphBehavior behavior = 0)",
              "content.vb": "Public Overrides Sub AddRange(entities As IEnumerable(Of TEntity), behavior As GraphBehavior = 0)",
              "parameters": [
                {
                  "id": "entities",
                  "type": {
                    "uid": "System.Collections.Generic.IEnumerable{{TEntity}}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IEnumerable`1",
                    "name": "IEnumerable<TEntity>",
                    "name.vb": "IEnumerable(Of TEntity)",
                    "fullName": "System.Collections.Generic.IEnumerable<TEntity>",
                    "fullName.vb": "System.Collections.Generic.IEnumerable(Of TEntity)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IEnumerable`1",
                        "name": "IEnumerable",
                        "fullName": "System.Collections.Generic.IEnumerable",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IEnumerable`1",
                        "name": "IEnumerable",
                        "fullName": "System.Collections.Generic.IEnumerable",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IEnumerable`1\" name=\"System.Collections.Generic.IEnumerable\"/>&lt;TEntity&gt;",
                    "id": "IEnumerable_TEntity_",
                    "level": 0
                  }
                },
                {
                  "id": "behavior",
                  "type": {
                    "uid": "Microsoft.Data.Entity.GraphBehavior",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.GraphBehavior.yml",
                    "name": "GraphBehavior",
                    "fullName": "Microsoft.Data.Entity.GraphBehavior",
                    "type": "enum",
                    "summary": "<p>Indicates how the navigation properties of an entity are traversed so that a given operation can be recursively\nperformed on the entities that it is related to.</p>\n",
                    "specName": "<xref href=\"Microsoft.Data.Entity.GraphBehavior\" name=\"Microsoft.Data.Entity.GraphBehavior\"/>",
                    "id": "GraphBehavior",
                    "level": 0
                  }
                }
              ]
            },
            "overridden": "Microsoft.Data.Entity.DbSet{{TEntity}}.AddRange(System.Collections.Generic.IEnumerable{{TEntity}},Microsoft.Data.Entity.GraphBehavior)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0},Microsoft.Data.Entity.GraphBehavior)\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;TEntity&gt;, Microsoft.Data.Entity.GraphBehavior)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L70"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.Attach(`0,Microsoft.Data.Entity.GraphBehavior)",
            "id": "Attach_TEntity__GraphBehavior_",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "Attach(TEntity, GraphBehavior)",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.Attach(TEntity, Microsoft.Data.Entity.GraphBehavior)",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).Attach(TEntity, Microsoft.Data.Entity.GraphBehavior)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 48,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public override EntityEntry<TEntity> Attach(TEntity entity, GraphBehavior behavior = 0)",
              "content.vb": "Public Overrides Function Attach(entity As TEntity, behavior As GraphBehavior = 0) As EntityEntry(Of TEntity)",
              "parameters": [
                {
                  "id": "entity",
                  "type": {
                    "uid": "{TEntity}",
                    "isExternal": false,
                    "name": "TEntity",
                    "fullName": "TEntity",
                    "specName": "<xref href=\"{TEntity}\" name=\"TEntity\"/>",
                    "id": "TEntity",
                    "level": 0
                  }
                },
                {
                  "id": "behavior",
                  "type": {
                    "uid": "Microsoft.Data.Entity.GraphBehavior",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.GraphBehavior.yml",
                    "name": "GraphBehavior",
                    "fullName": "Microsoft.Data.Entity.GraphBehavior",
                    "type": "enum",
                    "summary": "<p>Indicates how the navigation properties of an entity are traversed so that a given operation can be recursively\nperformed on the entities that it is related to.</p>\n",
                    "specName": "<xref href=\"Microsoft.Data.Entity.GraphBehavior\" name=\"Microsoft.Data.Entity.GraphBehavior\"/>",
                    "id": "GraphBehavior",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry{{TEntity}}",
                  "parent": "Microsoft.Data.Entity.ChangeTracking",
                  "definition": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1",
                  "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1.yml",
                  "name": "EntityEntry<TEntity>",
                  "name.vb": "EntityEntry(Of TEntity)",
                  "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry<TEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.ChangeTracking.EntityEntry(Of TEntity)",
                  "spec.csharp": [
                    {
                      "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1",
                      "name": "EntityEntry",
                      "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1.yml"
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "name": "TEntity",
                      "fullName": "TEntity",
                      "isExternal": false
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1",
                      "name": "EntityEntry",
                      "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1.yml"
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "name": "TEntity",
                      "fullName": "TEntity",
                      "isExternal": false
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry`1\" name=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry\"/>&lt;TEntity&gt;",
                  "id": "EntityEntry_TEntity_",
                  "level": 0
                }
              }
            },
            "overridden": "Microsoft.Data.Entity.DbSet{{TEntity}}.Attach({TEntity},Microsoft.Data.Entity.GraphBehavior)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.Attach(`0,Microsoft.Data.Entity.GraphBehavior)\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.Attach(TEntity, Microsoft.Data.Entity.GraphBehavior)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L49"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.AttachRange(`0[])",
            "id": "AttachRange_TEntity___",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "AttachRange(TEntity[])",
            "name.vb": "AttachRange(TEntity())",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.AttachRange(TEntity[])",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).AttachRange(TEntity())",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 60,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public override void AttachRange(params TEntity[] entities)",
              "content.vb": "Public Overrides Sub AttachRange(ParamArray entities As TEntity())",
              "parameters": [
                {
                  "id": "entities",
                  "type": {
                    "uid": "{TEntity}[]",
                    "isExternal": false,
                    "name": "TEntity[]",
                    "name.vb": "TEntity()",
                    "fullName": "TEntity[]",
                    "fullName.vb": "TEntity()",
                    "spec.csharp": [
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": "[]",
                        "fullName": "[]",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": "()",
                        "fullName": "()",
                        "isExternal": false
                      }
                    ],
                    "specName": "TEntity[]",
                    "id": "TEntity__",
                    "level": 0
                  }
                }
              ]
            },
            "overridden": "Microsoft.Data.Entity.DbSet{{TEntity}}.AttachRange({TEntity}[])",
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.AttachRange(`0[])\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.AttachRange(TEntity[])\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L61"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0},Microsoft.Data.Entity.GraphBehavior)",
            "id": "AttachRange_IEnumerable_TEntity___GraphBehavior_",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "AttachRange(IEnumerable<TEntity>, GraphBehavior)",
            "name.vb": "AttachRange(IEnumerable(Of TEntity), GraphBehavior)",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.AttachRange(System.Collections.Generic.IEnumerable<TEntity>, Microsoft.Data.Entity.GraphBehavior)",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).AttachRange(System.Collections.Generic.IEnumerable(Of TEntity), Microsoft.Data.Entity.GraphBehavior)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 72,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public override void AttachRange(IEnumerable<TEntity> entities, GraphBehavior behavior = 0)",
              "content.vb": "Public Overrides Sub AttachRange(entities As IEnumerable(Of TEntity), behavior As GraphBehavior = 0)",
              "parameters": [
                {
                  "id": "entities",
                  "type": {
                    "uid": "System.Collections.Generic.IEnumerable{{TEntity}}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IEnumerable`1",
                    "name": "IEnumerable<TEntity>",
                    "name.vb": "IEnumerable(Of TEntity)",
                    "fullName": "System.Collections.Generic.IEnumerable<TEntity>",
                    "fullName.vb": "System.Collections.Generic.IEnumerable(Of TEntity)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IEnumerable`1",
                        "name": "IEnumerable",
                        "fullName": "System.Collections.Generic.IEnumerable",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IEnumerable`1",
                        "name": "IEnumerable",
                        "fullName": "System.Collections.Generic.IEnumerable",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IEnumerable`1\" name=\"System.Collections.Generic.IEnumerable\"/>&lt;TEntity&gt;",
                    "id": "IEnumerable_TEntity_",
                    "level": 0
                  }
                },
                {
                  "id": "behavior",
                  "type": {
                    "uid": "Microsoft.Data.Entity.GraphBehavior",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.GraphBehavior.yml",
                    "name": "GraphBehavior",
                    "fullName": "Microsoft.Data.Entity.GraphBehavior",
                    "type": "enum",
                    "summary": "<p>Indicates how the navigation properties of an entity are traversed so that a given operation can be recursively\nperformed on the entities that it is related to.</p>\n",
                    "specName": "<xref href=\"Microsoft.Data.Entity.GraphBehavior\" name=\"Microsoft.Data.Entity.GraphBehavior\"/>",
                    "id": "GraphBehavior",
                    "level": 0
                  }
                }
              ]
            },
            "overridden": "Microsoft.Data.Entity.DbSet{{TEntity}}.AttachRange(System.Collections.Generic.IEnumerable{{TEntity}},Microsoft.Data.Entity.GraphBehavior)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0},Microsoft.Data.Entity.GraphBehavior)\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.AttachRange(System.Collections.Generic.IEnumerable&lt;TEntity&gt;, Microsoft.Data.Entity.GraphBehavior)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L73"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.Remove(`0)",
            "id": "Remove_TEntity_",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "Remove(TEntity)",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.Remove(TEntity)",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).Remove(TEntity)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 51,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public override EntityEntry<TEntity> Remove(TEntity entity)",
              "content.vb": "Public Overrides Function Remove(entity As TEntity) As EntityEntry(Of TEntity)",
              "parameters": [
                {
                  "id": "entity",
                  "type": {
                    "uid": "{TEntity}",
                    "isExternal": false,
                    "name": "TEntity",
                    "fullName": "TEntity",
                    "specName": "<xref href=\"{TEntity}\" name=\"TEntity\"/>",
                    "id": "TEntity",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry{{TEntity}}",
                  "parent": "Microsoft.Data.Entity.ChangeTracking",
                  "definition": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1",
                  "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1.yml",
                  "name": "EntityEntry<TEntity>",
                  "name.vb": "EntityEntry(Of TEntity)",
                  "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry<TEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.ChangeTracking.EntityEntry(Of TEntity)",
                  "spec.csharp": [
                    {
                      "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1",
                      "name": "EntityEntry",
                      "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1.yml"
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "name": "TEntity",
                      "fullName": "TEntity",
                      "isExternal": false
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1",
                      "name": "EntityEntry",
                      "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1.yml"
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "name": "TEntity",
                      "fullName": "TEntity",
                      "isExternal": false
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry`1\" name=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry\"/>&lt;TEntity&gt;",
                  "id": "EntityEntry_TEntity_",
                  "level": 0
                }
              }
            },
            "overridden": "Microsoft.Data.Entity.DbSet{{TEntity}}.Remove({TEntity})",
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.Remove(`0)\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.Remove(TEntity)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L52"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.RemoveRange(`0[])",
            "id": "RemoveRange_TEntity___",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "RemoveRange(TEntity[])",
            "name.vb": "RemoveRange(TEntity())",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.RemoveRange(TEntity[])",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).RemoveRange(TEntity())",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 63,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public override void RemoveRange(params TEntity[] entities)",
              "content.vb": "Public Overrides Sub RemoveRange(ParamArray entities As TEntity())",
              "parameters": [
                {
                  "id": "entities",
                  "type": {
                    "uid": "{TEntity}[]",
                    "isExternal": false,
                    "name": "TEntity[]",
                    "name.vb": "TEntity()",
                    "fullName": "TEntity[]",
                    "fullName.vb": "TEntity()",
                    "spec.csharp": [
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": "[]",
                        "fullName": "[]",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": "()",
                        "fullName": "()",
                        "isExternal": false
                      }
                    ],
                    "specName": "TEntity[]",
                    "id": "TEntity__",
                    "level": 0
                  }
                }
              ]
            },
            "overridden": "Microsoft.Data.Entity.DbSet{{TEntity}}.RemoveRange({TEntity}[])",
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.RemoveRange(`0[])\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.RemoveRange(TEntity[])\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L64"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})",
            "id": "RemoveRange_IEnumerable_TEntity__",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "RemoveRange(IEnumerable<TEntity>)",
            "name.vb": "RemoveRange(IEnumerable(Of TEntity))",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.RemoveRange(System.Collections.Generic.IEnumerable<TEntity>)",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).RemoveRange(System.Collections.Generic.IEnumerable(Of TEntity))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 75,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public override void RemoveRange(IEnumerable<TEntity> entities)",
              "content.vb": "Public Overrides Sub RemoveRange(entities As IEnumerable(Of TEntity))",
              "parameters": [
                {
                  "id": "entities",
                  "type": {
                    "uid": "System.Collections.Generic.IEnumerable{{TEntity}}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IEnumerable`1",
                    "name": "IEnumerable<TEntity>",
                    "name.vb": "IEnumerable(Of TEntity)",
                    "fullName": "System.Collections.Generic.IEnumerable<TEntity>",
                    "fullName.vb": "System.Collections.Generic.IEnumerable(Of TEntity)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IEnumerable`1",
                        "name": "IEnumerable",
                        "fullName": "System.Collections.Generic.IEnumerable",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IEnumerable`1",
                        "name": "IEnumerable",
                        "fullName": "System.Collections.Generic.IEnumerable",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IEnumerable`1\" name=\"System.Collections.Generic.IEnumerable\"/>&lt;TEntity&gt;",
                    "id": "IEnumerable_TEntity_",
                    "level": 0
                  }
                }
              ]
            },
            "overridden": "Microsoft.Data.Entity.DbSet{{TEntity}}.RemoveRange(System.Collections.Generic.IEnumerable{{TEntity}})",
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.RemoveRange(System.Collections.Generic.IEnumerable&lt;TEntity&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L76"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator",
            "id": "IEnumerable_TEntity__GetEnumerator__",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "IEnumerable<TEntity>.GetEnumerator()",
            "name.vb": "System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 81,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "IEnumerator<TEntity> IEnumerable<TEntity>.GetEnumerator()",
              "content.vb": "Function System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator As IEnumerator(Of TEntity) Implements IEnumerable(Of TEntity).GetEnumerator",
              "return": {
                "type": {
                  "uid": "System.Collections.Generic.IEnumerator{{TEntity}}",
                  "parent": "System.Collections.Generic",
                  "definition": "System.Collections.Generic.IEnumerator`1",
                  "name": "IEnumerator<TEntity>",
                  "name.vb": "IEnumerator(Of TEntity)",
                  "fullName": "System.Collections.Generic.IEnumerator<TEntity>",
                  "fullName.vb": "System.Collections.Generic.IEnumerator(Of TEntity)",
                  "spec.csharp": [
                    {
                      "uid": "System.Collections.Generic.IEnumerator`1",
                      "name": "IEnumerator",
                      "fullName": "System.Collections.Generic.IEnumerator",
                      "isExternal": true
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "name": "TEntity",
                      "fullName": "TEntity",
                      "isExternal": false
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "System.Collections.Generic.IEnumerator`1",
                      "name": "IEnumerator",
                      "fullName": "System.Collections.Generic.IEnumerator",
                      "isExternal": true
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "name": "TEntity",
                      "fullName": "TEntity",
                      "isExternal": false
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"System.Collections.Generic.IEnumerator`1\" name=\"System.Collections.Generic.IEnumerator\"/>&lt;TEntity&gt;",
                  "id": "IEnumerator_TEntity_",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.System.Collections.Generic.IEnumerable&lt;TEntity&gt;.GetEnumerator()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L82"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.System#Collections#IEnumerable#GetEnumerator",
            "id": "IEnumerable_GetEnumerator__",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "IEnumerable.GetEnumerator()",
            "name.vb": "System.Collections.IEnumerable.GetEnumerator()",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.System.Collections.IEnumerable.GetEnumerator()",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).System.Collections.IEnumerable.GetEnumerator()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 83,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "IEnumerator IEnumerable.GetEnumerator()",
              "content.vb": "Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator",
              "return": {
                "type": {
                  "uid": "System.Collections.IEnumerator",
                  "parent": "System.Collections",
                  "isExternal": true,
                  "name": "IEnumerator",
                  "fullName": "System.Collections.IEnumerator",
                  "specName": "<xref href=\"System.Collections.IEnumerator\" name=\"System.Collections.IEnumerator\"/>",
                  "id": "IEnumerator",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.System#Collections#IEnumerable#GetEnumerator\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.System.Collections.IEnumerable.GetEnumerator()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L84"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.Update(`0,Microsoft.Data.Entity.GraphBehavior)",
            "id": "Update_TEntity__GraphBehavior_",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "Update(TEntity, GraphBehavior)",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.Update(TEntity, Microsoft.Data.Entity.GraphBehavior)",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).Update(TEntity, Microsoft.Data.Entity.GraphBehavior)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 54,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public override EntityEntry<TEntity> Update(TEntity entity, GraphBehavior behavior = 0)",
              "content.vb": "Public Overrides Function Update(entity As TEntity, behavior As GraphBehavior = 0) As EntityEntry(Of TEntity)",
              "parameters": [
                {
                  "id": "entity",
                  "type": {
                    "uid": "{TEntity}",
                    "isExternal": false,
                    "name": "TEntity",
                    "fullName": "TEntity",
                    "specName": "<xref href=\"{TEntity}\" name=\"TEntity\"/>",
                    "id": "TEntity",
                    "level": 0
                  }
                },
                {
                  "id": "behavior",
                  "type": {
                    "uid": "Microsoft.Data.Entity.GraphBehavior",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.GraphBehavior.yml",
                    "name": "GraphBehavior",
                    "fullName": "Microsoft.Data.Entity.GraphBehavior",
                    "type": "enum",
                    "summary": "<p>Indicates how the navigation properties of an entity are traversed so that a given operation can be recursively\nperformed on the entities that it is related to.</p>\n",
                    "specName": "<xref href=\"Microsoft.Data.Entity.GraphBehavior\" name=\"Microsoft.Data.Entity.GraphBehavior\"/>",
                    "id": "GraphBehavior",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry{{TEntity}}",
                  "parent": "Microsoft.Data.Entity.ChangeTracking",
                  "definition": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1",
                  "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1.yml",
                  "name": "EntityEntry<TEntity>",
                  "name.vb": "EntityEntry(Of TEntity)",
                  "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry<TEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.ChangeTracking.EntityEntry(Of TEntity)",
                  "spec.csharp": [
                    {
                      "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1",
                      "name": "EntityEntry",
                      "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1.yml"
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "name": "TEntity",
                      "fullName": "TEntity",
                      "isExternal": false
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1",
                      "name": "EntityEntry",
                      "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry`1.yml"
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "name": "TEntity",
                      "fullName": "TEntity",
                      "isExternal": false
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry`1\" name=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry\"/>&lt;TEntity&gt;",
                  "id": "EntityEntry_TEntity_",
                  "level": 0
                }
              }
            },
            "overridden": "Microsoft.Data.Entity.DbSet{{TEntity}}.Update({TEntity},Microsoft.Data.Entity.GraphBehavior)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.Update(`0,Microsoft.Data.Entity.GraphBehavior)\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.Update(TEntity, Microsoft.Data.Entity.GraphBehavior)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L55"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.UpdateRange(`0[])",
            "id": "UpdateRange_TEntity___",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "UpdateRange(TEntity[])",
            "name.vb": "UpdateRange(TEntity())",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.UpdateRange(TEntity[])",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).UpdateRange(TEntity())",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 66,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public override void UpdateRange(params TEntity[] entities)",
              "content.vb": "Public Overrides Sub UpdateRange(ParamArray entities As TEntity())",
              "parameters": [
                {
                  "id": "entities",
                  "type": {
                    "uid": "{TEntity}[]",
                    "isExternal": false,
                    "name": "TEntity[]",
                    "name.vb": "TEntity()",
                    "fullName": "TEntity[]",
                    "fullName.vb": "TEntity()",
                    "spec.csharp": [
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": "[]",
                        "fullName": "[]",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": "()",
                        "fullName": "()",
                        "isExternal": false
                      }
                    ],
                    "specName": "TEntity[]",
                    "id": "TEntity__",
                    "level": 0
                  }
                }
              ]
            },
            "overridden": "Microsoft.Data.Entity.DbSet{{TEntity}}.UpdateRange({TEntity}[])",
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.UpdateRange(`0[])\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.UpdateRange(TEntity[])\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L67"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.InternalDbSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0},Microsoft.Data.Entity.GraphBehavior)",
            "id": "UpdateRange_IEnumerable_TEntity___GraphBehavior_",
            "parent": "Microsoft.Data.Entity.Internal.InternalDbSet`1",
            "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
            "name": "UpdateRange(IEnumerable<TEntity>, GraphBehavior)",
            "name.vb": "UpdateRange(IEnumerable(Of TEntity), GraphBehavior)",
            "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>.UpdateRange(System.Collections.Generic.IEnumerable<TEntity>, Microsoft.Data.Entity.GraphBehavior)",
            "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity).UpdateRange(System.Collections.Generic.IEnumerable(Of TEntity), Microsoft.Data.Entity.GraphBehavior)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
              "startLine": 78,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public override void UpdateRange(IEnumerable<TEntity> entities, GraphBehavior behavior = 0)",
              "content.vb": "Public Overrides Sub UpdateRange(entities As IEnumerable(Of TEntity), behavior As GraphBehavior = 0)",
              "parameters": [
                {
                  "id": "entities",
                  "type": {
                    "uid": "System.Collections.Generic.IEnumerable{{TEntity}}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IEnumerable`1",
                    "name": "IEnumerable<TEntity>",
                    "name.vb": "IEnumerable(Of TEntity)",
                    "fullName": "System.Collections.Generic.IEnumerable<TEntity>",
                    "fullName.vb": "System.Collections.Generic.IEnumerable(Of TEntity)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IEnumerable`1",
                        "name": "IEnumerable",
                        "fullName": "System.Collections.Generic.IEnumerable",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IEnumerable`1",
                        "name": "IEnumerable",
                        "fullName": "System.Collections.Generic.IEnumerable",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "TEntity",
                        "fullName": "TEntity",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IEnumerable`1\" name=\"System.Collections.Generic.IEnumerable\"/>&lt;TEntity&gt;",
                    "id": "IEnumerable_TEntity_",
                    "level": 0
                  }
                },
                {
                  "id": "behavior",
                  "type": {
                    "uid": "Microsoft.Data.Entity.GraphBehavior",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.GraphBehavior.yml",
                    "name": "GraphBehavior",
                    "fullName": "Microsoft.Data.Entity.GraphBehavior",
                    "type": "enum",
                    "summary": "<p>Indicates how the navigation properties of an entity are traversed so that a given operation can be recursively\nperformed on the entities that it is related to.</p>\n",
                    "specName": "<xref href=\"Microsoft.Data.Entity.GraphBehavior\" name=\"Microsoft.Data.Entity.GraphBehavior\"/>",
                    "id": "GraphBehavior",
                    "level": 0
                  }
                }
              ]
            },
            "overridden": "Microsoft.Data.Entity.DbSet{{TEntity}}.UpdateRange(System.Collections.Generic.IEnumerable{{TEntity}},Microsoft.Data.Entity.GraphBehavior)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0},Microsoft.Data.Entity.GraphBehavior)\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;.UpdateRange(System.Collections.Generic.IEnumerable&lt;TEntity&gt;, Microsoft.Data.Entity.GraphBehavior)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L79"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Internal.InternalDbSet`1.yml",
    "name": "InternalDbSet<TEntity>",
    "name.vb": "InternalDbSet(Of TEntity)",
    "fullName": "Microsoft.Data.Entity.Internal.InternalDbSet<TEntity>",
    "fullName.vb": "Microsoft.Data.Entity.Internal.InternalDbSet(Of TEntity)",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Internal/InternalDbSet.cs",
      "startLine": 16,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Internal",
    "syntax": {
      "content": "public class InternalDbSet<TEntity> : DbSet<TEntity>, IListSource, IOrderedQueryable<TEntity>, IQueryable<TEntity>, IEnumerable<TEntity>, IOrderedQueryable, IQueryable, IEnumerable, IAsyncEnumerableAccessor<TEntity>, IInfrastructure<IServiceProvider> where TEntity : class",
      "content.vb": "Public Class InternalDbSet(Of TEntity As Class) Inherits DbSet(Of TEntity) Implements IListSource, IOrderedQueryable(Of TEntity), IQueryable(Of TEntity), IEnumerable(Of TEntity), IOrderedQueryable, IQueryable, IEnumerable, IAsyncEnumerableAccessor(Of TEntity), IInfrastructure(Of IServiceProvider)",
      "typeParameters": [
        {
          "id": "TEntity"
        }
      ]
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      },
      {
        "uid": "Microsoft.Data.Entity.DbSet{{TEntity}}",
        "parent": "Microsoft.Data.Entity",
        "definition": "Microsoft.Data.Entity.DbSet`1",
        "href": "Microsoft.Data.Entity.DbSet`1.yml",
        "name": "DbSet<TEntity>",
        "name.vb": "DbSet(Of TEntity)",
        "fullName": "Microsoft.Data.Entity.DbSet<TEntity>",
        "fullName.vb": "Microsoft.Data.Entity.DbSet(Of TEntity)",
        "spec.csharp": [
          {
            "uid": "Microsoft.Data.Entity.DbSet`1",
            "name": "DbSet",
            "fullName": "Microsoft.Data.Entity.DbSet",
            "isExternal": false,
            "href": "Microsoft.Data.Entity.DbSet`1.yml"
          },
          {
            "name": "<",
            "fullName": "<",
            "isExternal": false
          },
          {
            "name": "TEntity",
            "fullName": "TEntity",
            "isExternal": false
          },
          {
            "name": ">",
            "fullName": ">",
            "isExternal": false
          }
        ],
        "spec.vb": [
          {
            "uid": "Microsoft.Data.Entity.DbSet`1",
            "name": "DbSet",
            "fullName": "Microsoft.Data.Entity.DbSet",
            "isExternal": false,
            "href": "Microsoft.Data.Entity.DbSet`1.yml"
          },
          {
            "name": "(Of ",
            "fullName": "(Of ",
            "isExternal": false
          },
          {
            "name": "TEntity",
            "fullName": "TEntity",
            "isExternal": false
          },
          {
            "name": ")",
            "fullName": ")",
            "isExternal": false
          }
        ],
        "specName": "<xref href=\"Microsoft.Data.Entity.DbSet`1\" name=\"Microsoft.Data.Entity.DbSet\"/>&lt;TEntity&gt;",
        "id": "DbSet_TEntity_",
        "level": 0,
        "index": 1
      }
    ],
    "implements": [
      "System.ComponentModel.IListSource",
      "System.Linq.IOrderedQueryable{{TEntity}}",
      "System.Linq.IQueryable{{TEntity}}",
      "System.Collections.Generic.IEnumerable{{TEntity}}",
      "System.Linq.IOrderedQueryable",
      "System.Linq.IQueryable",
      "System.Collections.IEnumerable",
      "Microsoft.Data.Entity.Query.Internal.IAsyncEnumerableAccessor{{TEntity}}",
      "Microsoft.Data.Entity.Infrastructure.IInfrastructure{System.IServiceProvider}"
    ],
    "inheritedMembers": [
      "Microsoft.Data.Entity.DbSet{{TEntity}}.System#ComponentModel#IListSource#GetList",
      "Microsoft.Data.Entity.DbSet{{TEntity}}.System#ComponentModel#IListSource#ContainsListCollection",
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Internal.InternalDbSet`1\" name=\"Microsoft.Data.Entity.Internal.InternalDbSet&lt;TEntity&gt;\"/>",
    "level": 2,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/InternalDbSet.cs/#L17"
  },
  "isClass": true,
  "_allowToc": true
}
