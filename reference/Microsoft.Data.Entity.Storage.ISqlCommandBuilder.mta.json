
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Storage.ISqlCommandBuilder",
    "id": "ISqlCommandBuilder",
    "parent": "Microsoft.Data.Entity.Storage",
    "children": [
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Storage.ISqlCommandBuilder.Build(System.String,System.Collections.Generic.IReadOnlyList{System.Object})",
            "id": "Build_String__IReadOnlyList_Object__",
            "parent": "Microsoft.Data.Entity.Storage.ISqlCommandBuilder",
            "href": "Microsoft.Data.Entity.Storage.ISqlCommandBuilder.yml",
            "name": "Build(String, IReadOnlyList<Object>)",
            "name.vb": "Build(String, IReadOnlyList(Of Object))",
            "fullName": "Microsoft.Data.Entity.Storage.ISqlCommandBuilder.Build(System.String, System.Collections.Generic.IReadOnlyList<System.Object>)",
            "fullName.vb": "Microsoft.Data.Entity.Storage.ISqlCommandBuilder.Build(System.String, System.Collections.Generic.IReadOnlyList(Of System.Object))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/ISqlCommandBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/ISqlCommandBuilder.cs",
              "startLine": 10,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "IRelationalCommand Build(string sql, IReadOnlyList<object> parameters = null)",
              "content.vb": "Function Build(sql As String, parameters As IReadOnlyList(Of Object) = Nothing) As IRelationalCommand",
              "parameters": [
                {
                  "id": "sql",
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  }
                },
                {
                  "id": "parameters",
                  "type": {
                    "uid": "System.Collections.Generic.IReadOnlyList{System.Object}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IReadOnlyList`1",
                    "name": "IReadOnlyList<Object>",
                    "name.vb": "IReadOnlyList(Of Object)",
                    "fullName": "System.Collections.Generic.IReadOnlyList<System.Object>",
                    "fullName.vb": "System.Collections.Generic.IReadOnlyList(Of System.Object)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyList`1",
                        "name": "IReadOnlyList",
                        "fullName": "System.Collections.Generic.IReadOnlyList",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyList`1",
                        "name": "IReadOnlyList",
                        "fullName": "System.Collections.Generic.IReadOnlyList",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IReadOnlyList`1\" name=\"System.Collections.Generic.IReadOnlyList\"/>&lt;<xref href=\"System.Object\" name=\"System.Object\"/>&gt;",
                    "id": "IReadOnlyList_Object_",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Storage.IRelationalCommand",
                  "isExternal": false,
                  "href": "Microsoft.Data.Entity.Storage.IRelationalCommand.yml",
                  "name": "IRelationalCommand",
                  "fullName": "Microsoft.Data.Entity.Storage.IRelationalCommand",
                  "type": "interface",
                  "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalCommand\" name=\"Microsoft.Data.Entity.Storage.IRelationalCommand\"/>",
                  "id": "IRelationalCommand",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.ISqlCommandBuilder.Build(System.String,System.Collections.Generic.IReadOnlyList{System.Object})\" name=\"Microsoft.Data.Entity.Storage.ISqlCommandBuilder.Build(System.String, System.Collections.Generic.IReadOnlyList&lt;System.Object&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/ISqlCommandBuilder.cs/#L11"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Storage.ISqlCommandBuilder.yml",
    "name": "ISqlCommandBuilder",
    "fullName": "Microsoft.Data.Entity.Storage.ISqlCommandBuilder",
    "type": "Interface",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Relational/Storage/ISqlCommandBuilder.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Relational/Storage/ISqlCommandBuilder.cs",
      "startLine": 8,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Relational"
    ],
    "namespace": "Microsoft.Data.Entity.Storage",
    "syntax": {
      "content": "public interface ISqlCommandBuilder",
      "content.vb": "Public Interface ISqlCommandBuilder"
    },
    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.ISqlCommandBuilder\" name=\"Microsoft.Data.Entity.Storage.ISqlCommandBuilder\"/>",
    "level": 0,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/ISqlCommandBuilder.cs/#L9"
  },
  "isClass": true,
  "_allowToc": true
}
