
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
    "id": "ExpressionPrinter",
    "parent": "Microsoft.Data.Entity.Query.Internal",
    "children": [
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.Append",
            "id": "Append",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "Append",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.Append",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 32,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
                "content": "protected static Action<IndentedStringBuilder, string> Append { get; }",
                "content.vb": "Protected Shared ReadOnly Property Append As Action(Of IndentedStringBuilder, String)",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Action{Microsoft.Data.Entity.Internal.IndentedStringBuilder,System.String}",
                    "parent": "System",
                    "definition": "System.Action`2",
                    "href": "Microsoft.Data.Entity.Internal.IndentedStringBuilder.yml",
                    "name": "Action<IndentedStringBuilder, String>",
                    "name.vb": "Action(Of IndentedStringBuilder, String)",
                    "fullName": "System.Action<Microsoft.Data.Entity.Internal.IndentedStringBuilder, System.String>",
                    "fullName.vb": "System.Action(Of Microsoft.Data.Entity.Internal.IndentedStringBuilder, System.String)",
                    "spec.csharp": [
                      {
                        "uid": "System.Action`2",
                        "name": "Action",
                        "fullName": "System.Action",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Internal.IndentedStringBuilder",
                        "name": "IndentedStringBuilder",
                        "fullName": "Microsoft.Data.Entity.Internal.IndentedStringBuilder",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Internal.IndentedStringBuilder.yml"
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Action`2",
                        "name": "Action",
                        "fullName": "System.Action",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Internal.IndentedStringBuilder",
                        "name": "IndentedStringBuilder",
                        "fullName": "Microsoft.Data.Entity.Internal.IndentedStringBuilder",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Internal.IndentedStringBuilder.yml"
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Action`2\" name=\"System.Action\"/>&lt;<xref href=\"Microsoft.Data.Entity.Internal.IndentedStringBuilder\" name=\"Microsoft.Data.Entity.Internal.IndentedStringBuilder\"/>, <xref href=\"System.String\" name=\"System.String\"/>&gt;",
                    "id": "Action_IndentedStringBuilder__String_",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.Append\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.Append\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L33"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.AppendLine",
            "id": "AppendLine",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "AppendLine",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.AppendLine",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 37,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
                "content": "protected static Action<IndentedStringBuilder, string> AppendLine { get; }",
                "content.vb": "Protected Shared ReadOnly Property AppendLine As Action(Of IndentedStringBuilder, String)",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Action{Microsoft.Data.Entity.Internal.IndentedStringBuilder,System.String}",
                    "parent": "System",
                    "definition": "System.Action`2",
                    "href": "Microsoft.Data.Entity.Internal.IndentedStringBuilder.yml",
                    "name": "Action<IndentedStringBuilder, String>",
                    "name.vb": "Action(Of IndentedStringBuilder, String)",
                    "fullName": "System.Action<Microsoft.Data.Entity.Internal.IndentedStringBuilder, System.String>",
                    "fullName.vb": "System.Action(Of Microsoft.Data.Entity.Internal.IndentedStringBuilder, System.String)",
                    "spec.csharp": [
                      {
                        "uid": "System.Action`2",
                        "name": "Action",
                        "fullName": "System.Action",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Internal.IndentedStringBuilder",
                        "name": "IndentedStringBuilder",
                        "fullName": "Microsoft.Data.Entity.Internal.IndentedStringBuilder",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Internal.IndentedStringBuilder.yml"
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Action`2",
                        "name": "Action",
                        "fullName": "System.Action",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Internal.IndentedStringBuilder",
                        "name": "IndentedStringBuilder",
                        "fullName": "Microsoft.Data.Entity.Internal.IndentedStringBuilder",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Internal.IndentedStringBuilder.yml"
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Action`2\" name=\"System.Action\"/>&lt;<xref href=\"Microsoft.Data.Entity.Internal.IndentedStringBuilder\" name=\"Microsoft.Data.Entity.Internal.IndentedStringBuilder\"/>, <xref href=\"System.String\" name=\"System.String\"/>&gt;",
                    "id": "Action_IndentedStringBuilder__String_",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.AppendLine\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.AppendLine\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L38"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.TrackedQuery",
            "id": "TrackedQuery",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "TrackedQuery",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.TrackedQuery",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 67,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
                "content": "public virtual bool TrackedQuery { get; }",
                "content.vb": "Public Overridable ReadOnly Property TrackedQuery As Boolean",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.TrackedQuery\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.TrackedQuery\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L68"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.GetConstantPrinters",
            "id": "GetConstantPrinters__",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "GetConstantPrinters()",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.GetConstantPrinters()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 58,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected virtual List<ExpressionPrinter.IConstantPrinter> GetConstantPrinters()",
              "content.vb": "Protected Overridable Function GetConstantPrinters As List(Of ExpressionPrinter.IConstantPrinter)",
              "return": {
                "type": {
                  "uid": "System.Collections.Generic.List{Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.IConstantPrinter}",
                  "parent": "System.Collections.Generic",
                  "definition": "System.Collections.Generic.List`1",
                  "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.IConstantPrinter.yml",
                  "name": "List<ExpressionPrinter.IConstantPrinter>",
                  "name.vb": "List(Of ExpressionPrinter.IConstantPrinter)",
                  "fullName": "System.Collections.Generic.List<Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.IConstantPrinter>",
                  "fullName.vb": "System.Collections.Generic.List(Of Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.IConstantPrinter)",
                  "spec.csharp": [
                    {
                      "uid": "System.Collections.Generic.List`1",
                      "name": "List",
                      "fullName": "System.Collections.Generic.List",
                      "isExternal": true
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.IConstantPrinter",
                      "name": "ExpressionPrinter.IConstantPrinter",
                      "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.IConstantPrinter",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.IConstantPrinter.yml"
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "System.Collections.Generic.List`1",
                      "name": "List",
                      "fullName": "System.Collections.Generic.List",
                      "isExternal": true
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.IConstantPrinter",
                      "name": "ExpressionPrinter.IConstantPrinter",
                      "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.IConstantPrinter",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.IConstantPrinter.yml"
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"System.Collections.Generic.List`1\" name=\"System.Collections.Generic.List\"/>&lt;<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.IConstantPrinter\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.IConstantPrinter\"/>&gt;",
                  "id": "List_ExpressionPrinter_IConstantPrinter_",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.GetConstantPrinters\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.GetConstantPrinters()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L59"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.PostProcess(System.String)",
            "id": "PostProcess_String_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "PostProcess(String)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.PostProcess(System.String)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 478,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected virtual string PostProcess(string queryPlan)",
              "content.vb": "Protected Overridable Function PostProcess(queryPlan As String) As String",
              "parameters": [
                {
                  "id": "queryPlan",
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.String",
                  "parent": "System",
                  "isExternal": true,
                  "name": "String",
                  "fullName": "System.String",
                  "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                  "id": "String",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.PostProcess(System.String)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.PostProcess(System.String)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L479"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.Print(System.Linq.Expressions.Expression)",
            "id": "Print_Expression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "Print(Expression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.Print(System.Linq.Expressions.Expression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 42,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "public virtual string Print(Expression expression)",
              "content.vb": "Public Overridable Function Print(expression As Expression) As String",
              "parameters": [
                {
                  "id": "expression",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "Expression",
                    "fullName": "System.Linq.Expressions.Expression",
                    "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                    "id": "Expression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.String",
                  "parent": "System",
                  "isExternal": true,
                  "name": "String",
                  "fullName": "System.String",
                  "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                  "id": "String",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.Print(System.Linq.Expressions.Expression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.Print(System.Linq.Expressions.Expression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L43"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.Visit(System.Linq.Expressions.Expression)",
            "id": "Visit_Expression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "Visit(Expression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.Visit(System.Linq.Expressions.Expression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 69,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "public override Expression Visit(Expression node)",
              "content.vb": "Public Overrides Function Visit(node As Expression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "Expression",
                    "fullName": "System.Linq.Expressions.Expression",
                    "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                    "id": "Expression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.Visit(System.Linq.Expressions.Expression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.Visit(System.Linq.Expressions.Expression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L70"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitBinary(System.Linq.Expressions.BinaryExpression)",
            "id": "VisitBinary_BinaryExpression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitBinary(BinaryExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitBinary(System.Linq.Expressions.BinaryExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 147,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitBinary(BinaryExpression node)",
              "content.vb": "Protected Overrides Function VisitBinary(node As BinaryExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.BinaryExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "BinaryExpression",
                    "fullName": "System.Linq.Expressions.BinaryExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.BinaryExpression\" name=\"System.Linq.Expressions.BinaryExpression\"/>",
                    "id": "BinaryExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitBinary(System.Linq.Expressions.BinaryExpression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitBinary(System.Linq.Expressions.BinaryExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L148"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitBlock(System.Linq.Expressions.BlockExpression)",
            "id": "VisitBlock_BlockExpression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitBlock(BlockExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitBlock(System.Linq.Expressions.BlockExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 175,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitBlock(BlockExpression node)",
              "content.vb": "Protected Overrides Function VisitBlock(node As BlockExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.BlockExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "BlockExpression",
                    "fullName": "System.Linq.Expressions.BlockExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.BlockExpression\" name=\"System.Linq.Expressions.BlockExpression\"/>",
                    "id": "BlockExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitBlock(System.Linq.Expressions.BlockExpression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitBlock(System.Linq.Expressions.BlockExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L176"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitConditional(System.Linq.Expressions.ConditionalExpression)",
            "id": "VisitConditional_ConditionalExpression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitConditional(ConditionalExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitConditional(System.Linq.Expressions.ConditionalExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 214,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitConditional(ConditionalExpression node)",
              "content.vb": "Protected Overrides Function VisitConditional(node As ConditionalExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.ConditionalExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "ConditionalExpression",
                    "fullName": "System.Linq.Expressions.ConditionalExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.ConditionalExpression\" name=\"System.Linq.Expressions.ConditionalExpression\"/>",
                    "id": "ConditionalExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitConditional(System.Linq.Expressions.ConditionalExpression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitConditional(System.Linq.Expressions.ConditionalExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L215"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitConstant(System.Linq.Expressions.ConstantExpression)",
            "id": "VisitConstant_ConstantExpression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitConstant(ConstantExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitConstant(System.Linq.Expressions.ConstantExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 229,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitConstant(ConstantExpression node)",
              "content.vb": "Protected Overrides Function VisitConstant(node As ConstantExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.ConstantExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "ConstantExpression",
                    "fullName": "System.Linq.Expressions.ConstantExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.ConstantExpression\" name=\"System.Linq.Expressions.ConstantExpression\"/>",
                    "id": "ConstantExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitConstant(System.Linq.Expressions.ConstantExpression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitConstant(System.Linq.Expressions.ConstantExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L230"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitGoto(System.Linq.Expressions.GotoExpression)",
            "id": "VisitGoto_GotoExpression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitGoto(GotoExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitGoto(System.Linq.Expressions.GotoExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 242,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitGoto(GotoExpression node)",
              "content.vb": "Protected Overrides Function VisitGoto(node As GotoExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.GotoExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "GotoExpression",
                    "fullName": "System.Linq.Expressions.GotoExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.GotoExpression\" name=\"System.Linq.Expressions.GotoExpression\"/>",
                    "id": "GotoExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitGoto(System.Linq.Expressions.GotoExpression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitGoto(System.Linq.Expressions.GotoExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L243"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitLabel(System.Linq.Expressions.LabelExpression)",
            "id": "VisitLabel_LabelExpression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitLabel(LabelExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitLabel(System.Linq.Expressions.LabelExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 255,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitLabel(LabelExpression node)",
              "content.vb": "Protected Overrides Function VisitLabel(node As LabelExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.LabelExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "LabelExpression",
                    "fullName": "System.Linq.Expressions.LabelExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.LabelExpression\" name=\"System.Linq.Expressions.LabelExpression\"/>",
                    "id": "LabelExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitLabel(System.Linq.Expressions.LabelExpression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitLabel(System.Linq.Expressions.LabelExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L256"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitLambda``1(System.Linq.Expressions.Expression{``0})",
            "id": "VisitLambda_T__Expression_T__",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitLambda<T>(Expression<T>)",
            "name.vb": "VisitLambda(Of T)(Expression(Of T))",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitLambda<T>(System.Linq.Expressions.Expression<T>)",
            "fullName.vb": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 262,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitLambda<T>(Expression<T> node)",
              "content.vb": "Protected Overrides Function VisitLambda(Of T)(node As Expression(Of T)) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression{{T}}",
                    "parent": "System.Linq.Expressions",
                    "definition": "System.Linq.Expressions.Expression`1",
                    "name": "Expression<T>",
                    "name.vb": "Expression(Of T)",
                    "fullName": "System.Linq.Expressions.Expression<T>",
                    "fullName.vb": "System.Linq.Expressions.Expression(Of T)",
                    "spec.csharp": [
                      {
                        "uid": "System.Linq.Expressions.Expression`1",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "T",
                        "fullName": "T",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Linq.Expressions.Expression`1",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "T",
                        "fullName": "T",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Linq.Expressions.Expression`1\" name=\"System.Linq.Expressions.Expression\"/>&lt;T&gt;",
                    "id": "Expression_T_",
                    "level": 0
                  }
                }
              ],
              "typeParameters": [
                {
                  "id": "T"
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{{T}})",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitLambda``1(System.Linq.Expressions.Expression{``0})\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitLambda&lt;T&gt;(System.Linq.Expressions.Expression&lt;T&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L263"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitMember(System.Linq.Expressions.MemberExpression)",
            "id": "VisitMember_MemberExpression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitMember(MemberExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitMember(System.Linq.Expressions.MemberExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 289,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitMember(MemberExpression node)",
              "content.vb": "Protected Overrides Function VisitMember(node As MemberExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.MemberExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "MemberExpression",
                    "fullName": "System.Linq.Expressions.MemberExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.MemberExpression\" name=\"System.Linq.Expressions.MemberExpression\"/>",
                    "id": "MemberExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitMember(System.Linq.Expressions.MemberExpression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitMember(System.Linq.Expressions.MemberExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L290"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)",
            "id": "VisitMemberInit_MemberInitExpression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitMemberInit(MemberInitExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 305,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitMemberInit(MemberInitExpression node)",
              "content.vb": "Protected Overrides Function VisitMemberInit(node As MemberInitExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.MemberInitExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "MemberInitExpression",
                    "fullName": "System.Linq.Expressions.MemberInitExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.MemberInitExpression\" name=\"System.Linq.Expressions.MemberInitExpression\"/>",
                    "id": "MemberInitExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L306"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)",
            "id": "VisitMethodCall_MethodCallExpression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitMethodCall(MethodCallExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 334,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitMethodCall(MethodCallExpression node)",
              "content.vb": "Protected Overrides Function VisitMethodCall(node As MethodCallExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.MethodCallExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "MethodCallExpression",
                    "fullName": "System.Linq.Expressions.MethodCallExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.MethodCallExpression\" name=\"System.Linq.Expressions.MethodCallExpression\"/>",
                    "id": "MethodCallExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L335"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitNew(System.Linq.Expressions.NewExpression)",
            "id": "VisitNew_NewExpression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitNew(NewExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitNew(System.Linq.Expressions.NewExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 400,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitNew(NewExpression node)",
              "content.vb": "Protected Overrides Function VisitNew(node As NewExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.NewExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "NewExpression",
                    "fullName": "System.Linq.Expressions.NewExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.NewExpression\" name=\"System.Linq.Expressions.NewExpression\"/>",
                    "id": "NewExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitNew(System.Linq.Expressions.NewExpression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitNew(System.Linq.Expressions.NewExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L401"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)",
            "id": "VisitNewArray_NewArrayExpression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitNewArray(NewArrayExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 421,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitNewArray(NewArrayExpression node)",
              "content.vb": "Protected Overrides Function VisitNewArray(node As NewArrayExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.NewArrayExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "NewArrayExpression",
                    "fullName": "System.Linq.Expressions.NewArrayExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.NewArrayExpression\" name=\"System.Linq.Expressions.NewArrayExpression\"/>",
                    "id": "NewArrayExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L422"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitParameter(System.Linq.Expressions.ParameterExpression)",
            "id": "VisitParameter_ParameterExpression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitParameter(ParameterExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitParameter(System.Linq.Expressions.ParameterExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 440,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitParameter(ParameterExpression node)",
              "content.vb": "Protected Overrides Function VisitParameter(node As ParameterExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.ParameterExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "ParameterExpression",
                    "fullName": "System.Linq.Expressions.ParameterExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.ParameterExpression\" name=\"System.Linq.Expressions.ParameterExpression\"/>",
                    "id": "ParameterExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitParameter(System.Linq.Expressions.ParameterExpression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitParameter(System.Linq.Expressions.ParameterExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L441"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitUnary(System.Linq.Expressions.UnaryExpression)",
            "id": "VisitUnary_UnaryExpression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
            "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
            "name": "VisitUnary(UnaryExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitUnary(System.Linq.Expressions.UnaryExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
              "startLine": 454,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected override Expression VisitUnary(UnaryExpression node)",
              "content.vb": "Protected Overrides Function VisitUnary(node As UnaryExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.UnaryExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "UnaryExpression",
                    "fullName": "System.Linq.Expressions.UnaryExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.UnaryExpression\" name=\"System.Linq.Expressions.UnaryExpression\"/>",
                    "id": "UnaryExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitUnary(System.Linq.Expressions.UnaryExpression)\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.VisitUnary(System.Linq.Expressions.UnaryExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L455"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter.yml",
    "name": "ExpressionPrinter",
    "fullName": "Microsoft.Data.Entity.Query.Internal.ExpressionPrinter",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs",
      "startLine": 13,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Query.Internal",
    "syntax": {
      "content": "public class ExpressionPrinter : ExpressionVisitor, IExpressionPrinter",
      "content.vb": "Public Class ExpressionPrinter Inherits ExpressionVisitor Implements IExpressionPrinter"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      },
      {
        "uid": "System.Linq.Expressions.ExpressionVisitor",
        "parent": "System.Linq.Expressions",
        "isExternal": true,
        "name": "ExpressionVisitor",
        "fullName": "System.Linq.Expressions.ExpressionVisitor",
        "specName": "<xref href=\"System.Linq.Expressions.ExpressionVisitor\" name=\"System.Linq.Expressions.ExpressionVisitor\"/>",
        "id": "ExpressionVisitor",
        "level": 0,
        "index": 1
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Query.Internal.IExpressionPrinter"
    ],
    "inheritedMembers": [
      "System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})",
      "System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.Func{{T},{T}})",
      "System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1({T},System.String)",
      "System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.String)",
      "System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)",
      "System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)",
      "System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)",
      "System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)",
      "System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)",
      "System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)",
      "System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)",
      "System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)",
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter\" name=\"Microsoft.Data.Entity.Query.Internal.ExpressionPrinter\"/>",
    "level": 2,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/ExpressionPrinter.cs/#L14"
  },
  "isClass": true,
  "_allowToc": true
}
