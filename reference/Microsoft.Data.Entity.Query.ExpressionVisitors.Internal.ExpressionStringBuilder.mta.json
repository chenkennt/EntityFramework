
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
    "id": "ExpressionStringBuilder",
    "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.#ctor",
            "id": "ExpressionStringBuilder__",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "ExpressionStringBuilder()",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.ExpressionStringBuilder()",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 24,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "public ExpressionStringBuilder()",
              "content.vb": "Public Sub New"
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.#ctor\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.ExpressionStringBuilder()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L25"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.Build(System.Linq.Expressions.Expression)",
            "id": "Build_Expression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "Build(Expression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.Build(System.Linq.Expressions.Expression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 29,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "public virtual string Build(Expression node)",
              "content.vb": "Public Overridable Function Build(node As Expression) As String",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "Expression",
                    "fullName": "System.Linq.Expressions.Expression",
                    "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                    "id": "Expression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.String",
                  "parent": "System",
                  "isExternal": true,
                  "name": "String",
                  "fullName": "System.String",
                  "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                  "id": "String",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.Build(System.Linq.Expressions.Expression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.Build(System.Linq.Expressions.Expression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L30"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.ToString",
            "id": "ToString__",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "ToString()",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.ToString()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 40,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "public override string ToString()",
              "content.vb": "Public Overrides Function ToString As String",
              "return": {
                "type": {
                  "uid": "System.String",
                  "parent": "System",
                  "isExternal": true,
                  "name": "String",
                  "fullName": "System.String",
                  "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                  "id": "String",
                  "level": 0
                }
              }
            },
            "overridden": "System.Object.ToString",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.ToString\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.ToString()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L41"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitBinary(System.Linq.Expressions.BinaryExpression)",
            "id": "VisitBinary_BinaryExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitBinary(BinaryExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitBinary(System.Linq.Expressions.BinaryExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 136,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitBinary(BinaryExpression node)",
              "content.vb": "Protected Overrides Function VisitBinary(node As BinaryExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.BinaryExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "BinaryExpression",
                    "fullName": "System.Linq.Expressions.BinaryExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.BinaryExpression\" name=\"System.Linq.Expressions.BinaryExpression\"/>",
                    "id": "BinaryExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitBinary(System.Linq.Expressions.BinaryExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitBinary(System.Linq.Expressions.BinaryExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L137"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitBlock(System.Linq.Expressions.BlockExpression)",
            "id": "VisitBlock_BlockExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitBlock(BlockExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitBlock(System.Linq.Expressions.BlockExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 711,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitBlock(BlockExpression node)",
              "content.vb": "Protected Overrides Function VisitBlock(node As BlockExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.BlockExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "BlockExpression",
                    "fullName": "System.Linq.Expressions.BlockExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.BlockExpression\" name=\"System.Linq.Expressions.BlockExpression\"/>",
                    "id": "BlockExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitBlock(System.Linq.Expressions.BlockExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitBlock(System.Linq.Expressions.BlockExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L712"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitCatchBlock(System.Linq.Expressions.CatchBlock)",
            "id": "VisitCatchBlock_CatchBlock_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitCatchBlock(CatchBlock)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitCatchBlock(System.Linq.Expressions.CatchBlock)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 776,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override CatchBlock VisitCatchBlock(CatchBlock node)",
              "content.vb": "Protected Overrides Function VisitCatchBlock(node As CatchBlock) As CatchBlock",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.CatchBlock",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "CatchBlock",
                    "fullName": "System.Linq.Expressions.CatchBlock",
                    "specName": "<xref href=\"System.Linq.Expressions.CatchBlock\" name=\"System.Linq.Expressions.CatchBlock\"/>",
                    "id": "CatchBlock",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.CatchBlock",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "CatchBlock",
                  "fullName": "System.Linq.Expressions.CatchBlock",
                  "specName": "<xref href=\"System.Linq.Expressions.CatchBlock\" name=\"System.Linq.Expressions.CatchBlock\"/>",
                  "id": "CatchBlock",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitCatchBlock(System.Linq.Expressions.CatchBlock)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitCatchBlock(System.Linq.Expressions.CatchBlock)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L777"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitConditional(System.Linq.Expressions.ConditionalExpression)",
            "id": "VisitConditional_ConditionalExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitConditional(ConditionalExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitConditional(System.Linq.Expressions.ConditionalExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 362,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitConditional(ConditionalExpression node)",
              "content.vb": "Protected Overrides Function VisitConditional(node As ConditionalExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.ConditionalExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "ConditionalExpression",
                    "fullName": "System.Linq.Expressions.ConditionalExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.ConditionalExpression\" name=\"System.Linq.Expressions.ConditionalExpression\"/>",
                    "id": "ConditionalExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitConditional(System.Linq.Expressions.ConditionalExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitConditional(System.Linq.Expressions.ConditionalExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L363"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitConstant(System.Linq.Expressions.ConstantExpression)",
            "id": "VisitConstant_ConstantExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitConstant(ConstantExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitConstant(System.Linq.Expressions.ConstantExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 374,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitConstant(ConstantExpression node)",
              "content.vb": "Protected Overrides Function VisitConstant(node As ConstantExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.ConstantExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "ConstantExpression",
                    "fullName": "System.Linq.Expressions.ConstantExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.ConstantExpression\" name=\"System.Linq.Expressions.ConstantExpression\"/>",
                    "id": "ConstantExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitConstant(System.Linq.Expressions.ConstantExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitConstant(System.Linq.Expressions.ConstantExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L375"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)",
            "id": "VisitDebugInfo_DebugInfoExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitDebugInfo(DebugInfoExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 403,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitDebugInfo(DebugInfoExpression node)",
              "content.vb": "Protected Overrides Function VisitDebugInfo(node As DebugInfoExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.DebugInfoExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "DebugInfoExpression",
                    "fullName": "System.Linq.Expressions.DebugInfoExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.DebugInfoExpression\" name=\"System.Linq.Expressions.DebugInfoExpression\"/>",
                    "id": "DebugInfoExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L404"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitDefault(System.Linq.Expressions.DefaultExpression)",
            "id": "VisitDefault_DefaultExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitDefault(DefaultExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitDefault(System.Linq.Expressions.DefaultExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 724,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitDefault(DefaultExpression node)",
              "content.vb": "Protected Overrides Function VisitDefault(node As DefaultExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.DefaultExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "DefaultExpression",
                    "fullName": "System.Linq.Expressions.DefaultExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.DefaultExpression\" name=\"System.Linq.Expressions.DefaultExpression\"/>",
                    "id": "DefaultExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitDefault(System.Linq.Expressions.DefaultExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitDefault(System.Linq.Expressions.DefaultExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L725"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitElementInit(System.Linq.Expressions.ElementInit)",
            "id": "VisitElementInit_ElementInit_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitElementInit(ElementInit)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitElementInit(System.Linq.Expressions.ElementInit)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 512,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override ElementInit VisitElementInit(ElementInit node)",
              "content.vb": "Protected Overrides Function VisitElementInit(node As ElementInit) As ElementInit",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.ElementInit",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "ElementInit",
                    "fullName": "System.Linq.Expressions.ElementInit",
                    "specName": "<xref href=\"System.Linq.Expressions.ElementInit\" name=\"System.Linq.Expressions.ElementInit\"/>",
                    "id": "ElementInit",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.ElementInit",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "ElementInit",
                  "fullName": "System.Linq.Expressions.ElementInit",
                  "specName": "<xref href=\"System.Linq.Expressions.ElementInit\" name=\"System.Linq.Expressions.ElementInit\"/>",
                  "id": "ElementInit",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitElementInit(System.Linq.Expressions.ElementInit)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitElementInit(System.Linq.Expressions.ElementInit)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L513"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitExtension(System.Linq.Expressions.Expression)",
            "id": "VisitExtension_Expression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitExtension(Expression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitExtension(System.Linq.Expressions.Expression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 814,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitExtension(Expression node)",
              "content.vb": "Protected Overrides Function VisitExtension(node As Expression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "Expression",
                    "fullName": "System.Linq.Expressions.Expression",
                    "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                    "id": "Expression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitExtension(System.Linq.Expressions.Expression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitExtension(System.Linq.Expressions.Expression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L815"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitGoto(System.Linq.Expressions.GotoExpression)",
            "id": "VisitGoto_GotoExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitGoto(GotoExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitGoto(System.Linq.Expressions.GotoExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 740,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitGoto(GotoExpression node)",
              "content.vb": "Protected Overrides Function VisitGoto(node As GotoExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.GotoExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "GotoExpression",
                    "fullName": "System.Linq.Expressions.GotoExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.GotoExpression\" name=\"System.Linq.Expressions.GotoExpression\"/>",
                    "id": "GotoExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitGoto(System.Linq.Expressions.GotoExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitGoto(System.Linq.Expressions.GotoExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L741"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitIndex(System.Linq.Expressions.IndexExpression)",
            "id": "VisitIndex_IndexExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitIndex(IndexExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitIndex(System.Linq.Expressions.IndexExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 793,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitIndex(IndexExpression node)",
              "content.vb": "Protected Overrides Function VisitIndex(node As IndexExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.IndexExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "IndexExpression",
                    "fullName": "System.Linq.Expressions.IndexExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.IndexExpression\" name=\"System.Linq.Expressions.IndexExpression\"/>",
                    "id": "IndexExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitIndex(System.Linq.Expressions.IndexExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitIndex(System.Linq.Expressions.IndexExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L794"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitInvocation(System.Linq.Expressions.InvocationExpression)",
            "id": "VisitInvocation_InvocationExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitInvocation(InvocationExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitInvocation(System.Linq.Expressions.InvocationExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 520,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitInvocation(InvocationExpression node)",
              "content.vb": "Protected Overrides Function VisitInvocation(node As InvocationExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.InvocationExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "InvocationExpression",
                    "fullName": "System.Linq.Expressions.InvocationExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.InvocationExpression\" name=\"System.Linq.Expressions.InvocationExpression\"/>",
                    "id": "InvocationExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitInvocation(System.Linq.Expressions.InvocationExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitInvocation(System.Linq.Expressions.InvocationExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L521"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitLabel(System.Linq.Expressions.LabelExpression)",
            "id": "VisitLabel_LabelExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitLabel(LabelExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitLabel(System.Linq.Expressions.LabelExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 732,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitLabel(LabelExpression node)",
              "content.vb": "Protected Overrides Function VisitLabel(node As LabelExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.LabelExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "LabelExpression",
                    "fullName": "System.Linq.Expressions.LabelExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.LabelExpression\" name=\"System.Linq.Expressions.LabelExpression\"/>",
                    "id": "LabelExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitLabel(System.Linq.Expressions.LabelExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitLabel(System.Linq.Expressions.LabelExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L733"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitLambda``1(System.Linq.Expressions.Expression{``0})",
            "id": "VisitLambda_T__Expression_T__",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitLambda<T>(Expression<T>)",
            "name.vb": "VisitLambda(Of T)(Expression(Of T))",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitLambda<T>(System.Linq.Expressions.Expression<T>)",
            "fullName.vb": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 329,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitLambda<T>(Expression<T> node)",
              "content.vb": "Protected Overrides Function VisitLambda(Of T)(node As Expression(Of T)) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression{{T}}",
                    "parent": "System.Linq.Expressions",
                    "definition": "System.Linq.Expressions.Expression`1",
                    "name": "Expression<T>",
                    "name.vb": "Expression(Of T)",
                    "fullName": "System.Linq.Expressions.Expression<T>",
                    "fullName.vb": "System.Linq.Expressions.Expression(Of T)",
                    "spec.csharp": [
                      {
                        "uid": "System.Linq.Expressions.Expression`1",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "T",
                        "fullName": "T",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Linq.Expressions.Expression`1",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "T",
                        "fullName": "T",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Linq.Expressions.Expression`1\" name=\"System.Linq.Expressions.Expression\"/>&lt;T&gt;",
                    "id": "Expression_T_",
                    "level": 0
                  }
                }
              ],
              "typeParameters": [
                {
                  "id": "T"
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{{T}})",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitLambda``1(System.Linq.Expressions.Expression{``0})\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitLambda&lt;T&gt;(System.Linq.Expressions.Expression&lt;T&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L330"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitListInit(System.Linq.Expressions.ListInitExpression)",
            "id": "VisitListInit_ListInitExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitListInit(ListInitExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitListInit(System.Linq.Expressions.ListInitExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 346,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitListInit(ListInitExpression node)",
              "content.vb": "Protected Overrides Function VisitListInit(node As ListInitExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.ListInitExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "ListInitExpression",
                    "fullName": "System.Linq.Expressions.ListInitExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.ListInitExpression\" name=\"System.Linq.Expressions.ListInitExpression\"/>",
                    "id": "ListInitExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitListInit(System.Linq.Expressions.ListInitExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitListInit(System.Linq.Expressions.ListInitExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L347"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitLoop(System.Linq.Expressions.LoopExpression)",
            "id": "VisitLoop_LoopExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitLoop(LoopExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitLoop(System.Linq.Expressions.LoopExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 753,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitLoop(LoopExpression node)",
              "content.vb": "Protected Overrides Function VisitLoop(node As LoopExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.LoopExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "LoopExpression",
                    "fullName": "System.Linq.Expressions.LoopExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.LoopExpression\" name=\"System.Linq.Expressions.LoopExpression\"/>",
                    "id": "LoopExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitLoop(System.Linq.Expressions.LoopExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitLoop(System.Linq.Expressions.LoopExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L754"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMember(System.Linq.Expressions.MemberExpression)",
            "id": "VisitMember_MemberExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitMember(MemberExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMember(System.Linq.Expressions.MemberExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 439,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitMember(MemberExpression node)",
              "content.vb": "Protected Overrides Function VisitMember(node As MemberExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.MemberExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "MemberExpression",
                    "fullName": "System.Linq.Expressions.MemberExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.MemberExpression\" name=\"System.Linq.Expressions.MemberExpression\"/>",
                    "id": "MemberExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMember(System.Linq.Expressions.MemberExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMember(System.Linq.Expressions.MemberExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L440"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)",
            "id": "VisitMemberAssignment_MemberAssignment_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitMemberAssignment(MemberAssignment)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 472,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override MemberAssignment VisitMemberAssignment(MemberAssignment node)",
              "content.vb": "Protected Overrides Function VisitMemberAssignment(node As MemberAssignment) As MemberAssignment",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.MemberAssignment",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "MemberAssignment",
                    "fullName": "System.Linq.Expressions.MemberAssignment",
                    "specName": "<xref href=\"System.Linq.Expressions.MemberAssignment\" name=\"System.Linq.Expressions.MemberAssignment\"/>",
                    "id": "MemberAssignment",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.MemberAssignment",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "MemberAssignment",
                  "fullName": "System.Linq.Expressions.MemberAssignment",
                  "specName": "<xref href=\"System.Linq.Expressions.MemberAssignment\" name=\"System.Linq.Expressions.MemberAssignment\"/>",
                  "id": "MemberAssignment",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L473"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)",
            "id": "VisitMemberInit_MemberInitExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitMemberInit(MemberInitExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 445,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitMemberInit(MemberInitExpression node)",
              "content.vb": "Protected Overrides Function VisitMemberInit(node As MemberInitExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.MemberInitExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "MemberInitExpression",
                    "fullName": "System.Linq.Expressions.MemberInitExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.MemberInitExpression\" name=\"System.Linq.Expressions.MemberInitExpression\"/>",
                    "id": "MemberInitExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L446"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)",
            "id": "VisitMemberListBinding_MemberListBinding_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitMemberListBinding(MemberListBinding)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 480,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override MemberListBinding VisitMemberListBinding(MemberListBinding node)",
              "content.vb": "Protected Overrides Function VisitMemberListBinding(node As MemberListBinding) As MemberListBinding",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.MemberListBinding",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "MemberListBinding",
                    "fullName": "System.Linq.Expressions.MemberListBinding",
                    "specName": "<xref href=\"System.Linq.Expressions.MemberListBinding\" name=\"System.Linq.Expressions.MemberListBinding\"/>",
                    "id": "MemberListBinding",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.MemberListBinding",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "MemberListBinding",
                  "fullName": "System.Linq.Expressions.MemberListBinding",
                  "specName": "<xref href=\"System.Linq.Expressions.MemberListBinding\" name=\"System.Linq.Expressions.MemberListBinding\"/>",
                  "id": "MemberListBinding",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L481"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)",
            "id": "VisitMemberMemberBinding_MemberMemberBinding_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitMemberMemberBinding(MemberMemberBinding)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 496,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override MemberMemberBinding VisitMemberMemberBinding(MemberMemberBinding node)",
              "content.vb": "Protected Overrides Function VisitMemberMemberBinding(node As MemberMemberBinding) As MemberMemberBinding",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.MemberMemberBinding",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "MemberMemberBinding",
                    "fullName": "System.Linq.Expressions.MemberMemberBinding",
                    "specName": "<xref href=\"System.Linq.Expressions.MemberMemberBinding\" name=\"System.Linq.Expressions.MemberMemberBinding\"/>",
                    "id": "MemberMemberBinding",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.MemberMemberBinding",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "MemberMemberBinding",
                  "fullName": "System.Linq.Expressions.MemberMemberBinding",
                  "specName": "<xref href=\"System.Linq.Expressions.MemberMemberBinding\" name=\"System.Linq.Expressions.MemberMemberBinding\"/>",
                  "id": "MemberMemberBinding",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L497"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)",
            "id": "VisitMethodCall_MethodCallExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitMethodCall(MethodCallExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 534,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitMethodCall(MethodCallExpression node)",
              "content.vb": "Protected Overrides Function VisitMethodCall(node As MethodCallExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.MethodCallExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "MethodCallExpression",
                    "fullName": "System.Linq.Expressions.MethodCallExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.MethodCallExpression\" name=\"System.Linq.Expressions.MethodCallExpression\"/>",
                    "id": "MethodCallExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L535"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitNew(System.Linq.Expressions.NewExpression)",
            "id": "VisitNew_NewExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitNew(NewExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitNew(System.Linq.Expressions.NewExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 598,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitNew(NewExpression node)",
              "content.vb": "Protected Overrides Function VisitNew(node As NewExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.NewExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "NewExpression",
                    "fullName": "System.Linq.Expressions.NewExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.NewExpression\" name=\"System.Linq.Expressions.NewExpression\"/>",
                    "id": "NewExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitNew(System.Linq.Expressions.NewExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitNew(System.Linq.Expressions.NewExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L599"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitNewArray(System.Linq.Expressions.NewArrayExpression)",
            "id": "VisitNewArray_NewArrayExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitNewArray(NewArrayExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitNewArray(System.Linq.Expressions.NewArrayExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 580,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitNewArray(NewArrayExpression node)",
              "content.vb": "Protected Overrides Function VisitNewArray(node As NewArrayExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.NewArrayExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "NewArrayExpression",
                    "fullName": "System.Linq.Expressions.NewArrayExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.NewArrayExpression\" name=\"System.Linq.Expressions.NewArrayExpression\"/>",
                    "id": "NewArrayExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L581"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitParameter(System.Linq.Expressions.ParameterExpression)",
            "id": "VisitParameter_ParameterExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitParameter(ParameterExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitParameter(System.Linq.Expressions.ParameterExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 311,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitParameter(ParameterExpression node)",
              "content.vb": "Protected Overrides Function VisitParameter(node As ParameterExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.ParameterExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "ParameterExpression",
                    "fullName": "System.Linq.Expressions.ParameterExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.ParameterExpression\" name=\"System.Linq.Expressions.ParameterExpression\"/>",
                    "id": "ParameterExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitParameter(System.Linq.Expressions.ParameterExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitParameter(System.Linq.Expressions.ParameterExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L312"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)",
            "id": "VisitRuntimeVariables_RuntimeVariablesExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitRuntimeVariables(RuntimeVariablesExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 418,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitRuntimeVariables(RuntimeVariablesExpression node)",
              "content.vb": "Protected Overrides Function VisitRuntimeVariables(node As RuntimeVariablesExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.RuntimeVariablesExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "RuntimeVariablesExpression",
                    "fullName": "System.Linq.Expressions.RuntimeVariablesExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.RuntimeVariablesExpression\" name=\"System.Linq.Expressions.RuntimeVariablesExpression\"/>",
                    "id": "RuntimeVariablesExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L419"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitSwitch(System.Linq.Expressions.SwitchExpression)",
            "id": "VisitSwitch_SwitchExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitSwitch(SwitchExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitSwitch(System.Linq.Expressions.SwitchExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 767,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitSwitch(SwitchExpression node)",
              "content.vb": "Protected Overrides Function VisitSwitch(node As SwitchExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.SwitchExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "SwitchExpression",
                    "fullName": "System.Linq.Expressions.SwitchExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.SwitchExpression\" name=\"System.Linq.Expressions.SwitchExpression\"/>",
                    "id": "SwitchExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitSwitch(System.Linq.Expressions.SwitchExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitSwitch(System.Linq.Expressions.SwitchExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L768"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitSwitchCase(System.Linq.Expressions.SwitchCase)",
            "id": "VisitSwitchCase_SwitchCase_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitSwitchCase(SwitchCase)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitSwitchCase(System.Linq.Expressions.SwitchCase)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 759,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override SwitchCase VisitSwitchCase(SwitchCase node)",
              "content.vb": "Protected Overrides Function VisitSwitchCase(node As SwitchCase) As SwitchCase",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.SwitchCase",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "SwitchCase",
                    "fullName": "System.Linq.Expressions.SwitchCase",
                    "specName": "<xref href=\"System.Linq.Expressions.SwitchCase\" name=\"System.Linq.Expressions.SwitchCase\"/>",
                    "id": "SwitchCase",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.SwitchCase",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "SwitchCase",
                  "fullName": "System.Linq.Expressions.SwitchCase",
                  "specName": "<xref href=\"System.Linq.Expressions.SwitchCase\" name=\"System.Linq.Expressions.SwitchCase\"/>",
                  "id": "SwitchCase",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitSwitchCase(System.Linq.Expressions.SwitchCase)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitSwitchCase(System.Linq.Expressions.SwitchCase)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L760"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitTry(System.Linq.Expressions.TryExpression)",
            "id": "VisitTry_TryExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitTry(TryExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitTry(System.Linq.Expressions.TryExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 787,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitTry(TryExpression node)",
              "content.vb": "Protected Overrides Function VisitTry(node As TryExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.TryExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "TryExpression",
                    "fullName": "System.Linq.Expressions.TryExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.TryExpression\" name=\"System.Linq.Expressions.TryExpression\"/>",
                    "id": "TryExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitTry(System.Linq.Expressions.TryExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitTry(System.Linq.Expressions.TryExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L788"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)",
            "id": "VisitTypeBinary_TypeBinaryExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitTypeBinary(TypeBinaryExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 621,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitTypeBinary(TypeBinaryExpression node)",
              "content.vb": "Protected Overrides Function VisitTypeBinary(node As TypeBinaryExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.TypeBinaryExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "TypeBinaryExpression",
                    "fullName": "System.Linq.Expressions.TypeBinaryExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.TypeBinaryExpression\" name=\"System.Linq.Expressions.TypeBinaryExpression\"/>",
                    "id": "TypeBinaryExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L622"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitUnary(System.Linq.Expressions.UnaryExpression)",
            "id": "VisitUnary_UnaryExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
            "name": "VisitUnary(UnaryExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitUnary(System.Linq.Expressions.UnaryExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
              "startLine": 639,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
            "syntax": {
              "content": "protected override Expression VisitUnary(UnaryExpression node)",
              "content.vb": "Protected Overrides Function VisitUnary(node As UnaryExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.UnaryExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "UnaryExpression",
                    "fullName": "System.Linq.Expressions.UnaryExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.UnaryExpression\" name=\"System.Linq.Expressions.UnaryExpression\"/>",
                    "id": "UnaryExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitUnary(System.Linq.Expressions.UnaryExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.VisitUnary(System.Linq.Expressions.UnaryExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L640"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder.yml",
    "name": "ExpressionStringBuilder",
    "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs",
      "startLine": 16,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
    "syntax": {
      "content": "public class ExpressionStringBuilder : ExpressionVisitor",
      "content.vb": "Public Class ExpressionStringBuilder Inherits ExpressionVisitor"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      },
      {
        "uid": "System.Linq.Expressions.ExpressionVisitor",
        "parent": "System.Linq.Expressions",
        "isExternal": true,
        "name": "ExpressionVisitor",
        "fullName": "System.Linq.Expressions.ExpressionVisitor",
        "specName": "<xref href=\"System.Linq.Expressions.ExpressionVisitor\" name=\"System.Linq.Expressions.ExpressionVisitor\"/>",
        "id": "ExpressionVisitor",
        "level": 0,
        "index": 1
      }
    ],
    "inheritedMembers": [
      "System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)",
      "System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})",
      "System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.Func{{T},{T}})",
      "System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1({T},System.String)",
      "System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.String)",
      "System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)",
      "System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.ExpressionStringBuilder\"/>",
    "level": 2,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ExpressionVisitors/Internal/ExpressionStringBuilder.cs/#L17"
  },
  "isClass": true,
  "_allowToc": true
}
