
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Infrastructure.IModelSource",
    "id": "IModelSource",
    "parent": "Microsoft.Data.Entity.Infrastructure",
    "children": [
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.IModelSource.GetModel(Microsoft.Data.Entity.DbContext,Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.Data.Entity.Internal.IModelValidator)",
            "id": "GetModel_DbContext__IConventionSetBuilder__IModelValidator_",
            "parent": "Microsoft.Data.Entity.Infrastructure.IModelSource",
            "href": "Microsoft.Data.Entity.Infrastructure.IModelSource.yml",
            "name": "GetModel(DbContext, IConventionSetBuilder, IModelValidator)",
            "fullName": "Microsoft.Data.Entity.Infrastructure.IModelSource.GetModel(Microsoft.Data.Entity.DbContext, Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder, Microsoft.Data.Entity.Internal.IModelValidator)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/IModelSource.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/IModelSource.cs",
              "startLine": 30,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<p>Gets the model to be used.</p>\n",
            "syntax": {
              "content": "IModel GetModel(DbContext context, IConventionSetBuilder conventionSetBuilder, IModelValidator validator)",
              "content.vb": "Function GetModel(context As DbContext, conventionSetBuilder As IConventionSetBuilder, validator As IModelValidator) As IModel",
              "parameters": [
                {
                  "id": "context",
                  "type": {
                    "uid": "Microsoft.Data.Entity.DbContext",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.DbContext.yml",
                    "name": "DbContext",
                    "fullName": "Microsoft.Data.Entity.DbContext",
                    "specName": "<xref href=\"Microsoft.Data.Entity.DbContext\" name=\"Microsoft.Data.Entity.DbContext\"/>",
                    "id": "DbContext",
                    "level": 0
                  },
                  "description": "<p>The context the model is being produced for.</p>\n"
                },
                {
                  "id": "conventionSetBuilder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Conventions.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder.yml",
                    "name": "IConventionSetBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder\" name=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder\"/>",
                    "id": "IConventionSetBuilder",
                    "level": 0
                  },
                  "description": "<p>The convention set to use when creating the model.</p>\n"
                },
                {
                  "id": "validator",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Internal.IModelValidator",
                    "parent": "Microsoft.Data.Entity.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Internal.IModelValidator.yml",
                    "name": "IModelValidator",
                    "fullName": "Microsoft.Data.Entity.Internal.IModelValidator",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Internal.IModelValidator\" name=\"Microsoft.Data.Entity.Internal.IModelValidator\"/>",
                    "id": "IModelValidator",
                    "level": 0
                  },
                  "description": "<p>The validator to verify the model can be successfully used with the context.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.IModel",
                  "parent": "Microsoft.Data.Entity.Metadata",
                  "isExternal": false,
                  "href": "Microsoft.Data.Entity.Metadata.IModel.yml",
                  "name": "IModel",
                  "fullName": "Microsoft.Data.Entity.Metadata.IModel",
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IModel\" name=\"Microsoft.Data.Entity.Metadata.IModel\"/>",
                  "id": "IModel",
                  "level": 0
                },
                "description": "<p>The model to be used.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.IModelSource.GetModel(Microsoft.Data.Entity.DbContext,Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.Data.Entity.Internal.IModelValidator)\" name=\"Microsoft.Data.Entity.Infrastructure.IModelSource.GetModel(Microsoft.Data.Entity.DbContext, Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder, Microsoft.Data.Entity.Internal.IModelValidator)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/IModelSource.cs/#L31"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Infrastructure.IModelSource.yml",
    "name": "IModelSource",
    "fullName": "Microsoft.Data.Entity.Infrastructure.IModelSource",
    "type": "Interface",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Infrastructure/IModelSource.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Infrastructure/IModelSource.cs",
      "startLine": 21,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Infrastructure",
    "summary": "<para>\nProduces an <xref href=\"Microsoft.Data.Entity.Metadata.IModel\"></xref> based on a context. This is typically implemented by database providers to ensure that any\nconventions\nand validation specific to their database are used.\n</para>\n<para>\nThis interface is typically used by database providers (and other extensions). It is generally\nnot used in application code.\n</para>",
    "syntax": {
      "content": "public interface IModelSource",
      "content.vb": "Public Interface IModelSource"
    },
    "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.IModelSource\" name=\"Microsoft.Data.Entity.Infrastructure.IModelSource\"/>",
    "level": 0,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/IModelSource.cs/#L22"
  },
  "isClass": true,
  "_allowToc": true
}
