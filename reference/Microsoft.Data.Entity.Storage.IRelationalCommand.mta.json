
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Storage.IRelationalCommand",
    "id": "IRelationalCommand",
    "parent": "Microsoft.Data.Entity.Storage",
    "children": [
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalCommand.CommandText",
            "id": "CommandText",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalCommand",
            "href": "Microsoft.Data.Entity.Storage.IRelationalCommand.yml",
            "name": "CommandText",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalCommand.CommandText",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
              "startLine": 12,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
                "content": "string CommandText { get; }",
                "content.vb": "ReadOnly Property CommandText As String",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalCommand.CommandText\" name=\"Microsoft.Data.Entity.Storage.IRelationalCommand.CommandText\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalCommand.cs/#L13"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalCommand.Parameters",
            "id": "Parameters",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalCommand",
            "href": "Microsoft.Data.Entity.Storage.IRelationalCommand.yml",
            "name": "Parameters",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalCommand.Parameters",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
              "startLine": 14,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
                "content": "IReadOnlyList<IRelationalParameter> Parameters { get; }",
                "content.vb": "ReadOnly Property Parameters As IReadOnlyList(Of IRelationalParameter)",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Collections.Generic.IReadOnlyList{Microsoft.Data.Entity.Storage.IRelationalParameter}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IReadOnlyList`1",
                    "href": "Microsoft.Data.Entity.Storage.IRelationalParameter.yml",
                    "name": "IReadOnlyList<IRelationalParameter>",
                    "name.vb": "IReadOnlyList(Of IRelationalParameter)",
                    "fullName": "System.Collections.Generic.IReadOnlyList<Microsoft.Data.Entity.Storage.IRelationalParameter>",
                    "fullName.vb": "System.Collections.Generic.IReadOnlyList(Of Microsoft.Data.Entity.Storage.IRelationalParameter)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyList`1",
                        "name": "IReadOnlyList",
                        "fullName": "System.Collections.Generic.IReadOnlyList",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Storage.IRelationalParameter",
                        "name": "IRelationalParameter",
                        "fullName": "Microsoft.Data.Entity.Storage.IRelationalParameter",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Storage.IRelationalParameter.yml"
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyList`1",
                        "name": "IReadOnlyList",
                        "fullName": "System.Collections.Generic.IReadOnlyList",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Storage.IRelationalParameter",
                        "name": "IRelationalParameter",
                        "fullName": "Microsoft.Data.Entity.Storage.IRelationalParameter",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Storage.IRelationalParameter.yml"
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IReadOnlyList`1\" name=\"System.Collections.Generic.IReadOnlyList\"/>&lt;<xref href=\"Microsoft.Data.Entity.Storage.IRelationalParameter\" name=\"Microsoft.Data.Entity.Storage.IRelationalParameter\"/>&gt;",
                    "id": "IReadOnlyList_IRelationalParameter_",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalCommand.Parameters\" name=\"Microsoft.Data.Entity.Storage.IRelationalCommand.Parameters\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalCommand.cs/#L15"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.Data.Entity.Storage.IRelationalConnection,System.Boolean)",
            "id": "ExecuteNonQuery_IRelationalConnection__Boolean_",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalCommand",
            "href": "Microsoft.Data.Entity.Storage.IRelationalCommand.yml",
            "name": "ExecuteNonQuery(IRelationalConnection, Boolean)",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Boolean)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
              "startLine": 16,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "void ExecuteNonQuery(IRelationalConnection connection, bool manageConnection = true)",
              "content.vb": "Sub ExecuteNonQuery(connection As IRelationalConnection, manageConnection As Boolean = True)",
              "parameters": [
                {
                  "id": "connection",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
                    "name": "IRelationalConnection",
                    "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection\"/>",
                    "id": "IRelationalConnection",
                    "level": 0
                  }
                },
                {
                  "id": "manageConnection",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.Data.Entity.Storage.IRelationalConnection,System.Boolean)\" name=\"Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Boolean)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalCommand.cs/#L17"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.Data.Entity.Storage.IRelationalConnection,System.Threading.CancellationToken,System.Boolean)",
            "id": "ExecuteNonQueryAsync_IRelationalConnection__CancellationToken__Boolean_",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalCommand",
            "href": "Microsoft.Data.Entity.Storage.IRelationalCommand.yml",
            "name": "ExecuteNonQueryAsync(IRelationalConnection, CancellationToken, Boolean)",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Threading.CancellationToken, System.Boolean)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
              "startLine": 20,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "Task ExecuteNonQueryAsync(IRelationalConnection connection, CancellationToken cancellationToken = null, bool manageConnection = true)",
              "content.vb": "Function ExecuteNonQueryAsync(connection As IRelationalConnection, cancellationToken As CancellationToken = Nothing, manageConnection As Boolean = True) As Task",
              "parameters": [
                {
                  "id": "connection",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
                    "name": "IRelationalConnection",
                    "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection\"/>",
                    "id": "IRelationalConnection",
                    "level": 0
                  }
                },
                {
                  "id": "cancellationToken",
                  "type": {
                    "uid": "System.Threading.CancellationToken",
                    "parent": "System.Threading",
                    "isExternal": true,
                    "name": "CancellationToken",
                    "fullName": "System.Threading.CancellationToken",
                    "specName": "<xref href=\"System.Threading.CancellationToken\" name=\"System.Threading.CancellationToken\"/>",
                    "id": "CancellationToken",
                    "level": 0
                  }
                },
                {
                  "id": "manageConnection",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Threading.Tasks.Task",
                  "parent": "System.Threading.Tasks",
                  "isExternal": true,
                  "name": "Task",
                  "fullName": "System.Threading.Tasks.Task",
                  "specName": "<xref href=\"System.Threading.Tasks.Task\" name=\"System.Threading.Tasks.Task\"/>",
                  "id": "Task",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.Data.Entity.Storage.IRelationalConnection,System.Threading.CancellationToken,System.Boolean)\" name=\"Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Threading.CancellationToken, System.Boolean)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalCommand.cs/#L21"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteReader(Microsoft.Data.Entity.Storage.IRelationalConnection,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})",
            "id": "ExecuteReader_IRelationalConnection__Boolean__IReadOnlyDictionary_String__Object__",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalCommand",
            "href": "Microsoft.Data.Entity.Storage.IRelationalCommand.yml",
            "name": "ExecuteReader(IRelationalConnection, Boolean, IReadOnlyDictionary<String, Object>)",
            "name.vb": "ExecuteReader(IRelationalConnection, Boolean, IReadOnlyDictionary(Of String, Object))",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteReader(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Boolean, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>)",
            "fullName.vb": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteReader(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Boolean, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
              "startLine": 34,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "RelationalDataReader ExecuteReader(IRelationalConnection connection, bool manageConnection = true, IReadOnlyDictionary<string, object> parameterValues = null)",
              "content.vb": "Function ExecuteReader(connection As IRelationalConnection, manageConnection As Boolean = True, parameterValues As IReadOnlyDictionary(Of String, Object) = Nothing) As RelationalDataReader",
              "parameters": [
                {
                  "id": "connection",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
                    "name": "IRelationalConnection",
                    "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection\"/>",
                    "id": "IRelationalConnection",
                    "level": 0
                  }
                },
                {
                  "id": "manageConnection",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                },
                {
                  "id": "parameterValues",
                  "type": {
                    "uid": "System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
                    "name": "IReadOnlyDictionary<String, Object>",
                    "name.vb": "IReadOnlyDictionary(Of String, Object)",
                    "fullName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
                    "fullName.vb": "System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyDictionary`2",
                        "name": "IReadOnlyDictionary",
                        "fullName": "System.Collections.Generic.IReadOnlyDictionary",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyDictionary`2",
                        "name": "IReadOnlyDictionary",
                        "fullName": "System.Collections.Generic.IReadOnlyDictionary",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IReadOnlyDictionary`2\" name=\"System.Collections.Generic.IReadOnlyDictionary\"/>&lt;<xref href=\"System.String\" name=\"System.String\"/>, <xref href=\"System.Object\" name=\"System.Object\"/>&gt;",
                    "id": "IReadOnlyDictionary_String__Object_",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Storage.RelationalDataReader",
                  "parent": "Microsoft.Data.Entity.Storage",
                  "isExternal": false,
                  "href": "Microsoft.Data.Entity.Storage.RelationalDataReader.yml",
                  "name": "RelationalDataReader",
                  "fullName": "Microsoft.Data.Entity.Storage.RelationalDataReader",
                  "type": "class",
                  "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalDataReader\" name=\"Microsoft.Data.Entity.Storage.RelationalDataReader\"/>",
                  "id": "RelationalDataReader",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteReader(Microsoft.Data.Entity.Storage.IRelationalConnection,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})\" name=\"Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteReader(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Boolean, System.Collections.Generic.IReadOnlyDictionary&lt;System.String, System.Object&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalCommand.cs/#L35"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.Data.Entity.Storage.IRelationalConnection,System.Threading.CancellationToken,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})",
            "id": "ExecuteReaderAsync_IRelationalConnection__CancellationToken__Boolean__IReadOnlyDictionary_String__Object__",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalCommand",
            "href": "Microsoft.Data.Entity.Storage.IRelationalCommand.yml",
            "name": "ExecuteReaderAsync(IRelationalConnection, CancellationToken, Boolean, IReadOnlyDictionary<String, Object>)",
            "name.vb": "ExecuteReaderAsync(IRelationalConnection, CancellationToken, Boolean, IReadOnlyDictionary(Of String, Object))",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Threading.CancellationToken, System.Boolean, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>)",
            "fullName.vb": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Threading.CancellationToken, System.Boolean, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
              "startLine": 39,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "Task<RelationalDataReader> ExecuteReaderAsync(IRelationalConnection connection, CancellationToken cancellationToken = null, bool manageConnection = true, IReadOnlyDictionary<string, object> parameterValues = null)",
              "content.vb": "Function ExecuteReaderAsync(connection As IRelationalConnection, cancellationToken As CancellationToken = Nothing, manageConnection As Boolean = True, parameterValues As IReadOnlyDictionary(Of String, Object) = Nothing) As Task(Of RelationalDataReader)",
              "parameters": [
                {
                  "id": "connection",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
                    "name": "IRelationalConnection",
                    "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection\"/>",
                    "id": "IRelationalConnection",
                    "level": 0
                  }
                },
                {
                  "id": "cancellationToken",
                  "type": {
                    "uid": "System.Threading.CancellationToken",
                    "parent": "System.Threading",
                    "isExternal": true,
                    "name": "CancellationToken",
                    "fullName": "System.Threading.CancellationToken",
                    "specName": "<xref href=\"System.Threading.CancellationToken\" name=\"System.Threading.CancellationToken\"/>",
                    "id": "CancellationToken",
                    "level": 0
                  }
                },
                {
                  "id": "manageConnection",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                },
                {
                  "id": "parameterValues",
                  "type": {
                    "uid": "System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
                    "name": "IReadOnlyDictionary<String, Object>",
                    "name.vb": "IReadOnlyDictionary(Of String, Object)",
                    "fullName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
                    "fullName.vb": "System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyDictionary`2",
                        "name": "IReadOnlyDictionary",
                        "fullName": "System.Collections.Generic.IReadOnlyDictionary",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyDictionary`2",
                        "name": "IReadOnlyDictionary",
                        "fullName": "System.Collections.Generic.IReadOnlyDictionary",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IReadOnlyDictionary`2\" name=\"System.Collections.Generic.IReadOnlyDictionary\"/>&lt;<xref href=\"System.String\" name=\"System.String\"/>, <xref href=\"System.Object\" name=\"System.Object\"/>&gt;",
                    "id": "IReadOnlyDictionary_String__Object_",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Threading.Tasks.Task{Microsoft.Data.Entity.Storage.RelationalDataReader}",
                  "parent": "System.Threading.Tasks",
                  "definition": "System.Threading.Tasks.Task`1",
                  "href": "Microsoft.Data.Entity.Storage.RelationalDataReader.yml",
                  "name": "Task<RelationalDataReader>",
                  "name.vb": "Task(Of RelationalDataReader)",
                  "fullName": "System.Threading.Tasks.Task<Microsoft.Data.Entity.Storage.RelationalDataReader>",
                  "fullName.vb": "System.Threading.Tasks.Task(Of Microsoft.Data.Entity.Storage.RelationalDataReader)",
                  "spec.csharp": [
                    {
                      "uid": "System.Threading.Tasks.Task`1",
                      "name": "Task",
                      "fullName": "System.Threading.Tasks.Task",
                      "isExternal": true
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Storage.RelationalDataReader",
                      "name": "RelationalDataReader",
                      "fullName": "Microsoft.Data.Entity.Storage.RelationalDataReader",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Storage.RelationalDataReader.yml"
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "System.Threading.Tasks.Task`1",
                      "name": "Task",
                      "fullName": "System.Threading.Tasks.Task",
                      "isExternal": true
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Storage.RelationalDataReader",
                      "name": "RelationalDataReader",
                      "fullName": "Microsoft.Data.Entity.Storage.RelationalDataReader",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Storage.RelationalDataReader.yml"
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"System.Threading.Tasks.Task`1\" name=\"System.Threading.Tasks.Task\"/>&lt;<xref href=\"Microsoft.Data.Entity.Storage.RelationalDataReader\" name=\"Microsoft.Data.Entity.Storage.RelationalDataReader\"/>&gt;",
                  "id": "Task_RelationalDataReader_",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.Data.Entity.Storage.IRelationalConnection,System.Threading.CancellationToken,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})\" name=\"Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Threading.CancellationToken, System.Boolean, System.Collections.Generic.IReadOnlyDictionary&lt;System.String, System.Object&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalCommand.cs/#L40"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteScalar(Microsoft.Data.Entity.Storage.IRelationalConnection,System.Boolean)",
            "id": "ExecuteScalar_IRelationalConnection__Boolean_",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalCommand",
            "href": "Microsoft.Data.Entity.Storage.IRelationalCommand.yml",
            "name": "ExecuteScalar(IRelationalConnection, Boolean)",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteScalar(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Boolean)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
              "startLine": 25,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "object ExecuteScalar(IRelationalConnection connection, bool manageConnection = true)",
              "content.vb": "Function ExecuteScalar(connection As IRelationalConnection, manageConnection As Boolean = True) As Object",
              "parameters": [
                {
                  "id": "connection",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
                    "name": "IRelationalConnection",
                    "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection\"/>",
                    "id": "IRelationalConnection",
                    "level": 0
                  }
                },
                {
                  "id": "manageConnection",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Object",
                  "parent": "System",
                  "isExternal": true,
                  "name": "Object",
                  "fullName": "System.Object",
                  "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
                  "id": "Object",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteScalar(Microsoft.Data.Entity.Storage.IRelationalConnection,System.Boolean)\" name=\"Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteScalar(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Boolean)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalCommand.cs/#L26"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.Data.Entity.Storage.IRelationalConnection,System.Threading.CancellationToken,System.Boolean)",
            "id": "ExecuteScalarAsync_IRelationalConnection__CancellationToken__Boolean_",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalCommand",
            "href": "Microsoft.Data.Entity.Storage.IRelationalCommand.yml",
            "name": "ExecuteScalarAsync(IRelationalConnection, CancellationToken, Boolean)",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Threading.CancellationToken, System.Boolean)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
              "startLine": 29,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "Task<object> ExecuteScalarAsync(IRelationalConnection connection, CancellationToken cancellationToken = null, bool manageConnection = true)",
              "content.vb": "Function ExecuteScalarAsync(connection As IRelationalConnection, cancellationToken As CancellationToken = Nothing, manageConnection As Boolean = True) As Task(Of Object)",
              "parameters": [
                {
                  "id": "connection",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
                    "name": "IRelationalConnection",
                    "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection\"/>",
                    "id": "IRelationalConnection",
                    "level": 0
                  }
                },
                {
                  "id": "cancellationToken",
                  "type": {
                    "uid": "System.Threading.CancellationToken",
                    "parent": "System.Threading",
                    "isExternal": true,
                    "name": "CancellationToken",
                    "fullName": "System.Threading.CancellationToken",
                    "specName": "<xref href=\"System.Threading.CancellationToken\" name=\"System.Threading.CancellationToken\"/>",
                    "id": "CancellationToken",
                    "level": 0
                  }
                },
                {
                  "id": "manageConnection",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Threading.Tasks.Task{System.Object}",
                  "parent": "System.Threading.Tasks",
                  "definition": "System.Threading.Tasks.Task`1",
                  "name": "Task<Object>",
                  "name.vb": "Task(Of Object)",
                  "fullName": "System.Threading.Tasks.Task<System.Object>",
                  "fullName.vb": "System.Threading.Tasks.Task(Of System.Object)",
                  "spec.csharp": [
                    {
                      "uid": "System.Threading.Tasks.Task`1",
                      "name": "Task",
                      "fullName": "System.Threading.Tasks.Task",
                      "isExternal": true
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "uid": "System.Object",
                      "name": "Object",
                      "fullName": "System.Object",
                      "isExternal": true
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "System.Threading.Tasks.Task`1",
                      "name": "Task",
                      "fullName": "System.Threading.Tasks.Task",
                      "isExternal": true
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "uid": "System.Object",
                      "name": "Object",
                      "fullName": "System.Object",
                      "isExternal": true
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"System.Threading.Tasks.Task`1\" name=\"System.Threading.Tasks.Task\"/>&lt;<xref href=\"System.Object\" name=\"System.Object\"/>&gt;",
                  "id": "Task_Object_",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.Data.Entity.Storage.IRelationalConnection,System.Threading.CancellationToken,System.Boolean)\" name=\"Microsoft.Data.Entity.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.Data.Entity.Storage.IRelationalConnection, System.Threading.CancellationToken, System.Boolean)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalCommand.cs/#L30"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Storage.IRelationalCommand.yml",
    "name": "IRelationalCommand",
    "fullName": "Microsoft.Data.Entity.Storage.IRelationalCommand",
    "type": "Interface",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Relational/Storage/IRelationalCommand.cs",
      "startLine": 10,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Relational"
    ],
    "namespace": "Microsoft.Data.Entity.Storage",
    "syntax": {
      "content": "public interface IRelationalCommand",
      "content.vb": "Public Interface IRelationalCommand"
    },
    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalCommand\" name=\"Microsoft.Data.Entity.Storage.IRelationalCommand\"/>",
    "level": 0,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalCommand.cs/#L11"
  },
  "isClass": true,
  "_allowToc": true
}
