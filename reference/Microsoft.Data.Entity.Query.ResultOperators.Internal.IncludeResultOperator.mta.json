
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator",
    "id": "IncludeResultOperator",
    "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.#ctor(System.Linq.Expressions.MemberExpression)",
            "id": "IncludeResultOperator_MemberExpression_",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.yml",
            "name": "IncludeResultOperator(MemberExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.IncludeResultOperator(System.Linq.Expressions.MemberExpression)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
              "startLine": 22,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
              "content": "public IncludeResultOperator(MemberExpression navigationPropertyPath)",
              "content.vb": "Public Sub New(navigationPropertyPath As MemberExpression)",
              "parameters": [
                {
                  "id": "navigationPropertyPath",
                  "type": {
                    "uid": "System.Linq.Expressions.MemberExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "MemberExpression",
                    "fullName": "System.Linq.Expressions.MemberExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.MemberExpression\" name=\"System.Linq.Expressions.MemberExpression\"/>",
                    "id": "MemberExpression",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.#ctor(System.Linq.Expressions.MemberExpression)\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.IncludeResultOperator(System.Linq.Expressions.MemberExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs/#L23"
          }
        ]
      },
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.ChainedNavigationProperties",
            "id": "ChainedNavigationProperties",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.yml",
            "name": "ChainedNavigationProperties",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.ChainedNavigationProperties",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
              "startLine": 41,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
                "content": "public virtual IReadOnlyList<PropertyInfo> ChainedNavigationProperties { get; }",
                "content.vb": "Public Overridable ReadOnly Property ChainedNavigationProperties As IReadOnlyList(Of PropertyInfo)",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IReadOnlyList`1",
                    "name": "IReadOnlyList<PropertyInfo>",
                    "name.vb": "IReadOnlyList(Of PropertyInfo)",
                    "fullName": "System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>",
                    "fullName.vb": "System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyList`1",
                        "name": "IReadOnlyList",
                        "fullName": "System.Collections.Generic.IReadOnlyList",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Reflection.PropertyInfo",
                        "name": "PropertyInfo",
                        "fullName": "System.Reflection.PropertyInfo",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyList`1",
                        "name": "IReadOnlyList",
                        "fullName": "System.Collections.Generic.IReadOnlyList",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Reflection.PropertyInfo",
                        "name": "PropertyInfo",
                        "fullName": "System.Reflection.PropertyInfo",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IReadOnlyList`1\" name=\"System.Collections.Generic.IReadOnlyList\"/>&lt;<xref href=\"System.Reflection.PropertyInfo\" name=\"System.Reflection.PropertyInfo\"/>&gt;",
                    "id": "IReadOnlyList_PropertyInfo_",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.ChainedNavigationProperties\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.ChainedNavigationProperties\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs/#L42"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.NavigationPropertyPath",
            "id": "NavigationPropertyPath",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.yml",
            "name": "NavigationPropertyPath",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.NavigationPropertyPath",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
              "startLine": 39,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
                "content": "public virtual MemberExpression NavigationPropertyPath { get; }",
                "content.vb": "Public Overridable ReadOnly Property NavigationPropertyPath As MemberExpression",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Linq.Expressions.MemberExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "MemberExpression",
                    "fullName": "System.Linq.Expressions.MemberExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.MemberExpression\" name=\"System.Linq.Expressions.MemberExpression\"/>",
                    "id": "MemberExpression",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.NavigationPropertyPath\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.NavigationPropertyPath\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs/#L40"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.QueryModel",
            "id": "QueryModel",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.yml",
            "name": "QueryModel",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.QueryModel",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
              "startLine": 37,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
                "content": "public virtual QueryModel QueryModel { get; set; }",
                "content.vb": "Public Overridable Property QueryModel As QueryModel",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Remotion.Linq.QueryModel",
                    "parent": "Remotion.Linq",
                    "isExternal": true,
                    "name": "QueryModel",
                    "fullName": "Remotion.Linq.QueryModel",
                    "specName": "<xref href=\"Remotion.Linq.QueryModel\" name=\"Remotion.Linq.QueryModel\"/>",
                    "id": "QueryModel",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.QueryModel\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.QueryModel\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs/#L38"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.QuerySource",
            "id": "QuerySource",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.yml",
            "name": "QuerySource",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.QuerySource",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
              "startLine": 36,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
                "content": "public virtual IQuerySource QuerySource { get; set; }",
                "content.vb": "Public Overridable Property QuerySource As IQuerySource",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Remotion.Linq.Clauses.IQuerySource",
                    "parent": "Remotion.Linq.Clauses",
                    "isExternal": true,
                    "name": "IQuerySource",
                    "fullName": "Remotion.Linq.Clauses.IQuerySource",
                    "specName": "<xref href=\"Remotion.Linq.Clauses.IQuerySource\" name=\"Remotion.Linq.Clauses.IQuerySource\"/>",
                    "id": "IQuerySource",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.QuerySource\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.QuerySource\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs/#L37"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.AppendToNavigationPath(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})",
            "id": "AppendToNavigationPath_IReadOnlyList_PropertyInfo__",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.yml",
            "name": "AppendToNavigationPath(IReadOnlyList<PropertyInfo>)",
            "name.vb": "AppendToNavigationPath(IReadOnlyList(Of PropertyInfo))",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.AppendToNavigationPath(System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>)",
            "fullName.vb": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.AppendToNavigationPath(System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
              "startLine": 43,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
              "content": "public virtual void AppendToNavigationPath(IReadOnlyList<PropertyInfo> propertyInfos)",
              "content.vb": "Public Overridable Sub AppendToNavigationPath(propertyInfos As IReadOnlyList(Of PropertyInfo))",
              "parameters": [
                {
                  "id": "propertyInfos",
                  "type": {
                    "uid": "System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IReadOnlyList`1",
                    "name": "IReadOnlyList<PropertyInfo>",
                    "name.vb": "IReadOnlyList(Of PropertyInfo)",
                    "fullName": "System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>",
                    "fullName.vb": "System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyList`1",
                        "name": "IReadOnlyList",
                        "fullName": "System.Collections.Generic.IReadOnlyList",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Reflection.PropertyInfo",
                        "name": "PropertyInfo",
                        "fullName": "System.Reflection.PropertyInfo",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyList`1",
                        "name": "IReadOnlyList",
                        "fullName": "System.Collections.Generic.IReadOnlyList",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Reflection.PropertyInfo",
                        "name": "PropertyInfo",
                        "fullName": "System.Reflection.PropertyInfo",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IReadOnlyList`1\" name=\"System.Collections.Generic.IReadOnlyList\"/>&lt;<xref href=\"System.Reflection.PropertyInfo\" name=\"System.Reflection.PropertyInfo\"/>&gt;",
                    "id": "IReadOnlyList_PropertyInfo_",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.AppendToNavigationPath(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.AppendToNavigationPath(System.Collections.Generic.IReadOnlyList&lt;System.Reflection.PropertyInfo&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs/#L44"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.Clone(Remotion.Linq.Clauses.CloneContext)",
            "id": "Clone_CloneContext_",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.yml",
            "name": "Clone(CloneContext)",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.Clone(Remotion.Linq.Clauses.CloneContext)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
              "startLine": 61,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
              "content": "public override ResultOperatorBase Clone(CloneContext cloneContext)",
              "content.vb": "Public Overrides Function Clone(cloneContext As CloneContext) As ResultOperatorBase",
              "parameters": [
                {
                  "id": "cloneContext",
                  "type": {
                    "uid": "Remotion.Linq.Clauses.CloneContext",
                    "parent": "Remotion.Linq.Clauses",
                    "isExternal": true,
                    "name": "CloneContext",
                    "fullName": "Remotion.Linq.Clauses.CloneContext",
                    "specName": "<xref href=\"Remotion.Linq.Clauses.CloneContext\" name=\"Remotion.Linq.Clauses.CloneContext\"/>",
                    "id": "CloneContext",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "Remotion.Linq.Clauses.ResultOperatorBase",
                  "parent": "Remotion.Linq.Clauses",
                  "isExternal": true,
                  "name": "ResultOperatorBase",
                  "fullName": "Remotion.Linq.Clauses.ResultOperatorBase",
                  "specName": "<xref href=\"Remotion.Linq.Clauses.ResultOperatorBase\" name=\"Remotion.Linq.Clauses.ResultOperatorBase\"/>",
                  "id": "ResultOperatorBase",
                  "level": 0
                }
              }
            },
            "overridden": "Remotion.Linq.Clauses.ResultOperatorBase.Clone(Remotion.Linq.Clauses.CloneContext)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.Clone(Remotion.Linq.Clauses.CloneContext)\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.Clone(Remotion.Linq.Clauses.CloneContext)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs/#L62"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)",
            "id": "ExecuteInMemory_T__StreamedSequence_",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.yml",
            "name": "ExecuteInMemory<T>(StreamedSequence)",
            "name.vb": "ExecuteInMemory(Of T)(StreamedSequence)",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.ExecuteInMemory<T>(Remotion.Linq.Clauses.StreamedData.StreamedSequence)",
            "fullName.vb": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.ExecuteInMemory(Of T)(Remotion.Linq.Clauses.StreamedData.StreamedSequence)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
              "startLine": 71,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
              "content": "public override StreamedSequence ExecuteInMemory<T>(StreamedSequence input)",
              "content.vb": "Public Overrides Function ExecuteInMemory(Of T)(input As StreamedSequence) As StreamedSequence",
              "parameters": [
                {
                  "id": "input",
                  "type": {
                    "uid": "Remotion.Linq.Clauses.StreamedData.StreamedSequence",
                    "parent": "Remotion.Linq.Clauses.StreamedData",
                    "isExternal": true,
                    "name": "StreamedSequence",
                    "fullName": "Remotion.Linq.Clauses.StreamedData.StreamedSequence",
                    "specName": "<xref href=\"Remotion.Linq.Clauses.StreamedData.StreamedSequence\" name=\"Remotion.Linq.Clauses.StreamedData.StreamedSequence\"/>",
                    "id": "StreamedSequence",
                    "level": 0
                  }
                }
              ],
              "typeParameters": [
                {
                  "id": "T"
                }
              ],
              "return": {
                "type": {
                  "uid": "Remotion.Linq.Clauses.StreamedData.StreamedSequence",
                  "parent": "Remotion.Linq.Clauses.StreamedData",
                  "isExternal": true,
                  "name": "StreamedSequence",
                  "fullName": "Remotion.Linq.Clauses.StreamedData.StreamedSequence",
                  "specName": "<xref href=\"Remotion.Linq.Clauses.StreamedData.StreamedSequence\" name=\"Remotion.Linq.Clauses.StreamedData.StreamedSequence\"/>",
                  "id": "StreamedSequence",
                  "level": 0
                }
              }
            },
            "overridden": "Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.ExecuteInMemory&lt;T&gt;(Remotion.Linq.Clauses.StreamedData.StreamedSequence)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs/#L72"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.ToString",
            "id": "ToString__",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.yml",
            "name": "ToString()",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.ToString()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
              "startLine": 53,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
              "content": "public override string ToString()",
              "content.vb": "Public Overrides Function ToString As String",
              "return": {
                "type": {
                  "uid": "System.String",
                  "parent": "System",
                  "isExternal": true,
                  "name": "String",
                  "fullName": "System.String",
                  "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                  "id": "String",
                  "level": 0
                }
              }
            },
            "overridden": "System.Object.ToString",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.ToString\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.ToString()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs/#L54"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})",
            "id": "TransformExpressions_Func_Expression__Expression__",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.yml",
            "name": "TransformExpressions(Func<Expression, Expression>)",
            "name.vb": "TransformExpressions(Func(Of Expression, Expression))",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.TransformExpressions(System.Func<System.Linq.Expressions.Expression, System.Linq.Expressions.Expression>)",
            "fullName.vb": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.TransformExpressions(System.Func(Of System.Linq.Expressions.Expression, System.Linq.Expressions.Expression))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
              "startLine": 67,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
              "content": "public override void TransformExpressions(Func<Expression, Expression> transformation)",
              "content.vb": "Public Overrides Sub TransformExpressions(transformation As Func(Of Expression, Expression))",
              "parameters": [
                {
                  "id": "transformation",
                  "type": {
                    "uid": "System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression}",
                    "parent": "System",
                    "definition": "System.Func`2",
                    "name": "Func<Expression, Expression>",
                    "name.vb": "Func(Of Expression, Expression)",
                    "fullName": "System.Func<System.Linq.Expressions.Expression, System.Linq.Expressions.Expression>",
                    "fullName.vb": "System.Func(Of System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)",
                    "spec.csharp": [
                      {
                        "uid": "System.Func`2",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Linq.Expressions.Expression",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Linq.Expressions.Expression",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Func`2",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Linq.Expressions.Expression",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Linq.Expressions.Expression",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Func`2\" name=\"System.Func\"/>&lt;<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>, <xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>&gt;",
                    "id": "Func_Expression__Expression_",
                    "level": 0
                  }
                }
              ]
            },
            "overridden": "Remotion.Linq.Clauses.ResultOperatorBase.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.TransformExpressions(System.Func&lt;System.Linq.Expressions.Expression, System.Linq.Expressions.Expression&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs/#L68"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator.yml",
    "name": "IncludeResultOperator",
    "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs",
      "startLine": 18,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
    "syntax": {
      "content": "public class IncludeResultOperator : SequenceTypePreservingResultOperatorBase, IQueryAnnotation",
      "content.vb": "Public Class IncludeResultOperator Inherits SequenceTypePreservingResultOperatorBase Implements IQueryAnnotation"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      },
      {
        "uid": "Remotion.Linq.Clauses.ResultOperatorBase",
        "parent": "Remotion.Linq.Clauses",
        "isExternal": true,
        "name": "ResultOperatorBase",
        "fullName": "Remotion.Linq.Clauses.ResultOperatorBase",
        "specName": "<xref href=\"Remotion.Linq.Clauses.ResultOperatorBase\" name=\"Remotion.Linq.Clauses.ResultOperatorBase\"/>",
        "id": "ResultOperatorBase",
        "level": 0,
        "index": 1
      },
      {
        "uid": "Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase",
        "parent": "Remotion.Linq.Clauses.ResultOperators",
        "isExternal": true,
        "name": "SequenceFromSequenceResultOperatorBase",
        "fullName": "Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase",
        "specName": "<xref href=\"Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase\" name=\"Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase\"/>",
        "id": "SequenceFromSequenceResultOperatorBase",
        "level": 0,
        "index": 2
      },
      {
        "uid": "Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase",
        "parent": "Remotion.Linq.Clauses.ResultOperators",
        "isExternal": true,
        "name": "SequenceTypePreservingResultOperatorBase",
        "fullName": "Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase",
        "specName": "<xref href=\"Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase\" name=\"Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase\"/>",
        "id": "SequenceTypePreservingResultOperatorBase",
        "level": 0,
        "index": 3
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Query.ResultOperators.IQueryAnnotation"
    ],
    "inheritedMembers": [
      "Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.IStreamedDataInfo)",
      "Remotion.Linq.Clauses.ResultOperators.SequenceTypePreservingResultOperatorBase.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo)",
      "Remotion.Linq.Clauses.ResultOperators.SequenceFromSequenceResultOperatorBase.ExecuteInMemory(Remotion.Linq.Clauses.StreamedData.IStreamedData)",
      "Remotion.Linq.Clauses.ResultOperatorBase.Accept(Remotion.Linq.IQueryModelVisitor,Remotion.Linq.QueryModel,System.Int32)",
      "Remotion.Linq.Clauses.ResultOperatorBase.InvokeExecuteMethod(System.Reflection.MethodInfo,System.Object)",
      "Remotion.Linq.Clauses.ResultOperatorBase.GetConstantValueFromExpression``1(System.String,System.Linq.Expressions.Expression)",
      "Remotion.Linq.Clauses.ResultOperatorBase.CheckSequenceItemType(Remotion.Linq.Clauses.StreamedData.StreamedSequenceInfo,System.Type)",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.IncludeResultOperator\"/>",
    "level": 4,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/ResultOperators/Internal/IncludeResultOperator.cs/#L19"
  },
  "isClass": true,
  "_allowToc": true
}
