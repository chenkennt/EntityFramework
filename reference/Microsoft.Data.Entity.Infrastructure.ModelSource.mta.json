
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Infrastructure.ModelSource",
    "id": "ModelSource",
    "parent": "Microsoft.Data.Entity.Infrastructure",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.ModelSource.#ctor(Microsoft.Data.Entity.Internal.IDbSetFinder,Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder)",
            "id": "ModelSource_IDbSetFinder__ICoreConventionSetBuilder_",
            "parent": "Microsoft.Data.Entity.Infrastructure.ModelSource",
            "href": "Microsoft.Data.Entity.Infrastructure.ModelSource.yml",
            "name": "ModelSource(IDbSetFinder, ICoreConventionSetBuilder)",
            "fullName": "Microsoft.Data.Entity.Infrastructure.ModelSource.ModelSource(Microsoft.Data.Entity.Internal.IDbSetFinder, Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
              "startLine": 31,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "syntax": {
              "content": "protected ModelSource(IDbSetFinder setFinder, ICoreConventionSetBuilder coreConventionSetBuilder)",
              "content.vb": "Protected Sub New(setFinder As IDbSetFinder, coreConventionSetBuilder As ICoreConventionSetBuilder)",
              "parameters": [
                {
                  "id": "setFinder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Internal.IDbSetFinder",
                    "parent": "Microsoft.Data.Entity.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Internal.IDbSetFinder.yml",
                    "name": "IDbSetFinder",
                    "fullName": "Microsoft.Data.Entity.Internal.IDbSetFinder",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Internal.IDbSetFinder\" name=\"Microsoft.Data.Entity.Internal.IDbSetFinder\"/>",
                    "id": "IDbSetFinder",
                    "level": 0
                  }
                },
                {
                  "id": "coreConventionSetBuilder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Conventions.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder.yml",
                    "name": "ICoreConventionSetBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder\" name=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder\"/>",
                    "id": "ICoreConventionSetBuilder",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.ModelSource.#ctor(Microsoft.Data.Entity.Internal.IDbSetFinder,Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder)\" name=\"Microsoft.Data.Entity.Infrastructure.ModelSource.ModelSource(Microsoft.Data.Entity.Internal.IDbSetFinder, Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/ModelSource.cs/#L32"
          }
        ]
      },
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.ModelSource.CoreConventionSetBuilder",
            "id": "CoreConventionSetBuilder",
            "parent": "Microsoft.Data.Entity.Infrastructure.ModelSource",
            "href": "Microsoft.Data.Entity.Infrastructure.ModelSource.yml",
            "name": "CoreConventionSetBuilder",
            "fullName": "Microsoft.Data.Entity.Infrastructure.ModelSource.CoreConventionSetBuilder",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
              "startLine": 29,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "syntax": {
                "content": "protected virtual ICoreConventionSetBuilder CoreConventionSetBuilder { get; }",
                "content.vb": "Protected Overridable ReadOnly Property CoreConventionSetBuilder As ICoreConventionSetBuilder",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Conventions.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder.yml",
                    "name": "ICoreConventionSetBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder\" name=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.ICoreConventionSetBuilder\"/>",
                    "id": "ICoreConventionSetBuilder",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.ModelSource.CoreConventionSetBuilder\" name=\"Microsoft.Data.Entity.Infrastructure.ModelSource.CoreConventionSetBuilder\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/ModelSource.cs/#L30"
          },
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.ModelSource.SetFinder",
            "id": "SetFinder",
            "parent": "Microsoft.Data.Entity.Infrastructure.ModelSource",
            "href": "Microsoft.Data.Entity.Infrastructure.ModelSource.yml",
            "name": "SetFinder",
            "fullName": "Microsoft.Data.Entity.Infrastructure.ModelSource.SetFinder",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
              "startLine": 28,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "syntax": {
                "content": "protected virtual IDbSetFinder SetFinder { get; }",
                "content.vb": "Protected Overridable ReadOnly Property SetFinder As IDbSetFinder",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Internal.IDbSetFinder",
                    "parent": "Microsoft.Data.Entity.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Internal.IDbSetFinder.yml",
                    "name": "IDbSetFinder",
                    "fullName": "Microsoft.Data.Entity.Internal.IDbSetFinder",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Internal.IDbSetFinder\" name=\"Microsoft.Data.Entity.Internal.IDbSetFinder\"/>",
                    "id": "IDbSetFinder",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.ModelSource.SetFinder\" name=\"Microsoft.Data.Entity.Infrastructure.ModelSource.SetFinder\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/ModelSource.cs/#L29"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.ModelSource.CreateConventionSet(Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder)",
            "id": "CreateConventionSet_IConventionSetBuilder_",
            "parent": "Microsoft.Data.Entity.Infrastructure.ModelSource",
            "href": "Microsoft.Data.Entity.Infrastructure.ModelSource.yml",
            "name": "CreateConventionSet(IConventionSetBuilder)",
            "fullName": "Microsoft.Data.Entity.Infrastructure.ModelSource.CreateConventionSet(Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
              "startLine": 91,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<p>Creates the convention set to be used for the model. Uses the <xref href=\"Microsoft.Data.Entity.Infrastructure.ModelSource.CoreConventionSetBuilder\"></xref>\nif <paramref name=\"conventionSetBuilder\"></paramref> is null.</p>\n",
            "syntax": {
              "content": "protected virtual ConventionSet CreateConventionSet(IConventionSetBuilder conventionSetBuilder)",
              "content.vb": "Protected Overridable Function CreateConventionSet(conventionSetBuilder As IConventionSetBuilder) As ConventionSet",
              "parameters": [
                {
                  "id": "conventionSetBuilder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Conventions.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder.yml",
                    "name": "IConventionSetBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder\" name=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder\"/>",
                    "id": "IConventionSetBuilder",
                    "level": 0
                  },
                  "description": "<p>The convention set builder to be used.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Conventions.ConventionSet",
                  "parent": "Microsoft.Data.Entity.Metadata.Conventions",
                  "isExternal": false,
                  "href": "Microsoft.Data.Entity.Metadata.Conventions.ConventionSet.yml",
                  "name": "ConventionSet",
                  "fullName": "Microsoft.Data.Entity.Metadata.Conventions.ConventionSet",
                  "type": "class",
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Conventions.ConventionSet\" name=\"Microsoft.Data.Entity.Metadata.Conventions.ConventionSet\"/>",
                  "id": "ConventionSet",
                  "level": 0
                },
                "description": "<p>The convention set to be used.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.ModelSource.CreateConventionSet(Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder)\" name=\"Microsoft.Data.Entity.Infrastructure.ModelSource.CreateConventionSet(Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/ModelSource.cs/#L92"
          },
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.ModelSource.CreateModel(Microsoft.Data.Entity.DbContext,Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.Data.Entity.Internal.IModelValidator)",
            "id": "CreateModel_DbContext__IConventionSetBuilder__IModelValidator_",
            "parent": "Microsoft.Data.Entity.Infrastructure.ModelSource",
            "href": "Microsoft.Data.Entity.Infrastructure.ModelSource.yml",
            "name": "CreateModel(DbContext, IConventionSetBuilder, IModelValidator)",
            "fullName": "Microsoft.Data.Entity.Infrastructure.ModelSource.CreateModel(Microsoft.Data.Entity.DbContext, Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder, Microsoft.Data.Entity.Internal.IModelValidator)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
              "startLine": 59,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<p>Creates the model. This method is called when the model was not found in the cache.</p>\n",
            "syntax": {
              "content": "protected virtual IModel CreateModel(DbContext context, IConventionSetBuilder conventionSetBuilder, IModelValidator validator)",
              "content.vb": "Protected Overridable Function CreateModel(context As DbContext, conventionSetBuilder As IConventionSetBuilder, validator As IModelValidator) As IModel",
              "parameters": [
                {
                  "id": "context",
                  "type": {
                    "uid": "Microsoft.Data.Entity.DbContext",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.DbContext.yml",
                    "name": "DbContext",
                    "fullName": "Microsoft.Data.Entity.DbContext",
                    "specName": "<xref href=\"Microsoft.Data.Entity.DbContext\" name=\"Microsoft.Data.Entity.DbContext\"/>",
                    "id": "DbContext",
                    "level": 0
                  },
                  "description": "<p>The context the model is being produced for.</p>\n"
                },
                {
                  "id": "conventionSetBuilder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Conventions.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder.yml",
                    "name": "IConventionSetBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder\" name=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder\"/>",
                    "id": "IConventionSetBuilder",
                    "level": 0
                  },
                  "description": "<p>The convention set to use when creating the model.</p>\n"
                },
                {
                  "id": "validator",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Internal.IModelValidator",
                    "parent": "Microsoft.Data.Entity.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Internal.IModelValidator.yml",
                    "name": "IModelValidator",
                    "fullName": "Microsoft.Data.Entity.Internal.IModelValidator",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Internal.IModelValidator\" name=\"Microsoft.Data.Entity.Internal.IModelValidator\"/>",
                    "id": "IModelValidator",
                    "level": 0
                  },
                  "description": "<p>The validator to verify the model can be successfully used with the context.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.IModel",
                  "parent": "Microsoft.Data.Entity.Metadata",
                  "isExternal": false,
                  "href": "Microsoft.Data.Entity.Metadata.IModel.yml",
                  "name": "IModel",
                  "fullName": "Microsoft.Data.Entity.Metadata.IModel",
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IModel\" name=\"Microsoft.Data.Entity.Metadata.IModel\"/>",
                  "id": "IModel",
                  "level": 0
                },
                "description": "<p>The model to be used.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.ModelSource.CreateModel(Microsoft.Data.Entity.DbContext,Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.Data.Entity.Internal.IModelValidator)\" name=\"Microsoft.Data.Entity.Infrastructure.ModelSource.CreateModel(Microsoft.Data.Entity.DbContext, Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder, Microsoft.Data.Entity.Internal.IModelValidator)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/ModelSource.cs/#L60"
          },
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.ModelSource.FindSets(Microsoft.Data.Entity.ModelBuilder,Microsoft.Data.Entity.DbContext)",
            "id": "FindSets_ModelBuilder__DbContext_",
            "parent": "Microsoft.Data.Entity.Infrastructure.ModelSource",
            "href": "Microsoft.Data.Entity.Infrastructure.ModelSource.yml",
            "name": "FindSets(ModelBuilder, DbContext)",
            "fullName": "Microsoft.Data.Entity.Infrastructure.ModelSource.FindSets(Microsoft.Data.Entity.ModelBuilder, Microsoft.Data.Entity.DbContext)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
              "startLine": 104,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<p>Adds the entity types found in <xref href=\"Microsoft.Data.Entity.DbSet`1\"></xref> properties on the context to the model.</p>\n",
            "syntax": {
              "content": "protected virtual void FindSets(ModelBuilder modelBuilder, DbContext context)",
              "content.vb": "Protected Overridable Sub FindSets(modelBuilder As ModelBuilder, context As DbContext)",
              "parameters": [
                {
                  "id": "modelBuilder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.ModelBuilder",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.ModelBuilder.yml",
                    "name": "ModelBuilder",
                    "fullName": "Microsoft.Data.Entity.ModelBuilder",
                    "specName": "<xref href=\"Microsoft.Data.Entity.ModelBuilder\" name=\"Microsoft.Data.Entity.ModelBuilder\"/>",
                    "id": "ModelBuilder",
                    "level": 0
                  }
                },
                {
                  "id": "context",
                  "type": {
                    "uid": "Microsoft.Data.Entity.DbContext",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.DbContext.yml",
                    "name": "DbContext",
                    "fullName": "Microsoft.Data.Entity.DbContext",
                    "specName": "<xref href=\"Microsoft.Data.Entity.DbContext\" name=\"Microsoft.Data.Entity.DbContext\"/>",
                    "id": "DbContext",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.ModelSource.FindSets(Microsoft.Data.Entity.ModelBuilder,Microsoft.Data.Entity.DbContext)\" name=\"Microsoft.Data.Entity.Infrastructure.ModelSource.FindSets(Microsoft.Data.Entity.ModelBuilder, Microsoft.Data.Entity.DbContext)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/ModelSource.cs/#L105"
          },
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.ModelSource.GetModel(Microsoft.Data.Entity.DbContext,Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.Data.Entity.Internal.IModelValidator)",
            "id": "GetModel_DbContext__IConventionSetBuilder__IModelValidator_",
            "parent": "Microsoft.Data.Entity.Infrastructure.ModelSource",
            "href": "Microsoft.Data.Entity.Infrastructure.ModelSource.yml",
            "name": "GetModel(DbContext, IConventionSetBuilder, IModelValidator)",
            "fullName": "Microsoft.Data.Entity.Infrastructure.ModelSource.GetModel(Microsoft.Data.Entity.DbContext, Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder, Microsoft.Data.Entity.Internal.IModelValidator)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
              "startLine": 49,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<p>Returns the model from the cache, or creates a model if it is not present in the cache.</p>\n",
            "syntax": {
              "content": "public virtual IModel GetModel(DbContext context, IConventionSetBuilder conventionSetBuilder, IModelValidator validator)",
              "content.vb": "Public Overridable Function GetModel(context As DbContext, conventionSetBuilder As IConventionSetBuilder, validator As IModelValidator) As IModel",
              "parameters": [
                {
                  "id": "context",
                  "type": {
                    "uid": "Microsoft.Data.Entity.DbContext",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.DbContext.yml",
                    "name": "DbContext",
                    "fullName": "Microsoft.Data.Entity.DbContext",
                    "specName": "<xref href=\"Microsoft.Data.Entity.DbContext\" name=\"Microsoft.Data.Entity.DbContext\"/>",
                    "id": "DbContext",
                    "level": 0
                  },
                  "description": "<p>The context the model is being produced for.</p>\n"
                },
                {
                  "id": "conventionSetBuilder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Conventions.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder.yml",
                    "name": "IConventionSetBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder\" name=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder\"/>",
                    "id": "IConventionSetBuilder",
                    "level": 0
                  },
                  "description": "<p>The convention set to use when creating the model.</p>\n"
                },
                {
                  "id": "validator",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Internal.IModelValidator",
                    "parent": "Microsoft.Data.Entity.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Internal.IModelValidator.yml",
                    "name": "IModelValidator",
                    "fullName": "Microsoft.Data.Entity.Internal.IModelValidator",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Internal.IModelValidator\" name=\"Microsoft.Data.Entity.Internal.IModelValidator\"/>",
                    "id": "IModelValidator",
                    "level": 0
                  },
                  "description": "<p>The validator to verify the model can be successfully used with the context.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.IModel",
                  "parent": "Microsoft.Data.Entity.Metadata",
                  "isExternal": false,
                  "href": "Microsoft.Data.Entity.Metadata.IModel.yml",
                  "name": "IModel",
                  "fullName": "Microsoft.Data.Entity.Metadata.IModel",
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IModel\" name=\"Microsoft.Data.Entity.Metadata.IModel\"/>",
                  "id": "IModel",
                  "level": 0
                },
                "description": "<p>The model to be used.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.ModelSource.GetModel(Microsoft.Data.Entity.DbContext,Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.Data.Entity.Internal.IModelValidator)\" name=\"Microsoft.Data.Entity.Infrastructure.ModelSource.GetModel(Microsoft.Data.Entity.DbContext, Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder, Microsoft.Data.Entity.Internal.IModelValidator)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/ModelSource.cs/#L50"
          },
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.ModelSource.OnModelCreating(Microsoft.Data.Entity.DbContext,Microsoft.Data.Entity.ModelBuilder)",
            "id": "OnModelCreating_DbContext__ModelBuilder_",
            "parent": "Microsoft.Data.Entity.Infrastructure.ModelSource",
            "href": "Microsoft.Data.Entity.Infrastructure.ModelSource.yml",
            "name": "OnModelCreating(DbContext, ModelBuilder)",
            "fullName": "Microsoft.Data.Entity.Infrastructure.ModelSource.OnModelCreating(Microsoft.Data.Entity.DbContext, Microsoft.Data.Entity.ModelBuilder)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
              "startLine": 117,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<p>Runs <xref href=\"Microsoft.Data.Entity.DbContext.OnModelCreating(Microsoft.Data.Entity.ModelBuilder)\"></xref> from the context.</p>\n",
            "syntax": {
              "content": "public static void OnModelCreating(DbContext context, ModelBuilder modelBuilder)",
              "content.vb": "Public Shared Sub OnModelCreating(context As DbContext, modelBuilder As ModelBuilder)",
              "parameters": [
                {
                  "id": "context",
                  "type": {
                    "uid": "Microsoft.Data.Entity.DbContext",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.DbContext.yml",
                    "name": "DbContext",
                    "fullName": "Microsoft.Data.Entity.DbContext",
                    "specName": "<xref href=\"Microsoft.Data.Entity.DbContext\" name=\"Microsoft.Data.Entity.DbContext\"/>",
                    "id": "DbContext",
                    "level": 0
                  }
                },
                {
                  "id": "modelBuilder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.ModelBuilder",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.ModelBuilder.yml",
                    "name": "ModelBuilder",
                    "fullName": "Microsoft.Data.Entity.ModelBuilder",
                    "specName": "<xref href=\"Microsoft.Data.Entity.ModelBuilder\" name=\"Microsoft.Data.Entity.ModelBuilder\"/>",
                    "id": "ModelBuilder",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.ModelSource.OnModelCreating(Microsoft.Data.Entity.DbContext,Microsoft.Data.Entity.ModelBuilder)\" name=\"Microsoft.Data.Entity.Infrastructure.ModelSource.OnModelCreating(Microsoft.Data.Entity.DbContext, Microsoft.Data.Entity.ModelBuilder)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/ModelSource.cs/#L118"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Infrastructure.ModelSource.yml",
    "name": "ModelSource",
    "fullName": "Microsoft.Data.Entity.Infrastructure.ModelSource",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Infrastructure/ModelSource.cs",
      "startLine": 25,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Infrastructure",
    "summary": "<para>\nA base implementation of <xref href=\"Microsoft.Data.Entity.Infrastructure.IModelSource\"></xref> that produces a model based on the <xref href=\"Microsoft.Data.Entity.DbSet`1\"></xref> properties\nexposed on the context. The model is cached to avoid recreating it every time it is requested.\n</para>\n<para>\nThis type is typically used by database providers (and other extensions). It is generally\nnot used in application code.\n</para>",
    "syntax": {
      "content": "public abstract class ModelSource : IModelSource",
      "content.vb": "Public MustInherit Class ModelSource Implements IModelSource"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Infrastructure.IModelSource"
    ],
    "inheritedMembers": [
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.ModelSource\" name=\"Microsoft.Data.Entity.Infrastructure.ModelSource\"/>",
    "level": 1,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/ModelSource.cs/#L26"
  },
  "isClass": true,
  "_allowToc": true
}
