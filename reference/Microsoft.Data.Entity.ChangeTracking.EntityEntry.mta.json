
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
    "id": "EntityEntry",
    "parent": "Microsoft.Data.Entity.ChangeTracking",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.#ctor(Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry)",
            "id": "EntityEntry_InternalEntityEntry_",
            "parent": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
            "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.yml",
            "name": "EntityEntry(InternalEntityEntry)",
            "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.EntityEntry(Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
              "startLine": 32,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.ChangeTracking",
            "summary": "<p>Initializes a new instance of the <xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry\"></xref> class. Instances of this class are returned from\nmethods when using the <xref href=\"Microsoft.Data.Entity.ChangeTracking.ChangeTracker\"></xref> API and it is not designed to be directly constructed in\nyour application code.</p>\n",
            "syntax": {
              "content": "public EntityEntry(InternalEntityEntry internalEntry)",
              "content.vb": "Public Sub New(internalEntry As InternalEntityEntry)",
              "parameters": [
                {
                  "id": "internalEntry",
                  "type": {
                    "uid": "Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry",
                    "parent": "Microsoft.Data.Entity.ChangeTracking.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry.yml",
                    "name": "InternalEntityEntry",
                    "fullName": "Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry\" name=\"Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry\"/>",
                    "id": "InternalEntityEntry",
                    "level": 0
                  },
                  "description": "<p>The internal entry tracking information about this entity.</p>\n"
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.#ctor(Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry)\" name=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.EntityEntry(Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/ChangeTracking/EntityEntry.cs/#L33"
          }
        ]
      },
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.Context",
            "id": "Context",
            "parent": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
            "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.yml",
            "name": "Context",
            "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.Context",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
              "startLine": 80,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.ChangeTracking",
            "summary": "<p>Gets the context that is tracking the entity.</p>\n",
            "syntax": {
                "content": "public virtual DbContext Context { get; }",
                "content.vb": "Public Overridable ReadOnly Property Context As DbContext",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.DbContext",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.DbContext.yml",
                    "name": "DbContext",
                    "fullName": "Microsoft.Data.Entity.DbContext",
                    "specName": "<xref href=\"Microsoft.Data.Entity.DbContext\" name=\"Microsoft.Data.Entity.DbContext\"/>",
                    "id": "DbContext",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.Context\" name=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.Context\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/ChangeTracking/EntityEntry.cs/#L81"
          },
          {
            "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.Entity",
            "id": "Entity",
            "parent": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
            "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.yml",
            "name": "Entity",
            "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.Entity",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
              "startLine": 42,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.ChangeTracking",
            "summary": "<p>Gets the entity being tracked by this entry.</p>\n",
            "syntax": {
                "content": "public virtual object Entity { get; }",
                "content.vb": "Public Overridable ReadOnly Property Entity As Object",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Object",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Object",
                    "fullName": "System.Object",
                    "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
                    "id": "Object",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.Entity\" name=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.Entity\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/ChangeTracking/EntityEntry.cs/#L43"
          },
          {
            "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.IsKeySet",
            "id": "IsKeySet",
            "parent": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
            "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.yml",
            "name": "IsKeySet",
            "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.IsKeySet",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
              "startLine": 105,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.ChangeTracking",
            "summary": "<p>Gets a value indicating if the key values of this entity have been assigned a value.\nFalse if one or more of the key properties is assigned null or the CLR default,\notherwise true.</p>\n",
            "syntax": {
                "content": "public virtual bool IsKeySet { get; }",
                "content.vb": "Public Overridable ReadOnly Property IsKeySet As Boolean",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.IsKeySet\" name=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.IsKeySet\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/ChangeTracking/EntityEntry.cs/#L106"
          },
          {
            "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.Metadata",
            "id": "Metadata",
            "parent": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
            "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.yml",
            "name": "Metadata",
            "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.Metadata",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
              "startLine": 85,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.ChangeTracking",
            "summary": "<p>Gets the metadata about the shape of the entity, its relationships to other entities, and how it maps to the database.</p>\n",
            "syntax": {
                "content": "public virtual IEntityType Metadata { get; }",
                "content.vb": "Public Overridable ReadOnly Property Metadata As IEntityType",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.IEntityType",
                    "parent": "Microsoft.Data.Entity.Metadata",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.IEntityType.yml",
                    "name": "IEntityType",
                    "fullName": "Microsoft.Data.Entity.Metadata.IEntityType",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IEntityType\" name=\"Microsoft.Data.Entity.Metadata.IEntityType\"/>",
                    "id": "IEntityType",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.Metadata\" name=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.Metadata\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/ChangeTracking/EntityEntry.cs/#L86"
          },
          {
            "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#ChangeTracking#Internal#InternalEntityEntry}#Instance",
            "id": "IInfrastructure_InternalEntityEntry__Instance",
            "parent": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
            "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.yml",
            "name": "IInfrastructure<InternalEntityEntry>.Instance",
            "name.vb": "Microsoft.Data.Entity.Infrastructure.IInfrastructure<Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry>.Instance",
            "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.Microsoft.Data.Entity.Infrastructure.IInfrastructure<Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry>.Instance",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
              "startLine": 75,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.ChangeTracking",
            "summary": "<para>\nGets the internal entry that is tracking information about this entity.\n</para>\n<para>\nThis property is intended for use by extension methods. It is not intended to be used in\napplication code.\n</para>",
            "syntax": {
                "content": "InternalEntityEntry IInfrastructure<InternalEntityEntry>.Instance { get; }",
                "content.vb": "ReadOnly WriteOnly Property Microsoft.Data.Entity.Infrastructure.IInfrastructure<Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry>.Instance As InternalEntityEntry Implements IInfrastructure(Of InternalEntityEntry).Instance",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry",
                    "parent": "Microsoft.Data.Entity.ChangeTracking.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry.yml",
                    "name": "InternalEntityEntry",
                    "fullName": "Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry\" name=\"Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry\"/>",
                    "id": "InternalEntityEntry",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#ChangeTracking#Internal#InternalEntityEntry}#Instance\" name=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.Microsoft.Data.Entity.Infrastructure.IInfrastructure&lt;Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry&gt;.Instance\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/ChangeTracking/EntityEntry.cs/#L76"
          },
          {
            "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.State",
            "id": "State",
            "parent": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
            "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.yml",
            "name": "State",
            "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.State",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
              "startLine": 55,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.ChangeTracking",
            "summary": "<para>\nGets or sets that state that this entity is being tracked in.\n</para>\n<para>\nWhen setting the state, the entity will always end up in the specified state. For example, if you\nchange the state to <xref href=\"Microsoft.Data.Entity.EntityState.Deleted\"></xref> the entity will be marked for deletion regardless\nof its current state. This is different than calling <xref href=\"Microsoft.Data.Entity.DbSet`1.Remove(`0)\"></xref> where the entity\nwill be disconnected (rather than marked for deletion) if it is in the <xref href=\"Microsoft.Data.Entity.EntityState.Added\"></xref> state.\n</para>",
            "syntax": {
                "content": "public virtual EntityState State { get; set; }",
                "content.vb": "Public Overridable Property State As EntityState",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.EntityState",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.EntityState.yml",
                    "name": "EntityState",
                    "fullName": "Microsoft.Data.Entity.EntityState",
                    "type": "enum",
                    "summary": "<p>The state in which an entity is being tracked by a context.</p>\n",
                    "specName": "<xref href=\"Microsoft.Data.Entity.EntityState\" name=\"Microsoft.Data.Entity.EntityState\"/>",
                    "id": "EntityState",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.State\" name=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.State\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/ChangeTracking/EntityEntry.cs/#L56"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.Property(System.String)",
            "id": "Property_String_",
            "parent": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
            "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.yml",
            "name": "Property(String)",
            "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.Property(System.String)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
              "startLine": 93,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.ChangeTracking",
            "summary": "<p>Provides access to change tracking information and operations for a given\nproperty of this entity.</p>\n",
            "syntax": {
              "content": "public virtual PropertyEntry Property(string propertyName)",
              "content.vb": "Public Overridable Function Property(propertyName As String) As PropertyEntry",
              "parameters": [
                {
                  "id": "propertyName",
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  },
                  "description": "<p>The property to access information and operations for.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.ChangeTracking.PropertyEntry",
                  "parent": "Microsoft.Data.Entity.ChangeTracking",
                  "isExternal": false,
                  "href": "Microsoft.Data.Entity.ChangeTracking.PropertyEntry.yml",
                  "name": "PropertyEntry",
                  "fullName": "Microsoft.Data.Entity.ChangeTracking.PropertyEntry",
                  "type": "class",
                  "summary": "<para>\nProvides access to change tracking information and operations for a given property.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ChangeTracking.ChangeTracker\"></xref> API and it is\nnot designed to be directly constructed in your application code.\n</para>",
                  "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.PropertyEntry\" name=\"Microsoft.Data.Entity.ChangeTracking.PropertyEntry\"/>",
                  "id": "PropertyEntry",
                  "level": 0
                },
                "description": "<p>An object that exposes change tracking information and operations for the given property.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.Property(System.String)\" name=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry.Property(System.String)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/ChangeTracking/EntityEntry.cs/#L94"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.ChangeTracking.EntityEntry.yml",
    "name": "EntityEntry",
    "fullName": "Microsoft.Data.Entity.ChangeTracking.EntityEntry",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/ChangeTracking/EntityEntry.cs",
      "startLine": 21,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.ChangeTracking",
    "summary": "<para>\nProvides access to change tracking information and operations for a given entity.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ChangeTracking.ChangeTracker\"></xref> API and it is\nnot designed to be directly constructed in your application code.\n</para>",
    "syntax": {
      "content": "public class EntityEntry : IInfrastructure<InternalEntityEntry>",
      "content.vb": "Public Class EntityEntry Implements IInfrastructure(Of InternalEntityEntry)"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.ChangeTracking.Internal.InternalEntityEntry}"
    ],
    "inheritedMembers": [
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry\" name=\"Microsoft.Data.Entity.ChangeTracking.EntityEntry\"/>",
    "level": 1,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/ChangeTracking/EntityEntry.cs/#L22"
  },
  "isClass": true,
  "_allowToc": true
}
