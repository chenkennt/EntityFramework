
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor",
    "id": "RelationalEntityQueryableExpressionVisitor",
    "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.#ctor(Microsoft.Data.Entity.Metadata.IModel,Microsoft.Data.Entity.ChangeTracking.Internal.IKeyValueFactorySource,Microsoft.Data.Entity.Query.Expressions.ISelectExpressionFactory,Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.IMaterializerFactory,Microsoft.Data.Entity.Query.Internal.IShaperCommandContextFactory,Microsoft.Data.Entity.Metadata.IRelationalAnnotationProvider,Microsoft.Data.Entity.Query.RelationalQueryModelVisitor,Remotion.Linq.Clauses.IQuerySource)",
            "id": "RelationalEntityQueryableExpressionVisitor_IModel__IKeyValueFactorySource__ISelectExpressionFactory__IMaterializerFactory__IShaperCommandContextFactory__IRelationalAnnotationProvider__RelationalQueryModelVisitor__IQuerySource_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.yml",
            "name": "RelationalEntityQueryableExpressionVisitor(IModel, IKeyValueFactorySource, ISelectExpressionFactory, IMaterializerFactory, IShaperCommandContextFactory, IRelationalAnnotationProvider, RelationalQueryModelVisitor, IQuerySource)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.RelationalEntityQueryableExpressionVisitor(Microsoft.Data.Entity.Metadata.IModel, Microsoft.Data.Entity.ChangeTracking.Internal.IKeyValueFactorySource, Microsoft.Data.Entity.Query.Expressions.ISelectExpressionFactory, Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.IMaterializerFactory, Microsoft.Data.Entity.Query.Internal.IShaperCommandContextFactory, Microsoft.Data.Entity.Metadata.IRelationalAnnotationProvider, Microsoft.Data.Entity.Query.RelationalQueryModelVisitor, Remotion.Linq.Clauses.IQuerySource)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs",
              "startLine": 34,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors",
            "syntax": {
              "content": "public RelationalEntityQueryableExpressionVisitor(IModel model, IKeyValueFactorySource keyValueFactorySource, ISelectExpressionFactory selectExpressionFactory, IMaterializerFactory materializerFactory, IShaperCommandContextFactory shaperCommandContextFactory, IRelationalAnnotationProvider relationalAnnotationProvider, RelationalQueryModelVisitor queryModelVisitor, IQuerySource querySource)",
              "content.vb": "Public Sub New(model As IModel, keyValueFactorySource As IKeyValueFactorySource, selectExpressionFactory As ISelectExpressionFactory, materializerFactory As IMaterializerFactory, shaperCommandContextFactory As IShaperCommandContextFactory, relationalAnnotationProvider As IRelationalAnnotationProvider, queryModelVisitor As RelationalQueryModelVisitor, querySource As IQuerySource)",
              "parameters": [
                {
                  "id": "model",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.IModel",
                    "parent": "Microsoft.Data.Entity.Metadata",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.IModel.yml",
                    "name": "IModel",
                    "fullName": "Microsoft.Data.Entity.Metadata.IModel",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IModel\" name=\"Microsoft.Data.Entity.Metadata.IModel\"/>",
                    "id": "IModel",
                    "level": 0
                  }
                },
                {
                  "id": "keyValueFactorySource",
                  "type": {
                    "uid": "Microsoft.Data.Entity.ChangeTracking.Internal.IKeyValueFactorySource",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.ChangeTracking.Internal.IKeyValueFactorySource.yml",
                    "name": "IKeyValueFactorySource",
                    "fullName": "Microsoft.Data.Entity.ChangeTracking.Internal.IKeyValueFactorySource",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.ChangeTracking.Internal.IKeyValueFactorySource\" name=\"Microsoft.Data.Entity.ChangeTracking.Internal.IKeyValueFactorySource\"/>",
                    "id": "IKeyValueFactorySource",
                    "level": 0
                  }
                },
                {
                  "id": "selectExpressionFactory",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.ISelectExpressionFactory",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.ISelectExpressionFactory.yml",
                    "name": "ISelectExpressionFactory",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.ISelectExpressionFactory",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.ISelectExpressionFactory\" name=\"Microsoft.Data.Entity.Query.Expressions.ISelectExpressionFactory\"/>",
                    "id": "ISelectExpressionFactory",
                    "level": 0
                  }
                },
                {
                  "id": "materializerFactory",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.IMaterializerFactory",
                    "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.IMaterializerFactory.yml",
                    "name": "IMaterializerFactory",
                    "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.IMaterializerFactory",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.IMaterializerFactory\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.IMaterializerFactory\"/>",
                    "id": "IMaterializerFactory",
                    "level": 0
                  }
                },
                {
                  "id": "shaperCommandContextFactory",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Internal.IShaperCommandContextFactory",
                    "parent": "Microsoft.Data.Entity.Query.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Internal.IShaperCommandContextFactory.yml",
                    "name": "IShaperCommandContextFactory",
                    "fullName": "Microsoft.Data.Entity.Query.Internal.IShaperCommandContextFactory",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.IShaperCommandContextFactory\" name=\"Microsoft.Data.Entity.Query.Internal.IShaperCommandContextFactory\"/>",
                    "id": "IShaperCommandContextFactory",
                    "level": 0
                  }
                },
                {
                  "id": "relationalAnnotationProvider",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.IRelationalAnnotationProvider",
                    "parent": "Microsoft.Data.Entity.Metadata",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.IRelationalAnnotationProvider.yml",
                    "name": "IRelationalAnnotationProvider",
                    "fullName": "Microsoft.Data.Entity.Metadata.IRelationalAnnotationProvider",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IRelationalAnnotationProvider\" name=\"Microsoft.Data.Entity.Metadata.IRelationalAnnotationProvider\"/>",
                    "id": "IRelationalAnnotationProvider",
                    "level": 0
                  }
                },
                {
                  "id": "queryModelVisitor",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.RelationalQueryModelVisitor",
                    "parent": "Microsoft.Data.Entity.Query",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.RelationalQueryModelVisitor.yml",
                    "name": "RelationalQueryModelVisitor",
                    "fullName": "Microsoft.Data.Entity.Query.RelationalQueryModelVisitor",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.RelationalQueryModelVisitor\" name=\"Microsoft.Data.Entity.Query.RelationalQueryModelVisitor\"/>",
                    "id": "RelationalQueryModelVisitor",
                    "level": 0
                  }
                },
                {
                  "id": "querySource",
                  "type": {
                    "uid": "Remotion.Linq.Clauses.IQuerySource",
                    "parent": "Remotion.Linq.Clauses",
                    "isExternal": true,
                    "name": "IQuerySource",
                    "fullName": "Remotion.Linq.Clauses.IQuerySource",
                    "specName": "<xref href=\"Remotion.Linq.Clauses.IQuerySource\" name=\"Remotion.Linq.Clauses.IQuerySource\"/>",
                    "id": "IQuerySource",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.#ctor(Microsoft.Data.Entity.Metadata.IModel,Microsoft.Data.Entity.ChangeTracking.Internal.IKeyValueFactorySource,Microsoft.Data.Entity.Query.Expressions.ISelectExpressionFactory,Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.IMaterializerFactory,Microsoft.Data.Entity.Query.Internal.IShaperCommandContextFactory,Microsoft.Data.Entity.Metadata.IRelationalAnnotationProvider,Microsoft.Data.Entity.Query.RelationalQueryModelVisitor,Remotion.Linq.Clauses.IQuerySource)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.RelationalEntityQueryableExpressionVisitor(Microsoft.Data.Entity.Metadata.IModel, Microsoft.Data.Entity.ChangeTracking.Internal.IKeyValueFactorySource, Microsoft.Data.Entity.Query.Expressions.ISelectExpressionFactory, Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.IMaterializerFactory, Microsoft.Data.Entity.Query.Internal.IShaperCommandContextFactory, Microsoft.Data.Entity.Metadata.IRelationalAnnotationProvider, Microsoft.Data.Entity.Query.RelationalQueryModelVisitor, Remotion.Linq.Clauses.IQuerySource)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs/#L35"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitEntityQueryable(System.Type)",
            "id": "VisitEntityQueryable_Type_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.yml",
            "name": "VisitEntityQueryable(Type)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitEntityQueryable(System.Type)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs",
              "startLine": 113,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors",
            "syntax": {
              "content": "protected override Expression VisitEntityQueryable(Type elementType)",
              "content.vb": "Protected Overrides Function VisitEntityQueryable(elementType As Type) As Expression",
              "parameters": [
                {
                  "id": "elementType",
                  "type": {
                    "uid": "System.Type",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Type",
                    "fullName": "System.Type",
                    "specName": "<xref href=\"System.Type\" name=\"System.Type\"/>",
                    "id": "Type",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "Microsoft.Data.Entity.Query.ExpressionVisitors.EntityQueryableExpressionVisitor.VisitEntityQueryable(System.Type)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitEntityQueryable(System.Type)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitEntityQueryable(System.Type)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs/#L114"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)",
            "id": "VisitMember_MemberExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.yml",
            "name": "VisitMember(MemberExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs",
              "startLine": 79,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors",
            "syntax": {
              "content": "protected override Expression VisitMember(MemberExpression node)",
              "content.vb": "Protected Overrides Function VisitMember(node As MemberExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.MemberExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "MemberExpression",
                    "fullName": "System.Linq.Expressions.MemberExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.MemberExpression\" name=\"System.Linq.Expressions.MemberExpression\"/>",
                    "id": "MemberExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs/#L80"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)",
            "id": "VisitMethodCall_MethodCallExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.yml",
            "name": "VisitMethodCall(MethodCallExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs",
              "startLine": 96,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors",
            "syntax": {
              "content": "protected override Expression VisitMethodCall(MethodCallExpression node)",
              "content.vb": "Protected Overrides Function VisitMethodCall(node As MethodCallExpression) As Expression",
              "parameters": [
                {
                  "id": "node",
                  "type": {
                    "uid": "System.Linq.Expressions.MethodCallExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "MethodCallExpression",
                    "fullName": "System.Linq.Expressions.MethodCallExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.MethodCallExpression\" name=\"System.Linq.Expressions.MethodCallExpression\"/>",
                    "id": "MethodCallExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs/#L97"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)",
            "id": "VisitSubQuery_SubQueryExpression_",
            "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.yml",
            "name": "VisitSubQuery(SubQueryExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs",
              "startLine": 63,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors",
            "syntax": {
              "content": "protected override Expression VisitSubQuery(SubQueryExpression expression)",
              "content.vb": "Protected Overrides Function VisitSubQuery(expression As SubQueryExpression) As Expression",
              "parameters": [
                {
                  "id": "expression",
                  "type": {
                    "uid": "Remotion.Linq.Clauses.Expressions.SubQueryExpression",
                    "parent": "Remotion.Linq.Clauses.Expressions",
                    "isExternal": true,
                    "name": "SubQueryExpression",
                    "fullName": "Remotion.Linq.Clauses.Expressions.SubQueryExpression",
                    "specName": "<xref href=\"Remotion.Linq.Clauses.Expressions.SubQueryExpression\" name=\"Remotion.Linq.Clauses.Expressions.SubQueryExpression\"/>",
                    "id": "SubQueryExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs/#L64"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.yml",
    "name": "RelationalEntityQueryableExpressionVisitor",
    "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs",
      "startLine": 24,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Relational"
    ],
    "namespace": "Microsoft.Data.Entity.Query.ExpressionVisitors",
    "syntax": {
      "content": "public class RelationalEntityQueryableExpressionVisitor : EntityQueryableExpressionVisitor",
      "content.vb": "Public Class RelationalEntityQueryableExpressionVisitor Inherits EntityQueryableExpressionVisitor"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      },
      {
        "uid": "System.Linq.Expressions.ExpressionVisitor",
        "parent": "System.Linq.Expressions",
        "isExternal": true,
        "name": "ExpressionVisitor",
        "fullName": "System.Linq.Expressions.ExpressionVisitor",
        "specName": "<xref href=\"System.Linq.Expressions.ExpressionVisitor\" name=\"System.Linq.Expressions.ExpressionVisitor\"/>",
        "id": "ExpressionVisitor",
        "level": 0,
        "index": 1
      },
      {
        "uid": "Remotion.Linq.Parsing.RelinqExpressionVisitor",
        "parent": "Remotion.Linq.Parsing",
        "isExternal": true,
        "name": "RelinqExpressionVisitor",
        "fullName": "Remotion.Linq.Parsing.RelinqExpressionVisitor",
        "specName": "<xref href=\"Remotion.Linq.Parsing.RelinqExpressionVisitor\" name=\"Remotion.Linq.Parsing.RelinqExpressionVisitor\"/>",
        "id": "RelinqExpressionVisitor",
        "level": 0,
        "index": 2
      },
      {
        "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.ExpressionVisitorBase",
        "isExternal": false,
        "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.ExpressionVisitorBase.yml",
        "name": "ExpressionVisitorBase",
        "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.ExpressionVisitorBase",
        "type": "class",
        "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.ExpressionVisitorBase\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.ExpressionVisitorBase\"/>",
        "id": "ExpressionVisitorBase",
        "level": 0,
        "index": 3
      },
      {
        "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor",
        "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal",
        "isExternal": false,
        "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor.yml",
        "name": "DefaultQueryExpressionVisitor",
        "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor",
        "type": "class",
        "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor\"/>",
        "id": "DefaultQueryExpressionVisitor",
        "level": 0,
        "index": 4
      },
      {
        "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.EntityQueryableExpressionVisitor",
        "isExternal": false,
        "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.EntityQueryableExpressionVisitor.yml",
        "name": "EntityQueryableExpressionVisitor",
        "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.EntityQueryableExpressionVisitor",
        "type": "class",
        "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.EntityQueryableExpressionVisitor\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.EntityQueryableExpressionVisitor\"/>",
        "id": "EntityQueryableExpressionVisitor",
        "level": 0,
        "index": 5
      }
    ],
    "inheritedMembers": [
      "Microsoft.Data.Entity.Query.ExpressionVisitors.EntityQueryableExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)",
      "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor.QueryModelVisitor",
      "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor.CreateQueryModelVisitor",
      "Microsoft.Data.Entity.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)",
      "Microsoft.Data.Entity.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)",
      "Remotion.Linq.Parsing.RelinqExpressionVisitor.AdjustArgumentsForNewExpression(System.Collections.Generic.IList{System.Linq.Expressions.Expression},System.Collections.Generic.IList{System.Reflection.MemberInfo})",
      "Remotion.Linq.Parsing.RelinqExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)",
      "Remotion.Linq.Parsing.RelinqExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)",
      "System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})",
      "System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.Func{{T},{T}})",
      "System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1({T},System.String)",
      "System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.String)",
      "System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)",
      "System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{{T}})",
      "System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)",
      "System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)",
      "System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)",
      "System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)",
      "System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)",
      "System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)",
      "System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)",
      "System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)",
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor\"/>",
    "level": 6,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ExpressionVisitors/RelationalEntityQueryableExpressionVisitor.cs/#L25"
  },
  "isClass": true,
  "_allowToc": true
}
