
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Query.Internal.EntityQueryable`1",
    "id": "EntityQueryable_TResult_",
    "parent": "Microsoft.Data.Entity.Query.Internal",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.EntityQueryable`1.#ctor(Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider)",
            "id": "EntityQueryable_IAsyncQueryProvider_",
            "parent": "Microsoft.Data.Entity.Query.Internal.EntityQueryable`1",
            "href": "Microsoft.Data.Entity.Query.Internal.EntityQueryable`1.yml",
            "name": "EntityQueryable(IAsyncQueryProvider)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.EntityQueryable<TResult>.EntityQueryable(Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider)",
            "fullName.vb": "Microsoft.Data.Entity.Query.Internal.EntityQueryable(Of TResult).EntityQueryable(Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/EntityQueryable`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/EntityQueryable`.cs",
              "startLine": 13,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "public EntityQueryable(IAsyncQueryProvider provider)",
              "content.vb": "Public Sub New(provider As IAsyncQueryProvider)",
              "parameters": [
                {
                  "id": "provider",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider",
                    "parent": "Microsoft.Data.Entity.Query.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider.yml",
                    "name": "IAsyncQueryProvider",
                    "fullName": "Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider\" name=\"Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider\"/>",
                    "id": "IAsyncQueryProvider",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.EntityQueryable`1.#ctor(Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider)\" name=\"Microsoft.Data.Entity.Query.Internal.EntityQueryable&lt;TResult&gt;.EntityQueryable(Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/EntityQueryable`.cs/#L14"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.EntityQueryable`1.#ctor(Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider,System.Linq.Expressions.Expression)",
            "id": "EntityQueryable_IAsyncQueryProvider__Expression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.EntityQueryable`1",
            "href": "Microsoft.Data.Entity.Query.Internal.EntityQueryable`1.yml",
            "name": "EntityQueryable(IAsyncQueryProvider, Expression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.EntityQueryable<TResult>.EntityQueryable(Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider, System.Linq.Expressions.Expression)",
            "fullName.vb": "Microsoft.Data.Entity.Query.Internal.EntityQueryable(Of TResult).EntityQueryable(Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider, System.Linq.Expressions.Expression)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/EntityQueryable`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/EntityQueryable`.cs",
              "startLine": 18,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "public EntityQueryable(IAsyncQueryProvider provider, Expression expression)",
              "content.vb": "Public Sub New(provider As IAsyncQueryProvider, expression As Expression)",
              "parameters": [
                {
                  "id": "provider",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider",
                    "parent": "Microsoft.Data.Entity.Query.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider.yml",
                    "name": "IAsyncQueryProvider",
                    "fullName": "Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider\" name=\"Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider\"/>",
                    "id": "IAsyncQueryProvider",
                    "level": 0
                  }
                },
                {
                  "id": "expression",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "Expression",
                    "fullName": "System.Linq.Expressions.Expression",
                    "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                    "id": "Expression",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.EntityQueryable`1.#ctor(Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider,System.Linq.Expressions.Expression)\" name=\"Microsoft.Data.Entity.Query.Internal.EntityQueryable&lt;TResult&gt;.EntityQueryable(Microsoft.Data.Entity.Query.Internal.IAsyncQueryProvider, System.Linq.Expressions.Expression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/EntityQueryable`.cs/#L19"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.EntityQueryable`1.System#Collections#Generic#IAsyncEnumerable{TResult}#GetEnumerator",
            "id": "IAsyncEnumerable_TResult__GetEnumerator__",
            "parent": "Microsoft.Data.Entity.Query.Internal.EntityQueryable`1",
            "href": "Microsoft.Data.Entity.Query.Internal.EntityQueryable`1.yml",
            "name": "IAsyncEnumerable<TResult>.GetEnumerator()",
            "name.vb": "System.Collections.Generic.IAsyncEnumerable<TResult>.GetEnumerator()",
            "fullName": "Microsoft.Data.Entity.Query.Internal.EntityQueryable<TResult>.System.Collections.Generic.IAsyncEnumerable<TResult>.GetEnumerator()",
            "fullName.vb": "Microsoft.Data.Entity.Query.Internal.EntityQueryable(Of TResult).System.Collections.Generic.IAsyncEnumerable<TResult>.GetEnumerator()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/EntityQueryable`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/EntityQueryable`.cs",
              "startLine": 25,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "IAsyncEnumerator<TResult> IAsyncEnumerable<TResult>.GetEnumerator()",
              "content.vb": "Function System.Collections.Generic.IAsyncEnumerable<TResult>.GetEnumerator As IAsyncEnumerator(Of TResult) Implements IAsyncEnumerable(Of TResult).GetEnumerator",
              "return": {
                "type": {
                  "uid": "System.Collections.Generic.IAsyncEnumerator{{TResult}}",
                  "parent": "System.Collections.Generic",
                  "definition": "System.Collections.Generic.IAsyncEnumerator`1",
                  "name": "IAsyncEnumerator<TResult>",
                  "name.vb": "IAsyncEnumerator(Of TResult)",
                  "fullName": "System.Collections.Generic.IAsyncEnumerator<TResult>",
                  "fullName.vb": "System.Collections.Generic.IAsyncEnumerator(Of TResult)",
                  "spec.csharp": [
                    {
                      "uid": "System.Collections.Generic.IAsyncEnumerator`1",
                      "name": "IAsyncEnumerator",
                      "fullName": "System.Collections.Generic.IAsyncEnumerator",
                      "isExternal": true
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "name": "TResult",
                      "fullName": "TResult",
                      "isExternal": false
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "System.Collections.Generic.IAsyncEnumerator`1",
                      "name": "IAsyncEnumerator",
                      "fullName": "System.Collections.Generic.IAsyncEnumerator",
                      "isExternal": true
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "name": "TResult",
                      "fullName": "TResult",
                      "isExternal": false
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"System.Collections.Generic.IAsyncEnumerator`1\" name=\"System.Collections.Generic.IAsyncEnumerator\"/>&lt;TResult&gt;",
                  "id": "IAsyncEnumerator_TResult_",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.EntityQueryable`1.System#Collections#Generic#IAsyncEnumerable{TResult}#GetEnumerator\" name=\"Microsoft.Data.Entity.Query.Internal.EntityQueryable&lt;TResult&gt;.System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;.GetEnumerator()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/EntityQueryable`.cs/#L26"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Query.Internal.EntityQueryable`1.yml",
    "name": "EntityQueryable<TResult>",
    "name.vb": "EntityQueryable(Of TResult)",
    "fullName": "Microsoft.Data.Entity.Query.Internal.EntityQueryable<TResult>",
    "fullName.vb": "Microsoft.Data.Entity.Query.Internal.EntityQueryable(Of TResult)",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Query/Internal/EntityQueryable`.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Query/Internal/EntityQueryable`.cs",
      "startLine": 11,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Query.Internal",
    "syntax": {
      "content": "public class EntityQueryable<TResult> : QueryableBase<TResult>, IOrderedQueryable<TResult>, IOrderedQueryable, IQueryable<TResult>, IEnumerable<TResult>, IQueryable, IEnumerable, IAsyncEnumerable<TResult>",
      "content.vb": "Public Class EntityQueryable(Of TResult) Inherits QueryableBase(Of TResult) Implements IOrderedQueryable(Of TResult), IOrderedQueryable, IQueryable(Of TResult), IEnumerable(Of TResult), IQueryable, IEnumerable, IAsyncEnumerable(Of TResult)",
      "typeParameters": [
        {
          "id": "TResult"
        }
      ]
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      },
      {
        "uid": "Remotion.Linq.QueryableBase{{TResult}}",
        "parent": "Remotion.Linq",
        "definition": "Remotion.Linq.QueryableBase`1",
        "name": "QueryableBase<TResult>",
        "name.vb": "QueryableBase(Of TResult)",
        "fullName": "Remotion.Linq.QueryableBase<TResult>",
        "fullName.vb": "Remotion.Linq.QueryableBase(Of TResult)",
        "spec.csharp": [
          {
            "uid": "Remotion.Linq.QueryableBase`1",
            "name": "QueryableBase",
            "fullName": "Remotion.Linq.QueryableBase",
            "isExternal": true
          },
          {
            "name": "<",
            "fullName": "<",
            "isExternal": false
          },
          {
            "name": "TResult",
            "fullName": "TResult",
            "isExternal": false
          },
          {
            "name": ">",
            "fullName": ">",
            "isExternal": false
          }
        ],
        "spec.vb": [
          {
            "uid": "Remotion.Linq.QueryableBase`1",
            "name": "QueryableBase",
            "fullName": "Remotion.Linq.QueryableBase",
            "isExternal": true
          },
          {
            "name": "(Of ",
            "fullName": "(Of ",
            "isExternal": false
          },
          {
            "name": "TResult",
            "fullName": "TResult",
            "isExternal": false
          },
          {
            "name": ")",
            "fullName": ")",
            "isExternal": false
          }
        ],
        "specName": "<xref href=\"Remotion.Linq.QueryableBase`1\" name=\"Remotion.Linq.QueryableBase\"/>&lt;TResult&gt;",
        "id": "QueryableBase_TResult_",
        "level": 0,
        "index": 1
      }
    ],
    "implements": [
      "System.Linq.IOrderedQueryable{{TResult}}",
      "System.Linq.IOrderedQueryable",
      "System.Linq.IQueryable{{TResult}}",
      "System.Collections.Generic.IEnumerable{{TResult}}",
      "System.Linq.IQueryable",
      "System.Collections.IEnumerable",
      "System.Collections.Generic.IAsyncEnumerable{{TResult}}"
    ],
    "inheritedMembers": [
      "Remotion.Linq.QueryableBase{{TResult}}.GetEnumerator",
      "Remotion.Linq.QueryableBase{{TResult}}.System#Collections#IEnumerable#GetEnumerator",
      "Remotion.Linq.QueryableBase{{TResult}}.Expression",
      "Remotion.Linq.QueryableBase{{TResult}}.Provider",
      "Remotion.Linq.QueryableBase{{TResult}}.ElementType",
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.EntityQueryable`1\" name=\"Microsoft.Data.Entity.Query.Internal.EntityQueryable&lt;TResult&gt;\"/>",
    "level": 2,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/EntityQueryable`.cs/#L12"
  },
  "isClass": true,
  "_allowToc": true
}
