
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode",
    "id": "FromSqlExpressionNode",
    "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo,System.Linq.Expressions.ConstantExpression,System.Linq.Expressions.ParameterExpression)",
            "id": "FromSqlExpressionNode_MethodCallExpressionParseInfo__ConstantExpression__ParameterExpression_",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.yml",
            "name": "FromSqlExpressionNode(MethodCallExpressionParseInfo, ConstantExpression, ParameterExpression)",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.FromSqlExpressionNode(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo, System.Linq.Expressions.ConstantExpression, System.Linq.Expressions.ParameterExpression)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs",
              "startLine": 22,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
              "content": "public FromSqlExpressionNode(MethodCallExpressionParseInfo parseInfo, ConstantExpression sql, ParameterExpression arguments)",
              "content.vb": "Public Sub New(parseInfo As MethodCallExpressionParseInfo, sql As ConstantExpression, arguments As ParameterExpression)",
              "parameters": [
                {
                  "id": "parseInfo",
                  "type": {
                    "uid": "Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo",
                    "parent": "Remotion.Linq.Parsing.Structure.IntermediateModel",
                    "isExternal": true,
                    "name": "MethodCallExpressionParseInfo",
                    "fullName": "Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo",
                    "specName": "<xref href=\"Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo\" name=\"Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo\"/>",
                    "id": "MethodCallExpressionParseInfo",
                    "level": 0
                  }
                },
                {
                  "id": "sql",
                  "type": {
                    "uid": "System.Linq.Expressions.ConstantExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "ConstantExpression",
                    "fullName": "System.Linq.Expressions.ConstantExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.ConstantExpression\" name=\"System.Linq.Expressions.ConstantExpression\"/>",
                    "id": "ConstantExpression",
                    "level": 0
                  }
                },
                {
                  "id": "arguments",
                  "type": {
                    "uid": "System.Linq.Expressions.ParameterExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "ParameterExpression",
                    "fullName": "System.Linq.Expressions.ParameterExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.ParameterExpression\" name=\"System.Linq.Expressions.ParameterExpression\"/>",
                    "id": "ParameterExpression",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo,System.Linq.Expressions.ConstantExpression,System.Linq.Expressions.ParameterExpression)\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.FromSqlExpressionNode(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo, System.Linq.Expressions.ConstantExpression, System.Linq.Expressions.ParameterExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs/#L23"
          }
        ]
      },
      {
        "title": "Fields",
        "id": "fields",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.SupportedMethods",
            "id": "SupportedMethods",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.yml",
            "name": "SupportedMethods",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.SupportedMethods",
            "type": "field",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs",
              "startLine": 14,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
              "content": "public static readonly IReadOnlyCollection<MethodInfo> SupportedMethods",
              "content.vb": "Public Shared ReadOnly SupportedMethods As IReadOnlyCollection(Of MethodInfo)"
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.SupportedMethods\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.SupportedMethods\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs/#L15"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)",
            "id": "CreateResultOperator_ClauseGenerationContext_",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.yml",
            "name": "CreateResultOperator(ClauseGenerationContext)",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs",
              "startLine": 32,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
              "content": "protected override ResultOperatorBase CreateResultOperator(ClauseGenerationContext clauseGenerationContext)",
              "content.vb": "Protected Overrides Function CreateResultOperator(clauseGenerationContext As ClauseGenerationContext) As ResultOperatorBase",
              "parameters": [
                {
                  "id": "clauseGenerationContext",
                  "type": {
                    "uid": "Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext",
                    "parent": "Remotion.Linq.Parsing.Structure.IntermediateModel",
                    "isExternal": true,
                    "name": "ClauseGenerationContext",
                    "fullName": "Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext",
                    "specName": "<xref href=\"Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext\" name=\"Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext\"/>",
                    "id": "ClauseGenerationContext",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "Remotion.Linq.Clauses.ResultOperatorBase",
                  "parent": "Remotion.Linq.Clauses",
                  "isExternal": true,
                  "name": "ResultOperatorBase",
                  "fullName": "Remotion.Linq.Clauses.ResultOperatorBase",
                  "specName": "<xref href=\"Remotion.Linq.Clauses.ResultOperatorBase\" name=\"Remotion.Linq.Clauses.ResultOperatorBase\"/>",
                  "id": "ResultOperatorBase",
                  "level": 0
                }
              }
            },
            "overridden": "Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs/#L33"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)",
            "id": "Resolve_ParameterExpression__Expression__ClauseGenerationContext_",
            "parent": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode",
            "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.yml",
            "name": "Resolve(ParameterExpression, Expression, ClauseGenerationContext)",
            "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs",
              "startLine": 35,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
            "syntax": {
              "content": "public override Expression Resolve(ParameterExpression inputParameter, Expression expressionToBeResolved, ClauseGenerationContext clauseGenerationContext)",
              "content.vb": "Public Overrides Function Resolve(inputParameter As ParameterExpression, expressionToBeResolved As Expression, clauseGenerationContext As ClauseGenerationContext) As Expression",
              "parameters": [
                {
                  "id": "inputParameter",
                  "type": {
                    "uid": "System.Linq.Expressions.ParameterExpression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "ParameterExpression",
                    "fullName": "System.Linq.Expressions.ParameterExpression",
                    "specName": "<xref href=\"System.Linq.Expressions.ParameterExpression\" name=\"System.Linq.Expressions.ParameterExpression\"/>",
                    "id": "ParameterExpression",
                    "level": 0
                  }
                },
                {
                  "id": "expressionToBeResolved",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "Expression",
                    "fullName": "System.Linq.Expressions.Expression",
                    "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                    "id": "Expression",
                    "level": 0
                  }
                },
                {
                  "id": "clauseGenerationContext",
                  "type": {
                    "uid": "Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext",
                    "parent": "Remotion.Linq.Parsing.Structure.IntermediateModel",
                    "isExternal": true,
                    "name": "ClauseGenerationContext",
                    "fullName": "Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext",
                    "specName": "<xref href=\"Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext\" name=\"Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext\"/>",
                    "id": "ClauseGenerationContext",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs/#L36"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode.yml",
    "name": "FromSqlExpressionNode",
    "fullName": "Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs",
      "startLine": 12,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Relational"
    ],
    "namespace": "Microsoft.Data.Entity.Query.ResultOperators.Internal",
    "syntax": {
      "content": "public class FromSqlExpressionNode : ResultOperatorExpressionNodeBase, IExpressionNode",
      "content.vb": "Public Class FromSqlExpressionNode Inherits ResultOperatorExpressionNodeBase Implements IExpressionNode"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      },
      {
        "uid": "Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase",
        "parent": "Remotion.Linq.Parsing.Structure.IntermediateModel",
        "isExternal": true,
        "name": "MethodCallExpressionNodeBase",
        "fullName": "Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase",
        "specName": "<xref href=\"Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase\" name=\"Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase\"/>",
        "id": "MethodCallExpressionNodeBase",
        "level": 0,
        "index": 1
      },
      {
        "uid": "Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase",
        "parent": "Remotion.Linq.Parsing.Structure.IntermediateModel",
        "isExternal": true,
        "name": "ResultOperatorExpressionNodeBase",
        "fullName": "Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase",
        "specName": "<xref href=\"Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase\" name=\"Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase\"/>",
        "id": "ResultOperatorExpressionNodeBase",
        "level": 0,
        "index": 2
      }
    ],
    "implements": [
      "Remotion.Linq.Parsing.Structure.IntermediateModel.IExpressionNode"
    ],
    "inheritedMembers": [
      "Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)",
      "Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.WrapQueryModelAfterEndOfQuery(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)",
      "Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase.ParsedExpression",
      "Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Apply(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)",
      "Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.SetResultTypeOverride(Remotion.Linq.QueryModel)",
      "Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateResolveNotSupportedException",
      "Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.CreateOutputParameterNotSupportedException",
      "Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.AssociatedIdentifier",
      "Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.Source",
      "Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionNodeBase.NodeResultType",
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode\" name=\"Microsoft.Data.Entity.Query.ResultOperators.Internal.FromSqlExpressionNode\"/>",
    "level": 3,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/ResultOperators/Internal/FromSqlExpressionNode.cs/#L13"
  },
  "isClass": true,
  "_allowToc": true
}
