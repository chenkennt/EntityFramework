
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Metadata.IMutableProperty",
    "id": "IMutableProperty",
    "parent": "Microsoft.Data.Entity.Metadata",
    "children": [
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Metadata.IMutableProperty.ClrType",
            "id": "ClrType",
            "parent": "Microsoft.Data.Entity.Metadata.IMutableProperty",
            "href": "Microsoft.Data.Entity.Metadata.IMutableProperty.yml",
            "name": "ClrType",
            "fullName": "Microsoft.Data.Entity.Metadata.IMutableProperty.ClrType",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
              "startLine": 29,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata",
            "summary": "<p>Gets or sets the type of value that this property holds.</p>\n",
            "syntax": {
                "content": "Type ClrType { get; set; }",
                "content.vb": "Property ClrType As Type",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Type",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Type",
                    "fullName": "System.Type",
                    "specName": "<xref href=\"System.Type\" name=\"System.Type\"/>",
                    "id": "Type",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableProperty.ClrType\" name=\"Microsoft.Data.Entity.Metadata.IMutableProperty.ClrType\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/IMutableProperty.cs/#L30"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.IMutableProperty.DeclaringEntityType",
            "id": "DeclaringEntityType",
            "parent": "Microsoft.Data.Entity.Metadata.IMutableProperty",
            "href": "Microsoft.Data.Entity.Metadata.IMutableProperty.yml",
            "name": "DeclaringEntityType",
            "fullName": "Microsoft.Data.Entity.Metadata.IMutableProperty.DeclaringEntityType",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
              "startLine": 24,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata",
            "summary": "<p>Gets the type that this property belongs to.</p>\n",
            "syntax": {
                "content": "IMutableEntityType DeclaringEntityType { get; }",
                "content.vb": "ReadOnly Property DeclaringEntityType As IMutableEntityType",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.IMutableEntityType",
                    "parent": "Microsoft.Data.Entity.Metadata",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.IMutableEntityType.yml",
                    "name": "IMutableEntityType",
                    "fullName": "Microsoft.Data.Entity.Metadata.IMutableEntityType",
                    "type": "interface",
                    "summary": "<para>\nRepresents an entity in an <xref href=\"Microsoft.Data.Entity.Metadata.IMutableModel\"></xref>.\n</para>\n<para>\nThis interface is used during model creation and allows the metadata to be modified.\nOnce the model is built, <xref href=\"Microsoft.Data.Entity.Metadata.IEntityType\"></xref> represents a ready-only view of the same metadata.\n</para>",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableEntityType\" name=\"Microsoft.Data.Entity.Metadata.IMutableEntityType\"/>",
                    "id": "IMutableEntityType",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableProperty.DeclaringEntityType\" name=\"Microsoft.Data.Entity.Metadata.IMutableProperty.DeclaringEntityType\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/IMutableProperty.cs/#L25"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.IMutableProperty.IsConcurrencyToken",
            "id": "IsConcurrencyToken",
            "parent": "Microsoft.Data.Entity.Metadata.IMutableProperty",
            "href": "Microsoft.Data.Entity.Metadata.IMutableProperty.yml",
            "name": "IsConcurrencyToken",
            "fullName": "Microsoft.Data.Entity.Metadata.IMutableProperty.IsConcurrencyToken",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
              "startLine": 78,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata",
            "summary": "<p>Gets or sets a value indicating whether this property is used as a concurrency token. When a property is configured\nas a concurrency token the value in the database will be checked when an instance of this entity type\nis updated or deleted during <xref href=\"Microsoft.Data.Entity.DbContext.SaveChanges\"></xref> to ensure it has not changed since\nthe instance was retrieved from the database. If it has changed, an exception will be thrown and the\nchanges will not be applied to the database.</p>\n",
            "syntax": {
                "content": "bool IsConcurrencyToken { get; set; }",
                "content.vb": "Property IsConcurrencyToken As Boolean",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableProperty.IsConcurrencyToken\" name=\"Microsoft.Data.Entity.Metadata.IMutableProperty.IsConcurrencyToken\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/IMutableProperty.cs/#L79"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.IMutableProperty.IsNullable",
            "id": "IsNullable",
            "parent": "Microsoft.Data.Entity.Metadata.IMutableProperty",
            "href": "Microsoft.Data.Entity.Metadata.IMutableProperty.yml",
            "name": "IsNullable",
            "fullName": "Microsoft.Data.Entity.Metadata.IMutableProperty.IsNullable",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
              "startLine": 34,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata",
            "summary": "<p>Gets or sets a value indicating whether this property can contain null.</p>\n",
            "syntax": {
                "content": "bool IsNullable { get; set; }",
                "content.vb": "Property IsNullable As Boolean",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableProperty.IsNullable\" name=\"Microsoft.Data.Entity.Metadata.IMutableProperty.IsNullable\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/IMutableProperty.cs/#L35"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.IMutableProperty.IsReadOnlyAfterSave",
            "id": "IsReadOnlyAfterSave",
            "parent": "Microsoft.Data.Entity.Metadata.IMutableProperty",
            "href": "Microsoft.Data.Entity.Metadata.IMutableProperty.yml",
            "name": "IsReadOnlyAfterSave",
            "fullName": "Microsoft.Data.Entity.Metadata.IMutableProperty.IsReadOnlyAfterSave",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
              "startLine": 56,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata",
            "summary": "<p>Gets or sets a value indicating whether or not this property can be modified after the entity is\nsaved to the database. If true, an exception will be thrown if a new value is assigned to\nthis property after the entity exists in the database.</p>\n",
            "syntax": {
                "content": "bool IsReadOnlyAfterSave { get; set; }",
                "content.vb": "Property IsReadOnlyAfterSave As Boolean",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableProperty.IsReadOnlyAfterSave\" name=\"Microsoft.Data.Entity.Metadata.IMutableProperty.IsReadOnlyAfterSave\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/IMutableProperty.cs/#L57"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.IMutableProperty.IsReadOnlyBeforeSave",
            "id": "IsReadOnlyBeforeSave",
            "parent": "Microsoft.Data.Entity.Metadata.IMutableProperty",
            "href": "Microsoft.Data.Entity.Metadata.IMutableProperty.yml",
            "name": "IsReadOnlyBeforeSave",
            "fullName": "Microsoft.Data.Entity.Metadata.IMutableProperty.IsReadOnlyBeforeSave",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
              "startLine": 49,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata",
            "summary": "<p>Gets or sets a value indicating whether or not this property can be modified before the entity is\nsaved to the database. If true, an exception will be thrown if a value is assigned to\nthis property when it is in the <xref href=\"Microsoft.Data.Entity.EntityState.Added\"></xref> state.</p>\n",
            "syntax": {
                "content": "bool IsReadOnlyBeforeSave { get; set; }",
                "content.vb": "Property IsReadOnlyBeforeSave As Boolean",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableProperty.IsReadOnlyBeforeSave\" name=\"Microsoft.Data.Entity.Metadata.IMutableProperty.IsReadOnlyBeforeSave\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/IMutableProperty.cs/#L50"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.IMutableProperty.IsShadowProperty",
            "id": "IsShadowProperty",
            "parent": "Microsoft.Data.Entity.Metadata.IMutableProperty",
            "href": "Microsoft.Data.Entity.Metadata.IMutableProperty.yml",
            "name": "IsShadowProperty",
            "fullName": "Microsoft.Data.Entity.Metadata.IMutableProperty.IsShadowProperty",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
              "startLine": 69,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata",
            "summary": "<p>Gets or sets a value indicating whether this is a shadow property. A shadow property is one that does not have a\ncorresponding property in the entity class. The current value for the property is stored in\nthe <xref href=\"Microsoft.Data.Entity.ChangeTracking.ChangeTracker\"></xref> rather than being stored in instances of the entity class.</p>\n",
            "syntax": {
                "content": "bool IsShadowProperty { get; set; }",
                "content.vb": "Property IsShadowProperty As Boolean",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableProperty.IsShadowProperty\" name=\"Microsoft.Data.Entity.Metadata.IMutableProperty.IsShadowProperty\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/IMutableProperty.cs/#L70"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.IMutableProperty.IsStoreGeneratedAlways",
            "id": "IsStoreGeneratedAlways",
            "parent": "Microsoft.Data.Entity.Metadata.IMutableProperty",
            "href": "Microsoft.Data.Entity.Metadata.IMutableProperty.yml",
            "name": "IsStoreGeneratedAlways",
            "fullName": "Microsoft.Data.Entity.Metadata.IMutableProperty.IsStoreGeneratedAlways",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
              "startLine": 87,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata",
            "summary": "<p>Gets or sets a value indicating whether or not the database will always generate a value for this property.\nIf set to true, a value will always be read back from the database whenever the entity is saved\nregardless of the state of the property. If set to false, whenever a value is assigned to the property\n(or marked as modified) EF will attempt to save that value to the database rather than letting the\ndatabase generate one.</p>\n",
            "syntax": {
                "content": "bool IsStoreGeneratedAlways { get; set; }",
                "content.vb": "Property IsStoreGeneratedAlways As Boolean",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableProperty.IsStoreGeneratedAlways\" name=\"Microsoft.Data.Entity.Metadata.IMutableProperty.IsStoreGeneratedAlways\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/IMutableProperty.cs/#L88"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.IMutableProperty.RequiresValueGenerator",
            "id": "RequiresValueGenerator",
            "parent": "Microsoft.Data.Entity.Metadata.IMutableProperty",
            "href": "Microsoft.Data.Entity.Metadata.IMutableProperty.yml",
            "name": "RequiresValueGenerator",
            "fullName": "Microsoft.Data.Entity.Metadata.IMutableProperty.RequiresValueGenerator",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
              "startLine": 62,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata",
            "summary": "<p>Gets or sets a value indicating whether this property requires a <xref href=\"Microsoft.Data.Entity.ValueGeneration.ValueGenerator\"></xref> to generate\nvalues when new entities are added to the context.</p>\n",
            "syntax": {
                "content": "bool RequiresValueGenerator { get; set; }",
                "content.vb": "Property RequiresValueGenerator As Boolean",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableProperty.RequiresValueGenerator\" name=\"Microsoft.Data.Entity.Metadata.IMutableProperty.RequiresValueGenerator\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/IMutableProperty.cs/#L63"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.IMutableProperty.ValueGenerated",
            "id": "ValueGenerated",
            "parent": "Microsoft.Data.Entity.Metadata.IMutableProperty",
            "href": "Microsoft.Data.Entity.Metadata.IMutableProperty.yml",
            "name": "ValueGenerated",
            "fullName": "Microsoft.Data.Entity.Metadata.IMutableProperty.ValueGenerated",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
              "startLine": 42,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata",
            "summary": "<p>Gets or sets a value indicating when a value for this property will be generated by the database. Even when the\nproperty is set to be generated by the database, EF may still attempt to save a specific value (rather than\nhaving one generated by the database) when the entity is added and a value is assigned, or the property is\nmarked as modified for an existing entity. See <xref href=\"Microsoft.Data.Entity.Metadata.IMutableProperty.IsStoreGeneratedAlways\"></xref> for more information.</p>\n",
            "syntax": {
                "content": "ValueGenerated ValueGenerated { get; set; }",
                "content.vb": "Property ValueGenerated As ValueGenerated",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.ValueGenerated",
                    "parent": "Microsoft.Data.Entity.Metadata",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.ValueGenerated.yml",
                    "name": "ValueGenerated",
                    "fullName": "Microsoft.Data.Entity.Metadata.ValueGenerated",
                    "type": "enum",
                    "summary": "<p>Indicates when a value for a property will be generated by the database. Even when a\nproperty is set to be generated by the database, EF may still attempt to save a specific value (rather than\nhaving one generated by the database) when an entity is added and a value is assigned, or the property is\nmarked as modified for an existing entity.</p>\n",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.ValueGenerated\" name=\"Microsoft.Data.Entity.Metadata.ValueGenerated\"/>",
                    "id": "ValueGenerated",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableProperty.ValueGenerated\" name=\"Microsoft.Data.Entity.Metadata.IMutableProperty.ValueGenerated\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/IMutableProperty.cs/#L43"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Metadata.IMutableProperty.yml",
    "name": "IMutableProperty",
    "fullName": "Microsoft.Data.Entity.Metadata.IMutableProperty",
    "type": "Interface",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Metadata/IMutableProperty.cs",
      "startLine": 19,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Metadata",
    "summary": "<para>\nRepresents a scalar property of an entity.\n</para>\n<para>\nThis interface is used during model creation and allows the metadata to be modified.\nOnce the model is built, <xref href=\"Microsoft.Data.Entity.Metadata.IProperty\"></xref> represents a ready-only view of the same metadata.\n</para>",
    "syntax": {
      "content": "public interface IMutableProperty : IProperty, IPropertyBase, IMutableAnnotatable, IAnnotatable",
      "content.vb": "Public Interface IMutableProperty Inherits IProperty, IMutableAnnotatable"
    },
    "inheritedMembers": [
      "Microsoft.Data.Entity.Metadata.IPropertyBase.Name",
      "Microsoft.Data.Entity.Metadata.IMutableAnnotatable.Item(System.String)",
      "Microsoft.Data.Entity.Metadata.IMutableAnnotatable.GetAnnotations",
      "Microsoft.Data.Entity.Metadata.IMutableAnnotatable.AddAnnotation(System.String,System.Object)",
      "Microsoft.Data.Entity.Metadata.IMutableAnnotatable.FindAnnotation(System.String)",
      "Microsoft.Data.Entity.Metadata.IMutableAnnotatable.RemoveAnnotation(System.String)"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableProperty\" name=\"Microsoft.Data.Entity.Metadata.IMutableProperty\"/>",
    "level": 0,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/IMutableProperty.cs/#L20"
  },
  "isClass": true,
  "_allowToc": true
}
