
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
    "id": "ReferenceCollectionBuilder_TPrincipalEntity__TDependentEntity_",
    "parent": "Microsoft.Data.Entity.Metadata.Builders",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
            "id": "ReferenceCollectionBuilder_InternalRelationshipBuilder_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
            "name": "ReferenceCollectionBuilder(InternalRelationshipBuilder)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>.ReferenceCollectionBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity).ReferenceCollectionBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
              "startLine": 38,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<para>\nInitializes a new instance of the <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2\"></xref>\nclass.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
            "syntax": {
              "content": "public ReferenceCollectionBuilder(InternalRelationshipBuilder builder)",
              "content.vb": "Public Sub New(builder As InternalRelationshipBuilder)",
              "parameters": [
                {
                  "id": "builder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder.yml",
                    "name": "InternalRelationshipBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\" name=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\"/>",
                    "id": "InternalRelationshipBuilder",
                    "level": 0
                  },
                  "description": "<p>The internal builder being used to configure this relationship.</p>\n"
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;.ReferenceCollectionBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs/#L39"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
            "id": "ReferenceCollectionBuilder_InternalRelationshipBuilder__ReferenceCollectionBuilder__Boolean__Boolean__Boolean_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
            "name": "ReferenceCollectionBuilder(InternalRelationshipBuilder, ReferenceCollectionBuilder, Boolean, Boolean, Boolean)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>.ReferenceCollectionBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder, Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder, System.Boolean, System.Boolean, System.Boolean)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity).ReferenceCollectionBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder, Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder, System.Boolean, System.Boolean, System.Boolean)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
              "startLine": 60,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<para>\nInitializes a new instance of the <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2\"></xref>\nclass.\n</para>",
            "syntax": {
              "content": "protected ReferenceCollectionBuilder(InternalRelationshipBuilder builder, ReferenceCollectionBuilder oldBuilder, bool foreignKeySet = false, bool principalKeySet = false, bool requiredSet = false)",
              "content.vb": "Protected Sub New(builder As InternalRelationshipBuilder, oldBuilder As ReferenceCollectionBuilder, foreignKeySet As Boolean = False, principalKeySet As Boolean = False, requiredSet As Boolean = False)",
              "parameters": [
                {
                  "id": "builder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder.yml",
                    "name": "InternalRelationshipBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\" name=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\"/>",
                    "id": "InternalRelationshipBuilder",
                    "level": 0
                  },
                  "description": "<p>The internal builder being used to configure this relationship.</p>\n"
                },
                {
                  "id": "oldBuilder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Builders",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
                    "name": "ReferenceCollectionBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                    "type": "class",
                    "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\"/>",
                    "id": "ReferenceCollectionBuilder",
                    "level": 0
                  },
                  "description": "<p>A builder to copy configuration from.</p>\n"
                },
                {
                  "id": "foreignKeySet",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether the foreign key properties have been configured in this chain of configuration calls.</p>\n"
                },
                {
                  "id": "principalKeySet",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether the principal key properties have been configured in this chain of configuration calls.</p>\n"
                },
                {
                  "id": "requiredSet",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether required/optional has been configured in this chain of configuration calls.</p>\n"
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;.ReferenceCollectionBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder, Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder, System.Boolean, System.Boolean, System.Boolean)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs/#L61"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasAnnotation(System.String,System.Object)",
            "id": "HasAnnotation_String__Object_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
            "name": "HasAnnotation(String, Object)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>.HasAnnotation(System.String, System.Object)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity).HasAnnotation(System.String, System.Object)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
              "startLine": 139,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Adds or updates an annotation on the relationship. If an annotation with the key specified in</p>\n<p><paramref name=\"annotation\"></paramref> already exists it&#39;s value will be updated.</p>\n",
            "syntax": {
              "content": "public virtual ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> HasAnnotation(string annotation, object value)",
              "content.vb": "Public Overridable Function HasAnnotation(annotation As String, value As Object) As ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
              "parameters": [
                {
                  "id": "annotation",
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  },
                  "description": "<p>The key of the annotation to be added or updated.</p>\n"
                },
                {
                  "id": "value",
                  "type": {
                    "uid": "System.Object",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Object",
                    "fullName": "System.Object",
                    "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
                    "id": "Object",
                    "level": 0
                  },
                  "description": "<p>The value to be stored in the annotation.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
                  "id": "ReferenceCollectionBuilder_TPrincipalEntity__TDependentEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
                  "name": "ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "name.vb": "ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                    "startLine": 23,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> : ReferenceCollectionBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TPrincipalEntity : class where TDependentEntity : class",
                    "content.vb": "Public Class ReferenceCollectionBuilder(Of TPrincipalEntity As Class, TDependentEntity As Class) Inherits ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TPrincipalEntity",
                        "description": "The principal entity type in this relationship."
                      },
                      {
                        "id": "TDependentEntity",
                        "description": "The dependent entity type in this relationship."
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasAnnotation(System.String,System.Object)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;.HasAnnotation(System.String, System.Object)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs/#L140"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})",
            "id": "HasForeignKey_Expression_Func_TDependentEntity__Object___",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
            "name": "HasForeignKey(Expression<Func<TDependentEntity, Object>>)",
            "name.vb": "HasForeignKey(Expression(Of Func(Of TDependentEntity, Object)))",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>.HasForeignKey(System.Linq.Expressions.Expression<System.Func<TDependentEntity, System.Object>>)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity).HasForeignKey(System.Linq.Expressions.Expression(Of System.Func(Of TDependentEntity, System.Object)))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
              "startLine": 94,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<para>\nConfigures the property(s) to use as the foreign key for this relationship.\n</para>\n<para>\nIf <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\"></xref> is not specified, then\nan attempt will be made to match the data type and order of foreign key properties against the\nprimary key of the principal entity type. If they do not match, new shadow state properties that\nform a unique index will be added to the principal entity type to serve as the reference key.\nA shadow state property is one that does not have a corresponding property in the entity class. The\ncurrent value for the property is stored in the <xref href=\"Microsoft.Data.Entity.ChangeTracking.ChangeTracker\"></xref> rather than being\nstored in instances of the entity class.\n</para>",
            "syntax": {
              "content": "public virtual ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> HasForeignKey(Expression<Func<TDependentEntity, object>> foreignKeyExpression)",
              "content.vb": "Public Overridable Function HasForeignKey(foreignKeyExpression As Expression(Of Func(Of TDependentEntity, Object))) As ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
              "parameters": [
                {
                  "id": "foreignKeyExpression",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression{System.Func{{TDependentEntity},System.Object}}",
                    "parent": "System.Linq.Expressions",
                    "definition": "System.Linq.Expressions.Expression`1",
                    "name": "Expression<Func<TDependentEntity, Object>>",
                    "name.vb": "Expression(Of Func(Of TDependentEntity, Object))",
                    "fullName": "System.Linq.Expressions.Expression<System.Func<TDependentEntity, System.Object>>",
                    "fullName.vb": "System.Linq.Expressions.Expression(Of System.Func(Of TDependentEntity, System.Object))",
                    "spec.csharp": [
                      {
                        "uid": "System.Linq.Expressions.Expression`1",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Func`2",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "TDependentEntity",
                        "fullName": "TDependentEntity",
                        "isExternal": false
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Linq.Expressions.Expression`1",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Func`2",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "TDependentEntity",
                        "fullName": "TDependentEntity",
                        "isExternal": false
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Linq.Expressions.Expression`1\" name=\"System.Linq.Expressions.Expression\"/>&lt;<xref href=\"System.Func`2\" name=\"System.Func\"/>&lt;TDependentEntity, <xref href=\"System.Object\" name=\"System.Object\"/>&gt;&gt;",
                    "id": "Expression_Func_TDependentEntity__Object__",
                    "level": 0
                  },
                  "description": "<para>\nA lambda expression representing the foreign key property(s) (<c>post =&gt; post.BlogId</c>).\n</para>\n<para>\nIf the foreign key is made up of multiple properties then specify an anonymous type including the\nproperties (<c>comment =&gt; new { comment.BlogId, comment.PostTitle }</c>). The order specified should match the order of\ncorresponding keys in <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\"></xref>.\n</para>"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
                  "id": "ReferenceCollectionBuilder_TPrincipalEntity__TDependentEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
                  "name": "ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "name.vb": "ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                    "startLine": 23,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> : ReferenceCollectionBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TPrincipalEntity : class where TDependentEntity : class",
                    "content.vb": "Public Class ReferenceCollectionBuilder(Of TPrincipalEntity As Class, TDependentEntity As Class) Inherits ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TPrincipalEntity",
                        "description": "The principal entity type in this relationship."
                      },
                      {
                        "id": "TDependentEntity",
                        "description": "The dependent entity type in this relationship."
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;.HasForeignKey(System.Linq.Expressions.Expression&lt;System.Func&lt;TDependentEntity, System.Object&gt;&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs/#L95"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.String[])",
            "id": "HasForeignKey_String___",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
            "name": "HasForeignKey(String[])",
            "name.vb": "HasForeignKey(String())",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>.HasForeignKey(System.String[])",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity).HasForeignKey(System.String())",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
              "startLine": 170,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<para>\nConfigures the property(s) to use as the foreign key for this relationship.\n</para>\n<para>\nIf the specified property name(s) do not exist on the entity type then a new shadow state\nproperty(s) will be added to serve as the foreign key. A shadow state property is one\nthat does not have a corresponding property in the entity class. The current value for the\nproperty is stored in the <xref href=\"Microsoft.Data.Entity.ChangeTracking.ChangeTracker\"></xref> rather than being stored in instances\nof the entity class.\n</para>\n<para>\nIf <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\"></xref> is not specified, then an attempt will be made to\nmatch\nthe data type and order of foreign key properties against the primary key of the principal\nentity type. If they do not match, new shadow state properties that form a unique index will be\nadded to the principal entity type to serve as the reference key.\n</para>",
            "syntax": {
              "content": "public virtual ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> HasForeignKey(params string[] foreignKeyPropertyNames)",
              "content.vb": "Public Overridable Function HasForeignKey(ParamArray foreignKeyPropertyNames As String()) As ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
              "parameters": [
                {
                  "id": "foreignKeyPropertyNames",
                  "type": {
                    "uid": "System.String[]",
                    "isExternal": true,
                    "name": "String[]",
                    "name.vb": "String()",
                    "fullName": "System.String[]",
                    "fullName.vb": "System.String()",
                    "spec.csharp": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "[]",
                        "fullName": "[]",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "()",
                        "fullName": "()",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>[]",
                    "id": "String__",
                    "level": 0
                  },
                  "description": "<p>The name(s) of the foreign key property(s).</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
                  "id": "ReferenceCollectionBuilder_TPrincipalEntity__TDependentEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
                  "name": "ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "name.vb": "ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                    "startLine": 23,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> : ReferenceCollectionBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TPrincipalEntity : class where TDependentEntity : class",
                    "content.vb": "Public Class ReferenceCollectionBuilder(Of TPrincipalEntity As Class, TDependentEntity As Class) Inherits ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TPrincipalEntity",
                        "description": "The principal entity type in this relationship."
                      },
                      {
                        "id": "TDependentEntity",
                        "description": "The dependent entity type in this relationship."
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.String[])\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;.HasForeignKey(System.String[])\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs/#L171"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})",
            "id": "HasPrincipalKey_Expression_Func_TPrincipalEntity__Object___",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
            "name": "HasPrincipalKey(Expression<Func<TPrincipalEntity, Object>>)",
            "name.vb": "HasPrincipalKey(Expression(Of Func(Of TPrincipalEntity, Object)))",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>.HasPrincipalKey(System.Linq.Expressions.Expression<System.Func<TPrincipalEntity, System.Object>>)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity).HasPrincipalKey(System.Linq.Expressions.Expression(Of System.Func(Of TPrincipalEntity, System.Object)))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
              "startLine": 121,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures the unique property(s) that this relationship targets. Typically you would only call this\nmethod if you want to use a property(s) other than the primary key as the principal property(s). If\nthe specified property(s) is not already a unique constraint (or the primary key) then a new unique\nconstraint will be introduced.</p>\n",
            "syntax": {
              "content": "public virtual ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> HasPrincipalKey(Expression<Func<TPrincipalEntity, object>> keyExpression)",
              "content.vb": "Public Overridable Function HasPrincipalKey(keyExpression As Expression(Of Func(Of TPrincipalEntity, Object))) As ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
              "parameters": [
                {
                  "id": "keyExpression",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression{System.Func{{TPrincipalEntity},System.Object}}",
                    "parent": "System.Linq.Expressions",
                    "definition": "System.Linq.Expressions.Expression`1",
                    "name": "Expression<Func<TPrincipalEntity, Object>>",
                    "name.vb": "Expression(Of Func(Of TPrincipalEntity, Object))",
                    "fullName": "System.Linq.Expressions.Expression<System.Func<TPrincipalEntity, System.Object>>",
                    "fullName.vb": "System.Linq.Expressions.Expression(Of System.Func(Of TPrincipalEntity, System.Object))",
                    "spec.csharp": [
                      {
                        "uid": "System.Linq.Expressions.Expression`1",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Func`2",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "TPrincipalEntity",
                        "fullName": "TPrincipalEntity",
                        "isExternal": false
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Linq.Expressions.Expression`1",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Func`2",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "TPrincipalEntity",
                        "fullName": "TPrincipalEntity",
                        "isExternal": false
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Linq.Expressions.Expression`1\" name=\"System.Linq.Expressions.Expression\"/>&lt;<xref href=\"System.Func`2\" name=\"System.Func\"/>&lt;TPrincipalEntity, <xref href=\"System.Object\" name=\"System.Object\"/>&gt;&gt;",
                    "id": "Expression_Func_TPrincipalEntity__Object__",
                    "level": 0
                  },
                  "description": "<para>\nA lambda expression representing the reference key property(s) (<c>blog =&gt; blog.BlogId</c>).\n</para>\n<para>\nIf the principal key is made up of multiple properties then specify an anonymous type including\nthe properties (<c>post =&gt; new { post.BlogId, post.PostTitle }</c>).\n</para>"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
                  "id": "ReferenceCollectionBuilder_TPrincipalEntity__TDependentEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
                  "name": "ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "name.vb": "ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                    "startLine": 23,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> : ReferenceCollectionBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TPrincipalEntity : class where TDependentEntity : class",
                    "content.vb": "Public Class ReferenceCollectionBuilder(Of TPrincipalEntity As Class, TDependentEntity As Class) Inherits ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TPrincipalEntity",
                        "description": "The principal entity type in this relationship."
                      },
                      {
                        "id": "TDependentEntity",
                        "description": "The dependent entity type in this relationship."
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;.HasPrincipalKey(System.Linq.Expressions.Expression&lt;System.Func&lt;TPrincipalEntity, System.Object&gt;&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs/#L122"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.String[])",
            "id": "HasPrincipalKey_String___",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
            "name": "HasPrincipalKey(String[])",
            "name.vb": "HasPrincipalKey(String())",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>.HasPrincipalKey(System.String[])",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity).HasPrincipalKey(System.String())",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
              "startLine": 188,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures the unique property(s) that this relationship targets. Typically you would only call this\nmethod if you want to use a property(s) other than the primary key as the principal property(s). If\nthe specified property(s) is not already a unique constraint (or the primary key) then a new unique\nconstraint will be introduced.</p>\n",
            "syntax": {
              "content": "public virtual ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> HasPrincipalKey(params string[] keyPropertyNames)",
              "content.vb": "Public Overridable Function HasPrincipalKey(ParamArray keyPropertyNames As String()) As ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
              "parameters": [
                {
                  "id": "keyPropertyNames",
                  "type": {
                    "uid": "System.String[]",
                    "isExternal": true,
                    "name": "String[]",
                    "name.vb": "String()",
                    "fullName": "System.String[]",
                    "fullName.vb": "System.String()",
                    "spec.csharp": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "[]",
                        "fullName": "[]",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "()",
                        "fullName": "()",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>[]",
                    "id": "String__",
                    "level": 0
                  },
                  "description": "<p>The name(s) of the reference key property(s).</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
                  "id": "ReferenceCollectionBuilder_TPrincipalEntity__TDependentEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
                  "name": "ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "name.vb": "ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                    "startLine": 23,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> : ReferenceCollectionBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TPrincipalEntity : class where TDependentEntity : class",
                    "content.vb": "Public Class ReferenceCollectionBuilder(Of TPrincipalEntity As Class, TDependentEntity As Class) Inherits ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TPrincipalEntity",
                        "description": "The principal entity type in this relationship."
                      },
                      {
                        "id": "TDependentEntity",
                        "description": "The dependent entity type in this relationship."
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.String[])\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;.HasPrincipalKey(System.String[])\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs/#L189"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.IsRequired(System.Boolean)",
            "id": "IsRequired_Boolean_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
            "name": "IsRequired(Boolean)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>.IsRequired(System.Boolean)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity).IsRequired(System.Boolean)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
              "startLine": 204,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures whether this is a required relationship (i.e. whether the foreign key property(s) can\nbe assigned null).</p>\n",
            "syntax": {
              "content": "public virtual ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> IsRequired(bool required = true)",
              "content.vb": "Public Overridable Function IsRequired(required As Boolean = True) As ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
              "parameters": [
                {
                  "id": "required",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether this is a required relationship.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
                  "id": "ReferenceCollectionBuilder_TPrincipalEntity__TDependentEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
                  "name": "ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "name.vb": "ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                    "startLine": 23,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> : ReferenceCollectionBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TPrincipalEntity : class where TDependentEntity : class",
                    "content.vb": "Public Class ReferenceCollectionBuilder(Of TPrincipalEntity As Class, TDependentEntity As Class) Inherits ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TPrincipalEntity",
                        "description": "The principal entity type in this relationship."
                      },
                      {
                        "id": "TDependentEntity",
                        "description": "The dependent entity type in this relationship."
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.IsRequired(System.Boolean)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;.IsRequired(System.Boolean)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs/#L205"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)",
            "id": "OnDelete_DeleteBehavior_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
            "name": "OnDelete(DeleteBehavior)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity).OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
              "startLine": 214,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures how a delete operation is applied to dependent entities in the relationship when the\nprincipal is deleted or the relationship is severed.</p>\n",
            "syntax": {
              "content": "public virtual ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> OnDelete(DeleteBehavior deleteBehavior)",
              "content.vb": "Public Overridable Function OnDelete(deleteBehavior As DeleteBehavior) As ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
              "parameters": [
                {
                  "id": "deleteBehavior",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.DeleteBehavior",
                    "parent": "Microsoft.Data.Entity.Metadata",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.DeleteBehavior.yml",
                    "name": "DeleteBehavior",
                    "fullName": "Microsoft.Data.Entity.Metadata.DeleteBehavior",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.DeleteBehavior\" name=\"Microsoft.Data.Entity.Metadata.DeleteBehavior\"/>",
                    "id": "DeleteBehavior",
                    "level": 0
                  },
                  "description": "<p>The action to perform.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2",
                  "id": "ReferenceCollectionBuilder_TPrincipalEntity__TDependentEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
                  "name": "ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "name.vb": "ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
                    "startLine": 23,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> : ReferenceCollectionBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TPrincipalEntity : class where TDependentEntity : class",
                    "content.vb": "Public Class ReferenceCollectionBuilder(Of TPrincipalEntity As Class, TDependentEntity As Class) Inherits ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TPrincipalEntity",
                        "description": "The principal entity type in this relationship."
                      },
                      {
                        "id": "TDependentEntity",
                        "description": "The dependent entity type in this relationship."
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs/#L215"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2.yml",
    "name": "ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
    "name.vb": "ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
    "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity>",
    "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder(Of TPrincipalEntity, TDependentEntity)",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs",
      "startLine": 23,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Metadata.Builders",
    "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
    "syntax": {
      "content": "public class ReferenceCollectionBuilder<TPrincipalEntity, TDependentEntity> : ReferenceCollectionBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TPrincipalEntity : class where TDependentEntity : class",
      "content.vb": "Public Class ReferenceCollectionBuilder(Of TPrincipalEntity As Class, TDependentEntity As Class) Inherits ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
      "typeParameters": [
        {
          "id": "TPrincipalEntity",
          "description": "The principal entity type in this relationship."
        },
        {
          "id": "TDependentEntity",
          "description": "The dependent entity type in this relationship."
        }
      ]
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      },
      {
        "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
        "parent": "Microsoft.Data.Entity.Metadata.Builders",
        "isExternal": false,
        "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
        "name": "ReferenceCollectionBuilder",
        "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
        "type": "class",
        "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
        "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\"/>",
        "id": "ReferenceCollectionBuilder",
        "level": 0,
        "index": 1
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
      "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
    ],
    "inheritedMembers": [
      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder&lt;TPrincipalEntity, TDependentEntity&gt;\"/>",
    "level": 2,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder`.cs/#L24"
  },
  "isClass": true,
  "_allowToc": true
}
