
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator",
    "id": "SqlServerQuerySqlGenerator",
    "parent": "Microsoft.Data.Entity.Query.Sql.Internal",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.#ctor(Microsoft.Data.Entity.Storage.IRelationalCommandBuilderFactory,Microsoft.Data.Entity.Storage.ISqlGenerator,Microsoft.Data.Entity.Storage.IParameterNameGeneratorFactory,Microsoft.Data.Entity.Query.Expressions.SelectExpression)",
            "id": "SqlServerQuerySqlGenerator_IRelationalCommandBuilderFactory__ISqlGenerator__IParameterNameGeneratorFactory__SelectExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator",
            "href": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.yml",
            "name": "SqlServerQuerySqlGenerator(IRelationalCommandBuilderFactory, ISqlGenerator, IParameterNameGeneratorFactory, SelectExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.SqlServerQuerySqlGenerator(Microsoft.Data.Entity.Storage.IRelationalCommandBuilderFactory, Microsoft.Data.Entity.Storage.ISqlGenerator, Microsoft.Data.Entity.Storage.IParameterNameGeneratorFactory, Microsoft.Data.Entity.Query.Expressions.SelectExpression)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
              "startLine": 15,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.MicrosoftSqlServer"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql.Internal",
            "syntax": {
              "content": "public SqlServerQuerySqlGenerator(IRelationalCommandBuilderFactory relationalCommandBuilderFactory, ISqlGenerator sqlGenerator, IParameterNameGeneratorFactory parameterNameGeneratorFactory, SelectExpression selectExpression)",
              "content.vb": "Public Sub New(relationalCommandBuilderFactory As IRelationalCommandBuilderFactory, sqlGenerator As ISqlGenerator, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, selectExpression As SelectExpression)",
              "parameters": [
                {
                  "id": "relationalCommandBuilderFactory",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IRelationalCommandBuilderFactory",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IRelationalCommandBuilderFactory.yml",
                    "name": "IRelationalCommandBuilderFactory",
                    "fullName": "Microsoft.Data.Entity.Storage.IRelationalCommandBuilderFactory",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalCommandBuilderFactory\" name=\"Microsoft.Data.Entity.Storage.IRelationalCommandBuilderFactory\"/>",
                    "id": "IRelationalCommandBuilderFactory",
                    "level": 0
                  }
                },
                {
                  "id": "sqlGenerator",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.ISqlGenerator",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.ISqlGenerator.yml",
                    "name": "ISqlGenerator",
                    "fullName": "Microsoft.Data.Entity.Storage.ISqlGenerator",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.ISqlGenerator\" name=\"Microsoft.Data.Entity.Storage.ISqlGenerator\"/>",
                    "id": "ISqlGenerator",
                    "level": 0
                  }
                },
                {
                  "id": "parameterNameGeneratorFactory",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IParameterNameGeneratorFactory",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IParameterNameGeneratorFactory.yml",
                    "name": "IParameterNameGeneratorFactory",
                    "fullName": "Microsoft.Data.Entity.Storage.IParameterNameGeneratorFactory",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IParameterNameGeneratorFactory\" name=\"Microsoft.Data.Entity.Storage.IParameterNameGeneratorFactory\"/>",
                    "id": "IParameterNameGeneratorFactory",
                    "level": 0
                  }
                },
                {
                  "id": "selectExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.SelectExpression",
                    "parent": "Microsoft.Data.Entity.Query.Expressions",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.SelectExpression.yml",
                    "name": "SelectExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.SelectExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.SelectExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.SelectExpression\"/>",
                    "id": "SelectExpression",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.#ctor(Microsoft.Data.Entity.Storage.IRelationalCommandBuilderFactory,Microsoft.Data.Entity.Storage.ISqlGenerator,Microsoft.Data.Entity.Storage.IParameterNameGeneratorFactory,Microsoft.Data.Entity.Query.Expressions.SelectExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.SqlServerQuerySqlGenerator(Microsoft.Data.Entity.Storage.IRelationalCommandBuilderFactory, Microsoft.Data.Entity.Storage.ISqlGenerator, Microsoft.Data.Entity.Storage.IParameterNameGeneratorFactory, Microsoft.Data.Entity.Query.Expressions.SelectExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs/#L16"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.GenerateLimitOffset(Microsoft.Data.Entity.Query.Expressions.SelectExpression)",
            "id": "GenerateLimitOffset_SelectExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator",
            "href": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.yml",
            "name": "GenerateLimitOffset(SelectExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.GenerateLimitOffset(Microsoft.Data.Entity.Query.Expressions.SelectExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
              "startLine": 49,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.MicrosoftSqlServer"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql.Internal",
            "syntax": {
              "content": "protected override void GenerateLimitOffset(SelectExpression selectExpression)",
              "content.vb": "Protected Overrides Sub GenerateLimitOffset(selectExpression As SelectExpression)",
              "parameters": [
                {
                  "id": "selectExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.SelectExpression",
                    "parent": "Microsoft.Data.Entity.Query.Expressions",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.SelectExpression.yml",
                    "name": "SelectExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.SelectExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.SelectExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.SelectExpression\"/>",
                    "id": "SelectExpression",
                    "level": 0
                  }
                }
              ]
            },
            "overridden": "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.GenerateLimitOffset(Microsoft.Data.Entity.Query.Expressions.SelectExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.GenerateLimitOffset(Microsoft.Data.Entity.Query.Expressions.SelectExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.GenerateLimitOffset(Microsoft.Data.Entity.Query.Expressions.SelectExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs/#L50"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitCount(Microsoft.Data.Entity.Query.Expressions.CountExpression)",
            "id": "VisitCount_CountExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator",
            "href": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.yml",
            "name": "VisitCount(CountExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitCount(Microsoft.Data.Entity.Query.Expressions.CountExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
              "startLine": 35,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.MicrosoftSqlServer"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql.Internal",
            "syntax": {
              "content": "public override Expression VisitCount(CountExpression countExpression)",
              "content.vb": "Public Overrides Function VisitCount(countExpression As CountExpression) As Expression",
              "parameters": [
                {
                  "id": "countExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.CountExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.CountExpression.yml",
                    "name": "CountExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.CountExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.CountExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.CountExpression\"/>",
                    "id": "CountExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitCount(Microsoft.Data.Entity.Query.Expressions.CountExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitCount(Microsoft.Data.Entity.Query.Expressions.CountExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitCount(Microsoft.Data.Entity.Query.Expressions.CountExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs/#L36"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitLateralJoin(Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression)",
            "id": "VisitLateralJoin_LateralJoinExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator",
            "href": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.yml",
            "name": "VisitLateralJoin(LateralJoinExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitLateralJoin(Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
              "startLine": 24,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.MicrosoftSqlServer"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql.Internal",
            "syntax": {
              "content": "public override Expression VisitLateralJoin(LateralJoinExpression lateralJoinExpression)",
              "content.vb": "Public Overrides Function VisitLateralJoin(lateralJoinExpression As LateralJoinExpression) As Expression",
              "parameters": [
                {
                  "id": "lateralJoinExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression.yml",
                    "name": "LateralJoinExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression\"/>",
                    "id": "LateralJoinExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitLateralJoin(Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitLateralJoin(Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitLateralJoin(Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs/#L25"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitRowNumber(Microsoft.Data.Entity.Query.Expressions.Internal.RowNumberExpression)",
            "id": "VisitRowNumber_RowNumberExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator",
            "href": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.yml",
            "name": "VisitRowNumber(RowNumberExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitRowNumber(Microsoft.Data.Entity.Query.Expressions.Internal.RowNumberExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
              "startLine": 65,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.MicrosoftSqlServer"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql.Internal",
            "syntax": {
              "content": "public virtual Expression VisitRowNumber(RowNumberExpression rowNumberExpression)",
              "content.vb": "Public Overridable Function VisitRowNumber(rowNumberExpression As RowNumberExpression) As Expression",
              "parameters": [
                {
                  "id": "rowNumberExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.Internal.RowNumberExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.Internal.RowNumberExpression.yml",
                    "name": "RowNumberExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.Internal.RowNumberExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.Internal.RowNumberExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.Internal.RowNumberExpression\"/>",
                    "id": "RowNumberExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitRowNumber(Microsoft.Data.Entity.Query.Expressions.Internal.RowNumberExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitRowNumber(Microsoft.Data.Entity.Query.Expressions.Internal.RowNumberExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs/#L66"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitSqlFunction(Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression)",
            "id": "VisitSqlFunction_SqlFunctionExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator",
            "href": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.yml",
            "name": "VisitSqlFunction(SqlFunctionExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitSqlFunction(Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
              "startLine": 76,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.MicrosoftSqlServer"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql.Internal",
            "syntax": {
              "content": "public override Expression VisitSqlFunction(SqlFunctionExpression sqlFunctionExpression)",
              "content.vb": "Public Overrides Function VisitSqlFunction(sqlFunctionExpression As SqlFunctionExpression) As Expression",
              "parameters": [
                {
                  "id": "sqlFunctionExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression.yml",
                    "name": "SqlFunctionExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression\"/>",
                    "id": "SqlFunctionExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "overridden": "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitSqlFunction(Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitSqlFunction(Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitSqlFunction(Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs/#L77"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator.yml",
    "name": "SqlServerQuerySqlGenerator",
    "fullName": "Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs",
      "startLine": 13,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.MicrosoftSqlServer"
    ],
    "namespace": "Microsoft.Data.Entity.Query.Sql.Internal",
    "syntax": {
      "content": "public class SqlServerQuerySqlGenerator : DefaultQuerySqlGenerator, ISqlExpressionVisitor, IQuerySqlGenerator, ISqlServerExpressionVisitor",
      "content.vb": "Public Class SqlServerQuerySqlGenerator Inherits DefaultQuerySqlGenerator Implements ISqlExpressionVisitor, IQuerySqlGenerator, ISqlServerExpressionVisitor"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      },
      {
        "uid": "System.Linq.Expressions.ExpressionVisitor",
        "parent": "System.Linq.Expressions",
        "isExternal": true,
        "name": "ExpressionVisitor",
        "fullName": "System.Linq.Expressions.ExpressionVisitor",
        "specName": "<xref href=\"System.Linq.Expressions.ExpressionVisitor\" name=\"System.Linq.Expressions.ExpressionVisitor\"/>",
        "id": "ExpressionVisitor",
        "level": 0,
        "index": 1
      },
      {
        "uid": "Remotion.Linq.Parsing.RelinqExpressionVisitor",
        "parent": "Remotion.Linq.Parsing",
        "isExternal": true,
        "name": "RelinqExpressionVisitor",
        "fullName": "Remotion.Linq.Parsing.RelinqExpressionVisitor",
        "specName": "<xref href=\"Remotion.Linq.Parsing.RelinqExpressionVisitor\" name=\"Remotion.Linq.Parsing.RelinqExpressionVisitor\"/>",
        "id": "RelinqExpressionVisitor",
        "level": 0,
        "index": 2
      },
      {
        "uid": "Remotion.Linq.Parsing.ThrowingExpressionVisitor",
        "parent": "Remotion.Linq.Parsing",
        "isExternal": true,
        "name": "ThrowingExpressionVisitor",
        "fullName": "Remotion.Linq.Parsing.ThrowingExpressionVisitor",
        "specName": "<xref href=\"Remotion.Linq.Parsing.ThrowingExpressionVisitor\" name=\"Remotion.Linq.Parsing.ThrowingExpressionVisitor\"/>",
        "id": "ThrowingExpressionVisitor",
        "level": 0,
        "index": 3
      },
      {
        "uid": "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator",
        "isExternal": false,
        "href": "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.yml",
        "name": "DefaultQuerySqlGenerator",
        "fullName": "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator",
        "type": "class",
        "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator\" name=\"Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator\"/>",
        "id": "DefaultQuerySqlGenerator",
        "level": 0,
        "index": 4
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
      "Microsoft.Data.Entity.Query.Sql.IQuerySqlGenerator",
      "Microsoft.Data.Entity.Query.Sql.ISqlServerExpressionVisitor"
    ],
    "inheritedMembers": [
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.SelectExpression",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.SqlGenerator",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.ParameterValues",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.CreateValueBufferFactory(Microsoft.Data.Entity.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.Sql",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.ConcatOperator",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.TrueLiteral",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.FalseLiteral",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.TypedTrueLiteral",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.TypedFalseLiteral",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitSelect(Microsoft.Data.Entity.Query.Expressions.SelectExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.GenerateOrderBy(System.Collections.Generic.IReadOnlyList{Remotion.Linq.Clauses.Ordering})",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitFromSql(Microsoft.Data.Entity.Query.Expressions.FromSqlExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.GenerateFromSql(System.String,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitTable(Microsoft.Data.Entity.Query.Expressions.TableExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitCrossJoin(Microsoft.Data.Entity.Query.Expressions.CrossJoinExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitSum(Microsoft.Data.Entity.Query.Expressions.SumExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitMin(Microsoft.Data.Entity.Query.Expressions.MinExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitMax(Microsoft.Data.Entity.Query.Expressions.MaxExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitStringCompare(Microsoft.Data.Entity.Query.Expressions.StringCompareExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitIn(Microsoft.Data.Entity.Query.Expressions.InExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitNotIn(Microsoft.Data.Entity.Query.Expressions.InExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.ProcessInExpressionValues(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.ExtractNonNullExpressionValues(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitInnerJoin(Microsoft.Data.Entity.Query.Expressions.InnerJoinExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitOuterJoin(Microsoft.Data.Entity.Query.Expressions.LeftOuterJoinExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.GenerateTop(Microsoft.Data.Entity.Query.Expressions.SelectExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitConditional(System.Linq.Expressions.ConditionalExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitExists(Microsoft.Data.Entity.Query.Expressions.ExistsExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitBinary(System.Linq.Expressions.BinaryExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitColumn(Microsoft.Data.Entity.Query.Expressions.ColumnExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitAlias(Microsoft.Data.Entity.Query.Expressions.AliasExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitIsNull(Microsoft.Data.Entity.Query.Expressions.IsNullExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitIsNotNull(Microsoft.Data.Entity.Query.Expressions.IsNullExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitLike(Microsoft.Data.Entity.Query.Expressions.LikeExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitLiteral(Microsoft.Data.Entity.Query.Expressions.LiteralExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitUnary(System.Linq.Expressions.UnaryExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitConstant(System.Linq.Expressions.ConstantExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.VisitParameter(System.Linq.Expressions.ParameterExpression)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.TryGenerateBinaryOperator(System.Linq.Expressions.ExpressionType,System.String@)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.GenerateBinaryOperator(System.Linq.Expressions.ExpressionType)",
      "Microsoft.Data.Entity.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException``1({T},System.String)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.Visit(System.Linq.Expressions.Expression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnknownStandardExpression(System.Linq.Expressions.Expression,System.String,System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem``2({TItem},System.String,System.Func{{TItem},{TResult}})",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitExtension(System.Linq.Expressions.Expression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitUnary(System.Linq.Expressions.UnaryExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBinary(System.Linq.Expressions.BinaryExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConstant(System.Linq.Expressions.ConstantExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConditional(System.Linq.Expressions.ConditionalExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitParameter(System.Linq.Expressions.ParameterExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{{T}})",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda``1(System.Linq.Expressions.Expression{{T}})",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMethodCall(System.Linq.Expressions.MethodCallExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitInvocation(System.Linq.Expressions.InvocationExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMember(System.Linq.Expressions.MemberExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNew(System.Linq.Expressions.NewExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNewArray(System.Linq.Expressions.NewArrayExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberInit(System.Linq.Expressions.MemberInitExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitListInit(System.Linq.Expressions.ListInitExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBlock(System.Linq.Expressions.BlockExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDefault(System.Linq.Expressions.DefaultExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitGoto(System.Linq.Expressions.GotoExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitIndex(System.Linq.Expressions.IndexExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabel(System.Linq.Expressions.LabelExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLoop(System.Linq.Expressions.LoopExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitch(System.Linq.Expressions.SwitchExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTry(System.Linq.Expressions.TryExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberBinding(System.Linq.Expressions.MemberBinding)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitElementInit(System.Linq.Expressions.ElementInit)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberAssignment(System.Linq.Expressions.MemberAssignment)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberListBinding(System.Linq.Expressions.MemberListBinding)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitCatchBlock(System.Linq.Expressions.CatchBlock)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabelTarget(System.Linq.Expressions.LabelTarget)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitchCase(System.Linq.Expressions.SwitchCase)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)",
      "Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)",
      "Remotion.Linq.Parsing.RelinqExpressionVisitor.AdjustArgumentsForNewExpression(System.Collections.Generic.IList{System.Linq.Expressions.Expression},System.Collections.Generic.IList{System.Reflection.MemberInfo})",
      "System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})",
      "System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.Func{{T},{T}})",
      "System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1({T},System.String)",
      "System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.String)",
      "System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)",
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator\" name=\"Microsoft.Data.Entity.Query.Sql.Internal.SqlServerQuerySqlGenerator\"/>",
    "level": 5,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.MicrosoftSqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs/#L14"
  },
  "isClass": true,
  "_allowToc": true
}
