
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper",
    "id": "SqliteTypeMapper",
    "parent": "Microsoft.Data.Entity.Storage.Internal",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.#ctor",
            "id": "SqliteTypeMapper__",
            "parent": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper",
            "href": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.yml",
            "name": "SqliteTypeMapper()",
            "fullName": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.SqliteTypeMapper()",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs",
              "startLine": 23,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Sqlite"
            ],
            "namespace": "Microsoft.Data.Entity.Storage.Internal",
            "syntax": {
              "content": "public SqliteTypeMapper()",
              "content.vb": "Public Sub New"
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.#ctor\" name=\"Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.SqliteTypeMapper()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs/#L24"
          }
        ]
      },
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.SimpleMappings",
            "id": "SimpleMappings",
            "parent": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper",
            "href": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.yml",
            "name": "SimpleMappings",
            "fullName": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.SimpleMappings",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs",
              "startLine": 98,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Sqlite"
            ],
            "namespace": "Microsoft.Data.Entity.Storage.Internal",
            "syntax": {
                "content": "protected override IReadOnlyDictionary<Type, RelationalTypeMapping> SimpleMappings { get; }",
                "content.vb": "Protected Overrides ReadOnly Property SimpleMappings As IReadOnlyDictionary(Of Type, RelationalTypeMapping)",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.Data.Entity.Storage.RelationalTypeMapping}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
                    "href": "Microsoft.Data.Entity.Storage.RelationalTypeMapping.yml",
                    "name": "IReadOnlyDictionary<Type, RelationalTypeMapping>",
                    "name.vb": "IReadOnlyDictionary(Of Type, RelationalTypeMapping)",
                    "fullName": "System.Collections.Generic.IReadOnlyDictionary<System.Type, Microsoft.Data.Entity.Storage.RelationalTypeMapping>",
                    "fullName.vb": "System.Collections.Generic.IReadOnlyDictionary(Of System.Type, Microsoft.Data.Entity.Storage.RelationalTypeMapping)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyDictionary`2",
                        "name": "IReadOnlyDictionary",
                        "fullName": "System.Collections.Generic.IReadOnlyDictionary",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Type",
                        "name": "Type",
                        "fullName": "System.Type",
                        "isExternal": true
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Storage.RelationalTypeMapping",
                        "name": "RelationalTypeMapping",
                        "fullName": "Microsoft.Data.Entity.Storage.RelationalTypeMapping",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Storage.RelationalTypeMapping.yml"
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyDictionary`2",
                        "name": "IReadOnlyDictionary",
                        "fullName": "System.Collections.Generic.IReadOnlyDictionary",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Type",
                        "name": "Type",
                        "fullName": "System.Type",
                        "isExternal": true
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Storage.RelationalTypeMapping",
                        "name": "RelationalTypeMapping",
                        "fullName": "Microsoft.Data.Entity.Storage.RelationalTypeMapping",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Storage.RelationalTypeMapping.yml"
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IReadOnlyDictionary`2\" name=\"System.Collections.Generic.IReadOnlyDictionary\"/>&lt;<xref href=\"System.Type\" name=\"System.Type\"/>, <xref href=\"Microsoft.Data.Entity.Storage.RelationalTypeMapping\" name=\"Microsoft.Data.Entity.Storage.RelationalTypeMapping\"/>&gt;",
                    "id": "IReadOnlyDictionary_Type__RelationalTypeMapping_",
                    "level": 0
                  }
                }
            },
            "overridden": "Microsoft.Data.Entity.Storage.RelationalTypeMapper.SimpleMappings",
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.SimpleMappings\" name=\"Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.SimpleMappings\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs/#L99"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.SimpleNameMappings",
            "id": "SimpleNameMappings",
            "parent": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper",
            "href": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.yml",
            "name": "SimpleNameMappings",
            "fullName": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.SimpleNameMappings",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs",
              "startLine": 101,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Sqlite"
            ],
            "namespace": "Microsoft.Data.Entity.Storage.Internal",
            "syntax": {
                "content": "protected override IReadOnlyDictionary<string, RelationalTypeMapping> SimpleNameMappings { get; }",
                "content.vb": "Protected Overrides ReadOnly Property SimpleNameMappings As IReadOnlyDictionary(Of String, RelationalTypeMapping)",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.Data.Entity.Storage.RelationalTypeMapping}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
                    "href": "Microsoft.Data.Entity.Storage.RelationalTypeMapping.yml",
                    "name": "IReadOnlyDictionary<String, RelationalTypeMapping>",
                    "name.vb": "IReadOnlyDictionary(Of String, RelationalTypeMapping)",
                    "fullName": "System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.Data.Entity.Storage.RelationalTypeMapping>",
                    "fullName.vb": "System.Collections.Generic.IReadOnlyDictionary(Of System.String, Microsoft.Data.Entity.Storage.RelationalTypeMapping)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyDictionary`2",
                        "name": "IReadOnlyDictionary",
                        "fullName": "System.Collections.Generic.IReadOnlyDictionary",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Storage.RelationalTypeMapping",
                        "name": "RelationalTypeMapping",
                        "fullName": "Microsoft.Data.Entity.Storage.RelationalTypeMapping",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Storage.RelationalTypeMapping.yml"
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyDictionary`2",
                        "name": "IReadOnlyDictionary",
                        "fullName": "System.Collections.Generic.IReadOnlyDictionary",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Storage.RelationalTypeMapping",
                        "name": "RelationalTypeMapping",
                        "fullName": "Microsoft.Data.Entity.Storage.RelationalTypeMapping",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Storage.RelationalTypeMapping.yml"
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IReadOnlyDictionary`2\" name=\"System.Collections.Generic.IReadOnlyDictionary\"/>&lt;<xref href=\"System.String\" name=\"System.String\"/>, <xref href=\"Microsoft.Data.Entity.Storage.RelationalTypeMapping\" name=\"Microsoft.Data.Entity.Storage.RelationalTypeMapping\"/>&gt;",
                    "id": "IReadOnlyDictionary_String__RelationalTypeMapping_",
                    "level": 0
                  }
                }
            },
            "overridden": "Microsoft.Data.Entity.Storage.RelationalTypeMapper.SimpleNameMappings",
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.SimpleNameMappings\" name=\"Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.SimpleNameMappings\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs/#L102"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.GetColumnType(Microsoft.Data.Entity.Metadata.IProperty)",
            "id": "GetColumnType_IProperty_",
            "parent": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper",
            "href": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.yml",
            "name": "GetColumnType(IProperty)",
            "fullName": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.GetColumnType(Microsoft.Data.Entity.Metadata.IProperty)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs",
              "startLine": 53,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Sqlite"
            ],
            "namespace": "Microsoft.Data.Entity.Storage.Internal",
            "syntax": {
              "content": "protected override string GetColumnType(IProperty property)",
              "content.vb": "Protected Overrides Function GetColumnType(property As IProperty) As String",
              "parameters": [
                {
                  "id": "property",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.IProperty",
                    "parent": "Microsoft.Data.Entity.Metadata",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.IProperty.yml",
                    "name": "IProperty",
                    "fullName": "Microsoft.Data.Entity.Metadata.IProperty",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IProperty\" name=\"Microsoft.Data.Entity.Metadata.IProperty\"/>",
                    "id": "IProperty",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.String",
                  "parent": "System",
                  "isExternal": true,
                  "name": "String",
                  "fullName": "System.String",
                  "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                  "id": "String",
                  "level": 0
                }
              }
            },
            "overridden": "Microsoft.Data.Entity.Storage.RelationalTypeMapper.GetColumnType(Microsoft.Data.Entity.Metadata.IProperty)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.GetColumnType(Microsoft.Data.Entity.Metadata.IProperty)\" name=\"Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.GetColumnType(Microsoft.Data.Entity.Metadata.IProperty)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs/#L54"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.GetMapping(System.String)",
            "id": "GetMapping_String_",
            "parent": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper",
            "href": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.yml",
            "name": "GetMapping(String)",
            "fullName": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.GetMapping(System.String)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs",
              "startLine": 60,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Sqlite"
            ],
            "namespace": "Microsoft.Data.Entity.Storage.Internal",
            "summary": "<p>Returns a clr type for a SQLite column type. Defaults to typeof(string).\nIt uses the same heuristics from</p>\n<see href=\"https://www.sqlite.org/datatype3.html\">&quot;2.1 Determination of Column Affinity&quot;</see>",
            "syntax": {
              "content": "public override RelationalTypeMapping GetMapping(string typeName)",
              "content.vb": "Public Overrides Function GetMapping(typeName As String) As RelationalTypeMapping",
              "parameters": [
                {
                  "id": "typeName",
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Storage.RelationalTypeMapping",
                  "parent": "Microsoft.Data.Entity.Storage",
                  "isExternal": false,
                  "href": "Microsoft.Data.Entity.Storage.RelationalTypeMapping.yml",
                  "name": "RelationalTypeMapping",
                  "fullName": "Microsoft.Data.Entity.Storage.RelationalTypeMapping",
                  "type": "class",
                  "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalTypeMapping\" name=\"Microsoft.Data.Entity.Storage.RelationalTypeMapping\"/>",
                  "id": "RelationalTypeMapping",
                  "level": 0
                }
              }
            },
            "overridden": "Microsoft.Data.Entity.Storage.RelationalTypeMapper.GetMapping(System.String)",
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.GetMapping(System.String)\" name=\"Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.GetMapping(System.String)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs/#L61"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper.yml",
    "name": "SqliteTypeMapper",
    "fullName": "Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs",
      "startLine": 11,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Sqlite"
    ],
    "namespace": "Microsoft.Data.Entity.Storage.Internal",
    "syntax": {
      "content": "public class SqliteTypeMapper : RelationalTypeMapper, IRelationalTypeMapper",
      "content.vb": "Public Class SqliteTypeMapper Inherits RelationalTypeMapper Implements IRelationalTypeMapper"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      },
      {
        "uid": "Microsoft.Data.Entity.Storage.RelationalTypeMapper",
        "isExternal": false,
        "href": "Microsoft.Data.Entity.Storage.RelationalTypeMapper.yml",
        "name": "RelationalTypeMapper",
        "fullName": "Microsoft.Data.Entity.Storage.RelationalTypeMapper",
        "type": "class",
        "specName": "<xref href=\"Microsoft.Data.Entity.Storage.RelationalTypeMapper\" name=\"Microsoft.Data.Entity.Storage.RelationalTypeMapper\"/>",
        "id": "RelationalTypeMapper",
        "level": 0,
        "index": 1
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Storage.IRelationalTypeMapper"
    ],
    "inheritedMembers": [
      "Microsoft.Data.Entity.Storage.RelationalTypeMapper.GetMapping(Microsoft.Data.Entity.Metadata.IProperty)",
      "Microsoft.Data.Entity.Storage.RelationalTypeMapper.FindMapping(Microsoft.Data.Entity.Metadata.IProperty)",
      "Microsoft.Data.Entity.Storage.RelationalTypeMapper.FindMapping(System.Type)",
      "Microsoft.Data.Entity.Storage.RelationalTypeMapper.GetMapping(System.Type)",
      "Microsoft.Data.Entity.Storage.RelationalTypeMapper.IsTypeMapped(System.Type)",
      "Microsoft.Data.Entity.Storage.RelationalTypeMapper.FindCustomMapping(Microsoft.Data.Entity.Metadata.IProperty)",
      "Microsoft.Data.Entity.Storage.RelationalTypeMapper.GetCustomMapping(Microsoft.Data.Entity.Metadata.IProperty)",
      "Microsoft.Data.Entity.Storage.RelationalTypeMapper.GetStringMapping(Microsoft.Data.Entity.Metadata.IProperty,System.Int32,System.Func{System.Int32,Microsoft.Data.Entity.Storage.RelationalTypeMapping},Microsoft.Data.Entity.Storage.RelationalTypeMapping,Microsoft.Data.Entity.Storage.RelationalTypeMapping,Microsoft.Data.Entity.Storage.RelationalTypeMapping)",
      "Microsoft.Data.Entity.Storage.RelationalTypeMapper.GetByteArrayMapping(Microsoft.Data.Entity.Metadata.IProperty,System.Int32,System.Func{System.Int32,Microsoft.Data.Entity.Storage.RelationalTypeMapping},Microsoft.Data.Entity.Storage.RelationalTypeMapping,Microsoft.Data.Entity.Storage.RelationalTypeMapping,Microsoft.Data.Entity.Storage.RelationalTypeMapping,Microsoft.Data.Entity.Storage.RelationalTypeMapping)",
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper\" name=\"Microsoft.Data.Entity.Storage.Internal.SqliteTypeMapper\"/>",
    "level": 2,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Sqlite/Storage/Internal/SqliteTypeMapper.cs/#L12"
  },
  "isClass": true,
  "_allowToc": true
}
