
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
    "id": "ReferenceCollectionBuilder",
    "parent": "Microsoft.Data.Entity.Metadata.Builders",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
            "id": "ReferenceCollectionBuilder_InternalRelationshipBuilder_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
            "name": "ReferenceCollectionBuilder(InternalRelationshipBuilder)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.ReferenceCollectionBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
              "startLine": 37,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<para>\nInitializes a new instance of the <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\"></xref> class.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
            "syntax": {
              "content": "public ReferenceCollectionBuilder(InternalRelationshipBuilder builder)",
              "content.vb": "Public Sub New(builder As InternalRelationshipBuilder)",
              "parameters": [
                {
                  "id": "builder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder.yml",
                    "name": "InternalRelationshipBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\" name=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\"/>",
                    "id": "InternalRelationshipBuilder",
                    "level": 0
                  },
                  "description": "<p>The internal builder being used to configure this relationship.</p>\n"
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.ReferenceCollectionBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs/#L38"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
            "id": "ReferenceCollectionBuilder_InternalRelationshipBuilder__ReferenceCollectionBuilder__Boolean__Boolean__Boolean_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
            "name": "ReferenceCollectionBuilder(InternalRelationshipBuilder, ReferenceCollectionBuilder, Boolean, Boolean, Boolean)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.ReferenceCollectionBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder, Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder, System.Boolean, System.Boolean, System.Boolean)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
              "startLine": 59,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<para>\nInitializes a new instance of the <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\"></xref> class.\n</para>",
            "syntax": {
              "content": "protected ReferenceCollectionBuilder(InternalRelationshipBuilder builder, ReferenceCollectionBuilder oldBuilder, bool foreignKeySet = false, bool principalKeySet = false, bool requiredSet = false)",
              "content.vb": "Protected Sub New(builder As InternalRelationshipBuilder, oldBuilder As ReferenceCollectionBuilder, foreignKeySet As Boolean = False, principalKeySet As Boolean = False, requiredSet As Boolean = False)",
              "parameters": [
                {
                  "id": "builder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder.yml",
                    "name": "InternalRelationshipBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\" name=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\"/>",
                    "id": "InternalRelationshipBuilder",
                    "level": 0
                  },
                  "description": "<p>The internal builder being used to configure this relationship.</p>\n"
                },
                {
                  "id": "oldBuilder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                    "id": "ReferenceCollectionBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Builders",
                    "children": [
                      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
                      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
                      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String,System.Object)",
                      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
                      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])",
                      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
                      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
                      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                      "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                    ],
                    "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
                    "name": "ReferenceCollectionBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                    "type": "class",
                    "source": {
                      "remote": {
                        "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                        "branch": "dev",
                        "repo": "https://github.com/chenkennt/EntityFramework.git"
                      },
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                      "startLine": 21,
                      "endLine": 0,
                      "isExternal": false
                    },
                    "assemblies": [
                      "EntityFramework.Core"
                    ],
                    "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                    "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                    "syntax": {
                      "content": "public class ReferenceCollectionBuilder : IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder>",
                      "content.vb": "Public Class ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)"
                    },
                    "inheritance": [
                      "System.Object"
                    ],
                    "implements": [
                      "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                      "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                    ],
                    "inheritedMembers": [
                      "System.Object.ToString",
                      "System.Object.Equals(System.Object)",
                      "System.Object.Equals(System.Object,System.Object)",
                      "System.Object.ReferenceEquals(System.Object,System.Object)",
                      "System.Object.GetHashCode",
                      "System.Object.GetType",
                      "System.Object.MemberwiseClone"
                    ],
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\"/>",
                    "level": 1
                  },
                  "description": "<p>A builder to copy configuration from.</p>\n"
                },
                {
                  "id": "foreignKeySet",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether the foreign key properties have been configured in this chain of configuration calls.</p>\n"
                },
                {
                  "id": "principalKeySet",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether the principal key properties have been configured in this chain of configuration calls.</p>\n"
                },
                {
                  "id": "requiredSet",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether required/optional has been configured in this chain of configuration calls.</p>\n"
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.ReferenceCollectionBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder, Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder, System.Boolean, System.Boolean, System.Boolean)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs/#L60"
          }
        ]
      },
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
            "id": "Builder",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
            "name": "Builder",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
              "startLine": 97,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>The internal builder being used to configure the entity type.</p>\n",
            "syntax": {
                "content": "protected virtual InternalRelationshipBuilder Builder { get; }",
                "content.vb": "Protected Overridable ReadOnly Property Builder As InternalRelationshipBuilder",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder.yml",
                    "name": "InternalRelationshipBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\" name=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\"/>",
                    "id": "InternalRelationshipBuilder",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs/#L98"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
            "id": "Metadata",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
            "name": "Metadata",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
              "startLine": 102,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>The foreign key that represents this relationship.</p>\n",
            "syntax": {
                "content": "public virtual IMutableForeignKey Metadata { get; }",
                "content.vb": "Public Overridable ReadOnly Property Metadata As IMutableForeignKey",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.IMutableForeignKey",
                    "parent": "Microsoft.Data.Entity.Metadata",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.IMutableForeignKey.yml",
                    "name": "IMutableForeignKey",
                    "fullName": "Microsoft.Data.Entity.Metadata.IMutableForeignKey",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableForeignKey\" name=\"Microsoft.Data.Entity.Metadata.IMutableForeignKey\"/>",
                    "id": "IMutableForeignKey",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs/#L103"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
            "id": "IInfrastructure_IMutableModel__Instance",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
            "name": "IInfrastructure<IMutableModel>.Instance",
            "name.vb": "Microsoft.Data.Entity.Infrastructure.IInfrastructure<Microsoft.Data.Entity.Metadata.IMutableModel>.Instance",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.Data.Entity.Infrastructure.IInfrastructure<Microsoft.Data.Entity.Metadata.IMutableModel>.Instance",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
              "startLine": 107,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>The model that this relationship belongs to.</p>\n",
            "syntax": {
                "content": "IMutableModel IInfrastructure<IMutableModel>.Instance { get; }",
                "content.vb": "ReadOnly WriteOnly Property Microsoft.Data.Entity.Infrastructure.IInfrastructure<Microsoft.Data.Entity.Metadata.IMutableModel>.Instance As IMutableModel Implements IInfrastructure(Of IMutableModel).Instance",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.IMutableModel",
                    "parent": "Microsoft.Data.Entity.Metadata",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.IMutableModel.yml",
                    "name": "IMutableModel",
                    "fullName": "Microsoft.Data.Entity.Metadata.IMutableModel",
                    "type": "interface",
                    "summary": "<para>\nMetadata about the shape of entities, the relationships between them, and how they map to the database. A model is typically\ncreated by overriding the <xref href=\"Microsoft.Data.Entity.DbContext.OnConfiguring(Microsoft.Data.Entity.DbContextOptionsBuilder)\"></xref> method on a derived context, or\nusing <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref>.\n</para>\n<para>\nThis interface is used during model creation and allows the metadata to be modified.\nOnce the model is built, <xref href=\"Microsoft.Data.Entity.Metadata.IModel\"></xref> represents a ready-only view of the same metadata.\n</para>",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IMutableModel\" name=\"Microsoft.Data.Entity.Metadata.IMutableModel\"/>",
                    "id": "IMutableModel",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.Data.Entity.Infrastructure.IInfrastructure&lt;Microsoft.Data.Entity.Metadata.IMutableModel&gt;.Instance\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs/#L108"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
            "id": "IInfrastructure_InternalRelationshipBuilder__Instance",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
            "name": "IInfrastructure<InternalRelationshipBuilder>.Instance",
            "name.vb": "Microsoft.Data.Entity.Infrastructure.IInfrastructure<Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder>.Instance",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.Data.Entity.Infrastructure.IInfrastructure<Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder>.Instance",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
              "startLine": 112,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Gets the internal builder being used to configure this relationship.</p>\n",
            "syntax": {
                "content": "InternalRelationshipBuilder IInfrastructure<InternalRelationshipBuilder>.Instance { get; }",
                "content.vb": "ReadOnly WriteOnly Property Microsoft.Data.Entity.Infrastructure.IInfrastructure<Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder>.Instance As InternalRelationshipBuilder Implements IInfrastructure(Of InternalRelationshipBuilder).Instance",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder.yml",
                    "name": "InternalRelationshipBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\" name=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\"/>",
                    "id": "InternalRelationshipBuilder",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.Data.Entity.Infrastructure.IInfrastructure&lt;Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder&gt;.Instance\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs/#L113"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String,System.Object)",
            "id": "HasAnnotation_String__Object_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
            "name": "HasAnnotation(String, Object)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String, System.Object)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
              "startLine": 122,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Adds or updates an annotation on the relationship. If an annotation with the key specified in</p>\n<p><paramref name=\"annotation\"></paramref>\nalready exists it&#39;s value will be updated.</p>\n",
            "syntax": {
              "content": "public virtual ReferenceCollectionBuilder HasAnnotation(string annotation, object value)",
              "content.vb": "Public Overridable Function HasAnnotation(annotation As String, value As Object) As ReferenceCollectionBuilder",
              "parameters": [
                {
                  "id": "annotation",
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  },
                  "description": "<p>The key of the annotation to be added or updated.</p>\n"
                },
                {
                  "id": "value",
                  "type": {
                    "uid": "System.Object",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Object",
                    "fullName": "System.Object",
                    "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
                    "id": "Object",
                    "level": 0
                  },
                  "description": "<p>The value to be stored in the annotation.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                  "id": "ReferenceCollectionBuilder",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
                  "name": "ReferenceCollectionBuilder",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                    "startLine": 21,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceCollectionBuilder : IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder>",
                    "content.vb": "Public Class ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)"
                  },
                  "inheritance": [
                    "System.Object"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\"/>",
                  "level": 1
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String,System.Object)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String, System.Object)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs/#L123"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "id": "HasForeignKey_String___",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
            "name": "HasForeignKey(String[])",
            "name.vb": "HasForeignKey(String())",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String())",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
              "startLine": 154,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<para>\nConfigures the property(s) to use as the foreign key for this relationship.\n</para>\n<para>\nIf the specified property name(s) do not exist on the entity type then a new shadow state\nproperty(s) will be added to serve as the foreign key. A shadow state property is one that does not\nhave a corresponding property in the entity class. The current value for the  property is stored in\nthe <xref href=\"Microsoft.Data.Entity.ChangeTracking.ChangeTracker\"></xref> rather than being stored in instances\nof the entity class.\n</para>\n<para>\nIf <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])\"></xref> is not specified, then an attempt will be made to match\nthe data type and order of foreign key properties against the primary key of the principal\nentity type. If they do not match, new shadow state properties that form a unique index will be\nadded to the principal entity type to serve as the reference key.\n</para>",
            "syntax": {
              "content": "public virtual ReferenceCollectionBuilder HasForeignKey(params string[] foreignKeyPropertyNames)",
              "content.vb": "Public Overridable Function HasForeignKey(ParamArray foreignKeyPropertyNames As String()) As ReferenceCollectionBuilder",
              "parameters": [
                {
                  "id": "foreignKeyPropertyNames",
                  "type": {
                    "uid": "System.String[]",
                    "isExternal": true,
                    "name": "String[]",
                    "name.vb": "String()",
                    "fullName": "System.String[]",
                    "fullName.vb": "System.String()",
                    "spec.csharp": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "[]",
                        "fullName": "[]",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "()",
                        "fullName": "()",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>[]",
                    "id": "String__",
                    "level": 0
                  },
                  "description": "<p>The name(s) of the foreign key property(s).</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                  "id": "ReferenceCollectionBuilder",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
                  "name": "ReferenceCollectionBuilder",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                    "startLine": 21,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceCollectionBuilder : IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder>",
                    "content.vb": "Public Class ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)"
                  },
                  "inheritance": [
                    "System.Object"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\"/>",
                  "level": 1
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs/#L155"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])",
            "id": "HasPrincipalKey_String___",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
            "name": "HasPrincipalKey(String[])",
            "name.vb": "HasPrincipalKey(String())",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String())",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
              "startLine": 172,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures the unique property(s) that this relationship targets. Typically you would only call this\nmethod if you want to use a property(s) other than the primary key as the principal property(s). If\nthe specified property(s) is not already a unique constraint (or the primary key) then a new unique\nconstraint will be introduced.</p>\n",
            "syntax": {
              "content": "public virtual ReferenceCollectionBuilder HasPrincipalKey(params string[] keyPropertyNames)",
              "content.vb": "Public Overridable Function HasPrincipalKey(ParamArray keyPropertyNames As String()) As ReferenceCollectionBuilder",
              "parameters": [
                {
                  "id": "keyPropertyNames",
                  "type": {
                    "uid": "System.String[]",
                    "isExternal": true,
                    "name": "String[]",
                    "name.vb": "String()",
                    "fullName": "System.String[]",
                    "fullName.vb": "System.String()",
                    "spec.csharp": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "[]",
                        "fullName": "[]",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "()",
                        "fullName": "()",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>[]",
                    "id": "String__",
                    "level": 0
                  },
                  "description": "<p>The name(s) of the reference key property(s).</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                  "id": "ReferenceCollectionBuilder",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
                  "name": "ReferenceCollectionBuilder",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                    "startLine": 21,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceCollectionBuilder : IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder>",
                    "content.vb": "Public Class ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)"
                  },
                  "inheritance": [
                    "System.Object"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\"/>",
                  "level": 1
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs/#L173"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "id": "IsRequired_Boolean_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
            "name": "IsRequired(Boolean)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
              "startLine": 188,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures whether this is a required relationship (i.e. whether the foreign key property(s) can\nbe assigned null).</p>\n",
            "syntax": {
              "content": "public virtual ReferenceCollectionBuilder IsRequired(bool required = true)",
              "content.vb": "Public Overridable Function IsRequired(required As Boolean = True) As ReferenceCollectionBuilder",
              "parameters": [
                {
                  "id": "required",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether this is a required relationship.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                  "id": "ReferenceCollectionBuilder",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
                  "name": "ReferenceCollectionBuilder",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                    "startLine": 21,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceCollectionBuilder : IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder>",
                    "content.vb": "Public Class ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)"
                  },
                  "inheritance": [
                    "System.Object"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\"/>",
                  "level": 1
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs/#L189"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)",
            "id": "OnDelete_DeleteBehavior_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
            "name": "OnDelete(DeleteBehavior)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
              "startLine": 197,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures how a delete operation is applied to dependent entities in the relationship when the\nprincipal is deleted or the relationship is severed.</p>\n",
            "syntax": {
              "content": "public virtual ReferenceCollectionBuilder OnDelete(DeleteBehavior deleteBehavior)",
              "content.vb": "Public Overridable Function OnDelete(deleteBehavior As DeleteBehavior) As ReferenceCollectionBuilder",
              "parameters": [
                {
                  "id": "deleteBehavior",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.DeleteBehavior",
                    "parent": "Microsoft.Data.Entity.Metadata",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.DeleteBehavior.yml",
                    "name": "DeleteBehavior",
                    "fullName": "Microsoft.Data.Entity.Metadata.DeleteBehavior",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.DeleteBehavior\" name=\"Microsoft.Data.Entity.Metadata.DeleteBehavior\"/>",
                    "id": "DeleteBehavior",
                    "level": 0
                  },
                  "description": "<p>The action to perform.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                  "id": "ReferenceCollectionBuilder",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
                  "name": "ReferenceCollectionBuilder",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
                    "startLine": 21,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceCollectionBuilder : IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder>",
                    "content.vb": "Public Class ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)"
                  },
                  "inheritance": [
                    "System.Object"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\"/>",
                  "level": 1
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs/#L198"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder.yml",
    "name": "ReferenceCollectionBuilder",
    "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs",
      "startLine": 21,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Metadata.Builders",
    "summary": "<para>\nProvides a simple API for configuring a one-to-many relationship.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
    "syntax": {
      "content": "public class ReferenceCollectionBuilder : IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder>",
      "content.vb": "Public Class ReferenceCollectionBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
      "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
    ],
    "inheritedMembers": [
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceCollectionBuilder\"/>",
    "level": 1,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceCollectionBuilder.cs/#L22"
  },
  "isClass": true,
  "_allowToc": true
}
