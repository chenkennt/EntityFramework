
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
    "id": "QueryCompiler",
    "parent": "Microsoft.Data.Entity.Query.Internal",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.#ctor(Microsoft.Data.Entity.Query.IQueryContextFactory,Microsoft.Data.Entity.Query.Internal.ICompiledQueryCache,Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator,Microsoft.Data.Entity.Storage.IDatabase,Microsoft.Extensions.Logging.ILogger{Microsoft.Data.Entity.Query.Internal.QueryCompiler},Remotion.Linq.Parsing.Structure.NodeTypeProviders.MethodInfoBasedNodeTypeRegistry,Microsoft.Data.Entity.DbContext)",
            "id": "QueryCompiler_IQueryContextFactory__ICompiledQueryCache__ICompiledQueryCacheKeyGenerator__IDatabase__ILogger_QueryCompiler___MethodInfoBasedNodeTypeRegistry__DbContext_",
            "parent": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
            "href": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.yml",
            "name": "QueryCompiler(IQueryContextFactory, ICompiledQueryCache, ICompiledQueryCacheKeyGenerator, IDatabase, ILogger<QueryCompiler>, MethodInfoBasedNodeTypeRegistry, DbContext)",
            "name.vb": "QueryCompiler(IQueryContextFactory, ICompiledQueryCache, ICompiledQueryCacheKeyGenerator, IDatabase, ILogger(Of QueryCompiler), MethodInfoBasedNodeTypeRegistry, DbContext)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.QueryCompiler(Microsoft.Data.Entity.Query.IQueryContextFactory, Microsoft.Data.Entity.Query.Internal.ICompiledQueryCache, Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator, Microsoft.Data.Entity.Storage.IDatabase, Microsoft.Extensions.Logging.ILogger<Microsoft.Data.Entity.Query.Internal.QueryCompiler>, Remotion.Linq.Parsing.Structure.NodeTypeProviders.MethodInfoBasedNodeTypeRegistry, Microsoft.Data.Entity.DbContext)",
            "fullName.vb": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.QueryCompiler(Microsoft.Data.Entity.Query.IQueryContextFactory, Microsoft.Data.Entity.Query.Internal.ICompiledQueryCache, Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator, Microsoft.Data.Entity.Storage.IDatabase, Microsoft.Extensions.Logging.ILogger(Of Microsoft.Data.Entity.Query.Internal.QueryCompiler), Remotion.Linq.Parsing.Structure.NodeTypeProviders.MethodInfoBasedNodeTypeRegistry, Microsoft.Data.Entity.DbContext)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
              "startLine": 48,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "public QueryCompiler(IQueryContextFactory queryContextFactory, ICompiledQueryCache compiledQueryCache, ICompiledQueryCacheKeyGenerator compiledQueryCacheKeyGenerator, IDatabase database, ILogger<QueryCompiler> logger, MethodInfoBasedNodeTypeRegistry methodInfoBasedNodeTypeRegistry, DbContext context)",
              "content.vb": "Public Sub New(queryContextFactory As IQueryContextFactory, compiledQueryCache As ICompiledQueryCache, compiledQueryCacheKeyGenerator As ICompiledQueryCacheKeyGenerator, database As IDatabase, logger As ILogger(Of QueryCompiler), methodInfoBasedNodeTypeRegistry As MethodInfoBasedNodeTypeRegistry, context As DbContext)",
              "parameters": [
                {
                  "id": "queryContextFactory",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.IQueryContextFactory",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.IQueryContextFactory.yml",
                    "name": "IQueryContextFactory",
                    "fullName": "Microsoft.Data.Entity.Query.IQueryContextFactory",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.IQueryContextFactory\" name=\"Microsoft.Data.Entity.Query.IQueryContextFactory\"/>",
                    "id": "IQueryContextFactory",
                    "level": 0
                  }
                },
                {
                  "id": "compiledQueryCache",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Internal.ICompiledQueryCache",
                    "parent": "Microsoft.Data.Entity.Query.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Internal.ICompiledQueryCache.yml",
                    "name": "ICompiledQueryCache",
                    "fullName": "Microsoft.Data.Entity.Query.Internal.ICompiledQueryCache",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.ICompiledQueryCache\" name=\"Microsoft.Data.Entity.Query.Internal.ICompiledQueryCache\"/>",
                    "id": "ICompiledQueryCache",
                    "level": 0
                  }
                },
                {
                  "id": "compiledQueryCacheKeyGenerator",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator",
                    "parent": "Microsoft.Data.Entity.Query",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator.yml",
                    "name": "ICompiledQueryCacheKeyGenerator",
                    "fullName": "Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator\" name=\"Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator\"/>",
                    "id": "ICompiledQueryCacheKeyGenerator",
                    "level": 0
                  }
                },
                {
                  "id": "database",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IDatabase",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IDatabase.yml",
                    "name": "IDatabase",
                    "fullName": "Microsoft.Data.Entity.Storage.IDatabase",
                    "type": "interface",
                    "summary": "<para>\nThe main interaction point between a context and the database provider.\n</para>\n<para>\nThis interface is typically used by database providers (and other extensions). It is generally\nnot used in application code.\n</para>",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabase\" name=\"Microsoft.Data.Entity.Storage.IDatabase\"/>",
                    "id": "IDatabase",
                    "level": 0
                  }
                },
                {
                  "id": "logger",
                  "type": {
                    "uid": "Microsoft.Extensions.Logging.ILogger{Microsoft.Data.Entity.Query.Internal.QueryCompiler}",
                    "parent": "Microsoft.Extensions.Logging",
                    "definition": "Microsoft.Extensions.Logging.ILogger`1",
                    "href": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.yml",
                    "name": "ILogger<QueryCompiler>",
                    "name.vb": "ILogger(Of QueryCompiler)",
                    "fullName": "Microsoft.Extensions.Logging.ILogger<Microsoft.Data.Entity.Query.Internal.QueryCompiler>",
                    "fullName.vb": "Microsoft.Extensions.Logging.ILogger(Of Microsoft.Data.Entity.Query.Internal.QueryCompiler)",
                    "spec.csharp": [
                      {
                        "uid": "Microsoft.Extensions.Logging.ILogger`1",
                        "name": "ILogger",
                        "fullName": "Microsoft.Extensions.Logging.ILogger",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
                        "name": "QueryCompiler",
                        "fullName": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.yml"
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "Microsoft.Extensions.Logging.ILogger`1",
                        "name": "ILogger",
                        "fullName": "Microsoft.Extensions.Logging.ILogger",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
                        "name": "QueryCompiler",
                        "fullName": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.yml"
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"Microsoft.Extensions.Logging.ILogger`1\" name=\"Microsoft.Extensions.Logging.ILogger\"/>&lt;<xref href=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler\" name=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler\"/>&gt;",
                    "id": "ILogger_QueryCompiler_",
                    "level": 0
                  }
                },
                {
                  "id": "methodInfoBasedNodeTypeRegistry",
                  "type": {
                    "uid": "Remotion.Linq.Parsing.Structure.NodeTypeProviders.MethodInfoBasedNodeTypeRegistry",
                    "parent": "Remotion.Linq.Parsing.Structure.NodeTypeProviders",
                    "isExternal": true,
                    "name": "MethodInfoBasedNodeTypeRegistry",
                    "fullName": "Remotion.Linq.Parsing.Structure.NodeTypeProviders.MethodInfoBasedNodeTypeRegistry",
                    "specName": "<xref href=\"Remotion.Linq.Parsing.Structure.NodeTypeProviders.MethodInfoBasedNodeTypeRegistry\" name=\"Remotion.Linq.Parsing.Structure.NodeTypeProviders.MethodInfoBasedNodeTypeRegistry\"/>",
                    "id": "MethodInfoBasedNodeTypeRegistry",
                    "level": 0
                  }
                },
                {
                  "id": "context",
                  "type": {
                    "uid": "Microsoft.Data.Entity.DbContext",
                    "parent": "Microsoft.Data.Entity",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.DbContext.yml",
                    "name": "DbContext",
                    "fullName": "Microsoft.Data.Entity.DbContext",
                    "specName": "<xref href=\"Microsoft.Data.Entity.DbContext\" name=\"Microsoft.Data.Entity.DbContext\"/>",
                    "id": "DbContext",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.#ctor(Microsoft.Data.Entity.Query.IQueryContextFactory,Microsoft.Data.Entity.Query.Internal.ICompiledQueryCache,Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator,Microsoft.Data.Entity.Storage.IDatabase,Microsoft.Extensions.Logging.ILogger{Microsoft.Data.Entity.Query.Internal.QueryCompiler},Remotion.Linq.Parsing.Structure.NodeTypeProviders.MethodInfoBasedNodeTypeRegistry,Microsoft.Data.Entity.DbContext)\" name=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.QueryCompiler(Microsoft.Data.Entity.Query.IQueryContextFactory, Microsoft.Data.Entity.Query.Internal.ICompiledQueryCache, Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator, Microsoft.Data.Entity.Storage.IDatabase, Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Data.Entity.Query.Internal.QueryCompiler&gt;, Remotion.Linq.Parsing.Structure.NodeTypeProviders.MethodInfoBasedNodeTypeRegistry, Microsoft.Data.Entity.DbContext)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/QueryCompiler.cs/#L49"
          }
        ]
      },
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.Database",
            "id": "Database",
            "parent": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
            "href": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.yml",
            "name": "Database",
            "fullName": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.Database",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
              "startLine": 73,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
                "content": "protected virtual IDatabase Database { get; }",
                "content.vb": "Protected Overridable ReadOnly Property Database As IDatabase",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IDatabase",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IDatabase.yml",
                    "name": "IDatabase",
                    "fullName": "Microsoft.Data.Entity.Storage.IDatabase",
                    "type": "interface",
                    "summary": "<para>\nThe main interaction point between a context and the database provider.\n</para>\n<para>\nThis interface is typically used by database providers (and other extensions). It is generally\nnot used in application code.\n</para>",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabase\" name=\"Microsoft.Data.Entity.Storage.IDatabase\"/>",
                    "id": "IDatabase",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.Database\" name=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.Database\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/QueryCompiler.cs/#L74"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.CompileAsyncQuery``1(System.Linq.Expressions.Expression)",
            "id": "CompileAsyncQuery_TResult__Expression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
            "href": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.yml",
            "name": "CompileAsyncQuery<TResult>(Expression)",
            "name.vb": "CompileAsyncQuery(Of TResult)(Expression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.CompileAsyncQuery<TResult>(System.Linq.Expressions.Expression)",
            "fullName.vb": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.CompileAsyncQuery(Of TResult)(System.Linq.Expressions.Expression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
              "startLine": 189,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected virtual Func<QueryContext, IAsyncEnumerable<TResult>> CompileAsyncQuery<TResult>(Expression query)",
              "content.vb": "Protected Overridable Function CompileAsyncQuery(Of TResult)(query As Expression) As Func(Of QueryContext, IAsyncEnumerable(Of TResult))",
              "parameters": [
                {
                  "id": "query",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "Expression",
                    "fullName": "System.Linq.Expressions.Expression",
                    "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                    "id": "Expression",
                    "level": 0
                  }
                }
              ],
              "typeParameters": [
                {
                  "id": "TResult"
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Func{Microsoft.Data.Entity.Query.QueryContext,System.Collections.Generic.IAsyncEnumerable{{TResult}}}",
                  "parent": "System",
                  "definition": "System.Func`2",
                  "href": "Microsoft.Data.Entity.Query.QueryContext.yml",
                  "name": "Func<QueryContext, IAsyncEnumerable<TResult>>",
                  "name.vb": "Func(Of QueryContext, IAsyncEnumerable(Of TResult))",
                  "fullName": "System.Func<Microsoft.Data.Entity.Query.QueryContext, System.Collections.Generic.IAsyncEnumerable<TResult>>",
                  "fullName.vb": "System.Func(Of Microsoft.Data.Entity.Query.QueryContext, System.Collections.Generic.IAsyncEnumerable(Of TResult))",
                  "spec.csharp": [
                    {
                      "uid": "System.Func`2",
                      "name": "Func",
                      "fullName": "System.Func",
                      "isExternal": true
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Query.QueryContext",
                      "name": "QueryContext",
                      "fullName": "Microsoft.Data.Entity.Query.QueryContext",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Query.QueryContext.yml"
                    },
                    {
                      "name": ", ",
                      "fullName": ", ",
                      "isExternal": false
                    },
                    {
                      "uid": "System.Collections.Generic.IAsyncEnumerable`1",
                      "name": "IAsyncEnumerable",
                      "fullName": "System.Collections.Generic.IAsyncEnumerable",
                      "isExternal": true
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "name": "TResult",
                      "fullName": "TResult",
                      "isExternal": false
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "System.Func`2",
                      "name": "Func",
                      "fullName": "System.Func",
                      "isExternal": true
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Query.QueryContext",
                      "name": "QueryContext",
                      "fullName": "Microsoft.Data.Entity.Query.QueryContext",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Query.QueryContext.yml"
                    },
                    {
                      "name": ", ",
                      "fullName": ", ",
                      "isExternal": false
                    },
                    {
                      "uid": "System.Collections.Generic.IAsyncEnumerable`1",
                      "name": "IAsyncEnumerable",
                      "fullName": "System.Collections.Generic.IAsyncEnumerable",
                      "isExternal": true
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "name": "TResult",
                      "fullName": "TResult",
                      "isExternal": false
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"System.Func`2\" name=\"System.Func\"/>&lt;<xref href=\"Microsoft.Data.Entity.Query.QueryContext\" name=\"Microsoft.Data.Entity.Query.QueryContext\"/>, <xref href=\"System.Collections.Generic.IAsyncEnumerable`1\" name=\"System.Collections.Generic.IAsyncEnumerable\"/>&lt;TResult&gt;&gt;",
                  "id": "Func_QueryContext__IAsyncEnumerable_TResult__",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.CompileAsyncQuery``1(System.Linq.Expressions.Expression)\" name=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.CompileAsyncQuery&lt;TResult&gt;(System.Linq.Expressions.Expression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/QueryCompiler.cs/#L190"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.CompileQuery``1(System.Linq.Expressions.Expression)",
            "id": "CompileQuery_TResult__Expression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
            "href": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.yml",
            "name": "CompileQuery<TResult>(Expression)",
            "name.vb": "CompileQuery(Of TResult)(Expression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.CompileQuery<TResult>(System.Linq.Expressions.Expression)",
            "fullName.vb": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.CompileQuery(Of TResult)(System.Linq.Expressions.Expression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
              "startLine": 133,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected virtual Func<QueryContext, TResult> CompileQuery<TResult>(Expression query)",
              "content.vb": "Protected Overridable Function CompileQuery(Of TResult)(query As Expression) As Func(Of QueryContext, TResult)",
              "parameters": [
                {
                  "id": "query",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "Expression",
                    "fullName": "System.Linq.Expressions.Expression",
                    "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                    "id": "Expression",
                    "level": 0
                  }
                }
              ],
              "typeParameters": [
                {
                  "id": "TResult"
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Func{Microsoft.Data.Entity.Query.QueryContext,{TResult}}",
                  "parent": "System",
                  "definition": "System.Func`2",
                  "href": "Microsoft.Data.Entity.Query.QueryContext.yml",
                  "name": "Func<QueryContext, TResult>",
                  "name.vb": "Func(Of QueryContext, TResult)",
                  "fullName": "System.Func<Microsoft.Data.Entity.Query.QueryContext, TResult>",
                  "fullName.vb": "System.Func(Of Microsoft.Data.Entity.Query.QueryContext, TResult)",
                  "spec.csharp": [
                    {
                      "uid": "System.Func`2",
                      "name": "Func",
                      "fullName": "System.Func",
                      "isExternal": true
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Query.QueryContext",
                      "name": "QueryContext",
                      "fullName": "Microsoft.Data.Entity.Query.QueryContext",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Query.QueryContext.yml"
                    },
                    {
                      "name": ", ",
                      "fullName": ", ",
                      "isExternal": false
                    },
                    {
                      "name": "TResult",
                      "fullName": "TResult",
                      "isExternal": false
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "System.Func`2",
                      "name": "Func",
                      "fullName": "System.Func",
                      "isExternal": true
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Query.QueryContext",
                      "name": "QueryContext",
                      "fullName": "Microsoft.Data.Entity.Query.QueryContext",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Query.QueryContext.yml"
                    },
                    {
                      "name": ", ",
                      "fullName": ", ",
                      "isExternal": false
                    },
                    {
                      "name": "TResult",
                      "fullName": "TResult",
                      "isExternal": false
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"System.Func`2\" name=\"System.Func\"/>&lt;<xref href=\"Microsoft.Data.Entity.Query.QueryContext\" name=\"Microsoft.Data.Entity.Query.QueryContext\"/>, TResult&gt;",
                  "id": "Func_QueryContext__TResult_",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.CompileQuery``1(System.Linq.Expressions.Expression)\" name=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.CompileQuery&lt;TResult&gt;(System.Linq.Expressions.Expression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/QueryCompiler.cs/#L134"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.Execute``1(System.Linq.Expressions.Expression)",
            "id": "Execute_TResult__Expression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
            "href": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.yml",
            "name": "Execute<TResult>(Expression)",
            "name.vb": "Execute(Of TResult)(Expression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.Execute<TResult>(System.Linq.Expressions.Expression)",
            "fullName.vb": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.Execute(Of TResult)(System.Linq.Expressions.Expression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
              "startLine": 75,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "public virtual TResult Execute<TResult>(Expression query)",
              "content.vb": "Public Overridable Function Execute(Of TResult)(query As Expression) As TResult",
              "parameters": [
                {
                  "id": "query",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "Expression",
                    "fullName": "System.Linq.Expressions.Expression",
                    "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                    "id": "Expression",
                    "level": 0
                  }
                }
              ],
              "typeParameters": [
                {
                  "id": "TResult"
                }
              ],
              "return": {
                "type": {
                  "uid": "{TResult}",
                  "isExternal": false,
                  "name": "TResult",
                  "fullName": "TResult",
                  "specName": "<xref href=\"{TResult}\" name=\"TResult\"/>",
                  "id": "TResult",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.Execute``1(System.Linq.Expressions.Expression)\" name=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.Execute&lt;TResult&gt;(System.Linq.Expressions.Expression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/QueryCompiler.cs/#L76"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExecuteAsync``1(System.Linq.Expressions.Expression)",
            "id": "ExecuteAsync_TResult__Expression_",
            "parent": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
            "href": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.yml",
            "name": "ExecuteAsync<TResult>(Expression)",
            "name.vb": "ExecuteAsync(Of TResult)(Expression)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExecuteAsync<TResult>(System.Linq.Expressions.Expression)",
            "fullName.vb": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExecuteAsync(Of TResult)(System.Linq.Expressions.Expression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
              "startLine": 86,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "public virtual IAsyncEnumerable<TResult> ExecuteAsync<TResult>(Expression query)",
              "content.vb": "Public Overridable Function ExecuteAsync(Of TResult)(query As Expression) As IAsyncEnumerable(Of TResult)",
              "parameters": [
                {
                  "id": "query",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "Expression",
                    "fullName": "System.Linq.Expressions.Expression",
                    "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                    "id": "Expression",
                    "level": 0
                  }
                }
              ],
              "typeParameters": [
                {
                  "id": "TResult"
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Collections.Generic.IAsyncEnumerable{{TResult}}",
                  "parent": "System.Collections.Generic",
                  "definition": "System.Collections.Generic.IAsyncEnumerable`1",
                  "name": "IAsyncEnumerable<TResult>",
                  "name.vb": "IAsyncEnumerable(Of TResult)",
                  "fullName": "System.Collections.Generic.IAsyncEnumerable<TResult>",
                  "fullName.vb": "System.Collections.Generic.IAsyncEnumerable(Of TResult)",
                  "spec.csharp": [
                    {
                      "uid": "System.Collections.Generic.IAsyncEnumerable`1",
                      "name": "IAsyncEnumerable",
                      "fullName": "System.Collections.Generic.IAsyncEnumerable",
                      "isExternal": true
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "name": "TResult",
                      "fullName": "TResult",
                      "isExternal": false
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "System.Collections.Generic.IAsyncEnumerable`1",
                      "name": "IAsyncEnumerable",
                      "fullName": "System.Collections.Generic.IAsyncEnumerable",
                      "isExternal": true
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "name": "TResult",
                      "fullName": "TResult",
                      "isExternal": false
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"System.Collections.Generic.IAsyncEnumerable`1\" name=\"System.Collections.Generic.IAsyncEnumerable\"/>&lt;TResult&gt;",
                  "id": "IAsyncEnumerable_TResult_",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExecuteAsync``1(System.Linq.Expressions.Expression)\" name=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExecuteAsync&lt;TResult&gt;(System.Linq.Expressions.Expression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/QueryCompiler.cs/#L87"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)",
            "id": "ExecuteAsync_TResult__Expression__CancellationToken_",
            "parent": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
            "href": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.yml",
            "name": "ExecuteAsync<TResult>(Expression, CancellationToken)",
            "name.vb": "ExecuteAsync(Of TResult)(Expression, CancellationToken)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExecuteAsync<TResult>(System.Linq.Expressions.Expression, System.Threading.CancellationToken)",
            "fullName.vb": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExecuteAsync(Of TResult)(System.Linq.Expressions.Expression, System.Threading.CancellationToken)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
              "startLine": 97,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "public virtual Task<TResult> ExecuteAsync<TResult>(Expression query, CancellationToken cancellationToken)",
              "content.vb": "Public Overridable Function ExecuteAsync(Of TResult)(query As Expression, cancellationToken As CancellationToken) As Task(Of TResult)",
              "parameters": [
                {
                  "id": "query",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "Expression",
                    "fullName": "System.Linq.Expressions.Expression",
                    "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                    "id": "Expression",
                    "level": 0
                  }
                },
                {
                  "id": "cancellationToken",
                  "type": {
                    "uid": "System.Threading.CancellationToken",
                    "parent": "System.Threading",
                    "isExternal": true,
                    "name": "CancellationToken",
                    "fullName": "System.Threading.CancellationToken",
                    "specName": "<xref href=\"System.Threading.CancellationToken\" name=\"System.Threading.CancellationToken\"/>",
                    "id": "CancellationToken",
                    "level": 0
                  }
                }
              ],
              "typeParameters": [
                {
                  "id": "TResult"
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Threading.Tasks.Task{{TResult}}",
                  "parent": "System.Threading.Tasks",
                  "definition": "System.Threading.Tasks.Task`1",
                  "name": "Task<TResult>",
                  "name.vb": "Task(Of TResult)",
                  "fullName": "System.Threading.Tasks.Task<TResult>",
                  "fullName.vb": "System.Threading.Tasks.Task(Of TResult)",
                  "spec.csharp": [
                    {
                      "uid": "System.Threading.Tasks.Task`1",
                      "name": "Task",
                      "fullName": "System.Threading.Tasks.Task",
                      "isExternal": true
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "name": "TResult",
                      "fullName": "TResult",
                      "isExternal": false
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "System.Threading.Tasks.Task`1",
                      "name": "Task",
                      "fullName": "System.Threading.Tasks.Task",
                      "isExternal": true
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "name": "TResult",
                      "fullName": "TResult",
                      "isExternal": false
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"System.Threading.Tasks.Task`1\" name=\"System.Threading.Tasks.Task\"/>&lt;TResult&gt;",
                  "id": "Task_TResult_",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)\" name=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExecuteAsync&lt;TResult&gt;(System.Linq.Expressions.Expression, System.Threading.CancellationToken)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/QueryCompiler.cs/#L98"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExtractParameters(System.Linq.Expressions.Expression,Microsoft.Data.Entity.Query.QueryContext)",
            "id": "ExtractParameters_Expression__QueryContext_",
            "parent": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
            "href": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.yml",
            "name": "ExtractParameters(Expression, QueryContext)",
            "fullName": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExtractParameters(System.Linq.Expressions.Expression, Microsoft.Data.Entity.Query.QueryContext)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
              "startLine": 124,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Internal",
            "syntax": {
              "content": "protected virtual Expression ExtractParameters(Expression query, QueryContext queryContext)",
              "content.vb": "Protected Overridable Function ExtractParameters(query As Expression, queryContext As QueryContext) As Expression",
              "parameters": [
                {
                  "id": "query",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression",
                    "parent": "System.Linq.Expressions",
                    "isExternal": true,
                    "name": "Expression",
                    "fullName": "System.Linq.Expressions.Expression",
                    "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                    "id": "Expression",
                    "level": 0
                  }
                },
                {
                  "id": "queryContext",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.QueryContext",
                    "parent": "Microsoft.Data.Entity.Query",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.QueryContext.yml",
                    "name": "QueryContext",
                    "fullName": "Microsoft.Data.Entity.Query.QueryContext",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.QueryContext\" name=\"Microsoft.Data.Entity.Query.QueryContext\"/>",
                    "id": "QueryContext",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExtractParameters(System.Linq.Expressions.Expression,Microsoft.Data.Entity.Query.QueryContext)\" name=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler.ExtractParameters(System.Linq.Expressions.Expression, Microsoft.Data.Entity.Query.QueryContext)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/QueryCompiler.cs/#L125"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Query.Internal.QueryCompiler.yml",
    "name": "QueryCompiler",
    "fullName": "Microsoft.Data.Entity.Query.Internal.QueryCompiler",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Query/Internal/QueryCompiler.cs",
      "startLine": 29,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Query.Internal",
    "syntax": {
      "content": "public class QueryCompiler : IQueryCompiler",
      "content.vb": "Public Class QueryCompiler Implements IQueryCompiler"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Query.Internal.IQueryCompiler"
    ],
    "inheritedMembers": [
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler\" name=\"Microsoft.Data.Entity.Query.Internal.QueryCompiler\"/>",
    "level": 1,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Query/Internal/QueryCompiler.cs/#L30"
  },
  "isClass": true,
  "_allowToc": true
}
