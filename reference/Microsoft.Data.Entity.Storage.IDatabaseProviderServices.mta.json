
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
    "id": "IDatabaseProviderServices",
    "parent": "Microsoft.Data.Entity.Storage",
    "children": [
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator",
            "id": "CompiledQueryCacheKeyGenerator",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "CompiledQueryCacheKeyGenerator",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 88,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "ICompiledQueryCacheKeyGenerator CompiledQueryCacheKeyGenerator { get; }",
                "content.vb": "ReadOnly Property CompiledQueryCacheKeyGenerator As ICompiledQueryCacheKeyGenerator",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator",
                    "parent": "Microsoft.Data.Entity.Query",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator.yml",
                    "name": "ICompiledQueryCacheKeyGenerator",
                    "fullName": "Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator\" name=\"Microsoft.Data.Entity.Query.ICompiledQueryCacheKeyGenerator\"/>",
                    "id": "ICompiledQueryCacheKeyGenerator",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L89"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ConventionSetBuilder",
            "id": "ConventionSetBuilder",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "ConventionSetBuilder",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ConventionSetBuilder",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 53,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IConventionSetBuilder ConventionSetBuilder { get; }",
                "content.vb": "ReadOnly Property ConventionSetBuilder As IConventionSetBuilder",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Conventions.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder.yml",
                    "name": "IConventionSetBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder\" name=\"Microsoft.Data.Entity.Metadata.Conventions.Internal.IConventionSetBuilder\"/>",
                    "id": "IConventionSetBuilder",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ConventionSetBuilder\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ConventionSetBuilder\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L54"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.Creator",
            "id": "Creator",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "Creator",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.Creator",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 43,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Storage.IDatabaseCreator\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IDatabaseCreator Creator { get; }",
                "content.vb": "ReadOnly Property Creator As IDatabaseCreator",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IDatabaseCreator",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IDatabaseCreator.yml",
                    "name": "IDatabaseCreator",
                    "fullName": "Microsoft.Data.Entity.Storage.IDatabaseCreator",
                    "type": "interface",
                    "summary": "<para>\nCreates and deletes databases for a given database provider.\n</para>\n<para>\nThis interface is typically used by database providers (and other extensions). It is generally\nnot used in application code.\n</para>",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseCreator\" name=\"Microsoft.Data.Entity.Storage.IDatabaseCreator\"/>",
                    "id": "IDatabaseCreator",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.Creator\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.Creator\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L44"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.Database",
            "id": "Database",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "Database",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.Database",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 33,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Storage.IDatabase\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IDatabase Database { get; }",
                "content.vb": "ReadOnly Property Database As IDatabase",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IDatabase",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IDatabase.yml",
                    "name": "IDatabase",
                    "fullName": "Microsoft.Data.Entity.Storage.IDatabase",
                    "type": "interface",
                    "summary": "<para>\nThe main interaction point between a context and the database provider.\n</para>\n<para>\nThis interface is typically used by database providers (and other extensions). It is generally\nnot used in application code.\n</para>",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabase\" name=\"Microsoft.Data.Entity.Storage.IDatabase\"/>",
                    "id": "IDatabase",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.Database\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.Database\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L34"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory",
            "id": "EntityQueryableExpressionVisitorFactory",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "EntityQueryableExpressionVisitorFactory",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 103,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IEntityQueryableExpressionVisitorFactory EntityQueryableExpressionVisitorFactory { get; }",
                "content.vb": "ReadOnly Property EntityQueryableExpressionVisitorFactory As IEntityQueryableExpressionVisitorFactory",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory",
                    "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory.yml",
                    "name": "IEntityQueryableExpressionVisitorFactory",
                    "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory\"/>",
                    "id": "IEntityQueryableExpressionVisitorFactory",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L104"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory",
            "id": "EntityQueryModelVisitorFactory",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "EntityQueryModelVisitorFactory",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 83,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Query.IEntityQueryModelVisitorFactory\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IEntityQueryModelVisitorFactory EntityQueryModelVisitorFactory { get; }",
                "content.vb": "ReadOnly Property EntityQueryModelVisitorFactory As IEntityQueryModelVisitorFactory",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.IEntityQueryModelVisitorFactory",
                    "parent": "Microsoft.Data.Entity.Query",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.IEntityQueryModelVisitorFactory.yml",
                    "name": "IEntityQueryModelVisitorFactory",
                    "fullName": "Microsoft.Data.Entity.Query.IEntityQueryModelVisitorFactory",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.IEntityQueryModelVisitorFactory\" name=\"Microsoft.Data.Entity.Query.IEntityQueryModelVisitorFactory\"/>",
                    "id": "IEntityQueryModelVisitorFactory",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L84"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ExpressionPrinter",
            "id": "ExpressionPrinter",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "ExpressionPrinter",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ExpressionPrinter",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 93,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Query.Internal.IExpressionPrinter\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IExpressionPrinter ExpressionPrinter { get; }",
                "content.vb": "ReadOnly Property ExpressionPrinter As IExpressionPrinter",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Internal.IExpressionPrinter",
                    "parent": "Microsoft.Data.Entity.Query.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Internal.IExpressionPrinter.yml",
                    "name": "IExpressionPrinter",
                    "fullName": "Microsoft.Data.Entity.Query.Internal.IExpressionPrinter",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Internal.IExpressionPrinter\" name=\"Microsoft.Data.Entity.Query.Internal.IExpressionPrinter\"/>",
                    "id": "IExpressionPrinter",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ExpressionPrinter\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ExpressionPrinter\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L94"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.InvariantName",
            "id": "InvariantName",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "InvariantName",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.InvariantName",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 28,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>The unique name used to identify the database provider. This should be the same as the NuGet package name\nfor the providers runtime.</p>\n",
            "syntax": {
                "content": "string InvariantName { get; }",
                "content.vb": "ReadOnly Property InvariantName As String",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.InvariantName\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.InvariantName\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L29"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ModelSource",
            "id": "ModelSource",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "ModelSource",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ModelSource",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 58,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Infrastructure.IModelSource\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IModelSource ModelSource { get; }",
                "content.vb": "ReadOnly Property ModelSource As IModelSource",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Infrastructure.IModelSource",
                    "parent": "Microsoft.Data.Entity.Infrastructure",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Infrastructure.IModelSource.yml",
                    "name": "IModelSource",
                    "fullName": "Microsoft.Data.Entity.Infrastructure.IModelSource",
                    "type": "interface",
                    "summary": "<para>\nProduces an <xref href=\"Microsoft.Data.Entity.Metadata.IModel\"></xref> based on a context. This is typically implemented by database providers to ensure that any\nconventions\nand validation specific to their database are used.\n</para>\n<para>\nThis interface is typically used by database providers (and other extensions). It is generally\nnot used in application code.\n</para>",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.IModelSource\" name=\"Microsoft.Data.Entity.Infrastructure.IModelSource\"/>",
                    "id": "IModelSource",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ModelSource\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ModelSource\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L59"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ModelValidator",
            "id": "ModelValidator",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "ModelValidator",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ModelValidator",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 63,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Internal.IModelValidator\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IModelValidator ModelValidator { get; }",
                "content.vb": "ReadOnly Property ModelValidator As IModelValidator",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Internal.IModelValidator",
                    "parent": "Microsoft.Data.Entity.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Internal.IModelValidator.yml",
                    "name": "IModelValidator",
                    "fullName": "Microsoft.Data.Entity.Internal.IModelValidator",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Internal.IModelValidator\" name=\"Microsoft.Data.Entity.Internal.IModelValidator\"/>",
                    "id": "IModelValidator",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ModelValidator\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ModelValidator\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L64"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory",
            "id": "ProjectionExpressionVisitorFactory",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "ProjectionExpressionVisitorFactory",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 108,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IProjectionExpressionVisitorFactory ProjectionExpressionVisitorFactory { get; }",
                "content.vb": "ReadOnly Property ProjectionExpressionVisitorFactory As IProjectionExpressionVisitorFactory",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory",
                    "parent": "Microsoft.Data.Entity.Query.ExpressionVisitors",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory.yml",
                    "name": "IProjectionExpressionVisitorFactory",
                    "fullName": "Microsoft.Data.Entity.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory\" name=\"Microsoft.Data.Entity.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory\"/>",
                    "id": "IProjectionExpressionVisitorFactory",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L109"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.QueryCompilationContextFactory",
            "id": "QueryCompilationContextFactory",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "QueryCompilationContextFactory",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.QueryCompilationContextFactory",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 78,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Query.IQueryCompilationContextFactory\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IQueryCompilationContextFactory QueryCompilationContextFactory { get; }",
                "content.vb": "ReadOnly Property QueryCompilationContextFactory As IQueryCompilationContextFactory",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.IQueryCompilationContextFactory",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.IQueryCompilationContextFactory.yml",
                    "name": "IQueryCompilationContextFactory",
                    "fullName": "Microsoft.Data.Entity.Query.IQueryCompilationContextFactory",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.IQueryCompilationContextFactory\" name=\"Microsoft.Data.Entity.Query.IQueryCompilationContextFactory\"/>",
                    "id": "IQueryCompilationContextFactory",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.QueryCompilationContextFactory\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.QueryCompilationContextFactory\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L79"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.QueryContextFactory",
            "id": "QueryContextFactory",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "QueryContextFactory",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.QueryContextFactory",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 73,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Query.IQueryContextFactory\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IQueryContextFactory QueryContextFactory { get; }",
                "content.vb": "ReadOnly Property QueryContextFactory As IQueryContextFactory",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.IQueryContextFactory",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.IQueryContextFactory.yml",
                    "name": "IQueryContextFactory",
                    "fullName": "Microsoft.Data.Entity.Query.IQueryContextFactory",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.IQueryContextFactory\" name=\"Microsoft.Data.Entity.Query.IQueryContextFactory\"/>",
                    "id": "IQueryContextFactory",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.QueryContextFactory\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.QueryContextFactory\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L74"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ResultOperatorHandler",
            "id": "ResultOperatorHandler",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "ResultOperatorHandler",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ResultOperatorHandler",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 98,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Query.IResultOperatorHandler\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IResultOperatorHandler ResultOperatorHandler { get; }",
                "content.vb": "ReadOnly Property ResultOperatorHandler As IResultOperatorHandler",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.IResultOperatorHandler",
                    "parent": "Microsoft.Data.Entity.Query",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.IResultOperatorHandler.yml",
                    "name": "IResultOperatorHandler",
                    "fullName": "Microsoft.Data.Entity.Query.IResultOperatorHandler",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.IResultOperatorHandler\" name=\"Microsoft.Data.Entity.Query.IResultOperatorHandler\"/>",
                    "id": "IResultOperatorHandler",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ResultOperatorHandler\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ResultOperatorHandler\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L99"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.TransactionManager",
            "id": "TransactionManager",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "TransactionManager",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.TransactionManager",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 38,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.Storage.IDbContextTransactionManager\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IDbContextTransactionManager TransactionManager { get; }",
                "content.vb": "ReadOnly Property TransactionManager As IDbContextTransactionManager",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IDbContextTransactionManager",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IDbContextTransactionManager.yml",
                    "name": "IDbContextTransactionManager",
                    "fullName": "Microsoft.Data.Entity.Storage.IDbContextTransactionManager",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDbContextTransactionManager\" name=\"Microsoft.Data.Entity.Storage.IDbContextTransactionManager\"/>",
                    "id": "IDbContextTransactionManager",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.TransactionManager\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.TransactionManager\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L39"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ValueGeneratorCache",
            "id": "ValueGeneratorCache",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "ValueGeneratorCache",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ValueGeneratorCache",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 68,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.ValueGeneration.IValueGeneratorCache\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IValueGeneratorCache ValueGeneratorCache { get; }",
                "content.vb": "ReadOnly Property ValueGeneratorCache As IValueGeneratorCache",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.ValueGeneration.IValueGeneratorCache",
                    "parent": "Microsoft.Data.Entity.ValueGeneration",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.ValueGeneration.IValueGeneratorCache.yml",
                    "name": "IValueGeneratorCache",
                    "fullName": "Microsoft.Data.Entity.ValueGeneration.IValueGeneratorCache",
                    "type": "interface",
                    "summary": "<para>\nKeeps a cache of value generators for properties.\n</para>\n<para>\nThis type is typically used by database providers (and other extensions). It is generally\nnot used in application code.\n</para>",
                    "specName": "<xref href=\"Microsoft.Data.Entity.ValueGeneration.IValueGeneratorCache\" name=\"Microsoft.Data.Entity.ValueGeneration.IValueGeneratorCache\"/>",
                    "id": "IValueGeneratorCache",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ValueGeneratorCache\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ValueGeneratorCache\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L69"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ValueGeneratorSelector",
            "id": "ValueGeneratorSelector",
            "parent": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
            "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
            "name": "ValueGeneratorSelector",
            "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ValueGeneratorSelector",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
              "startLine": 48,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "summary": "<p>Gets the <xref href=\"Microsoft.Data.Entity.ValueGeneration.IValueGeneratorSelector\"></xref> for the database provider.</p>\n",
            "syntax": {
                "content": "IValueGeneratorSelector ValueGeneratorSelector { get; }",
                "content.vb": "ReadOnly Property ValueGeneratorSelector As IValueGeneratorSelector",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.ValueGeneration.IValueGeneratorSelector",
                    "parent": "Microsoft.Data.Entity.ValueGeneration",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.ValueGeneration.IValueGeneratorSelector.yml",
                    "name": "IValueGeneratorSelector",
                    "fullName": "Microsoft.Data.Entity.ValueGeneration.IValueGeneratorSelector",
                    "type": "interface",
                    "summary": "<para>\nSelects value generators to be used to generate values for properties of entities.\n</para>\n<para>\nThis type is typically used by database providers (and other extensions). It is generally\nnot used in application code.\n</para>",
                    "specName": "<xref href=\"Microsoft.Data.Entity.ValueGeneration.IValueGeneratorSelector\" name=\"Microsoft.Data.Entity.ValueGeneration.IValueGeneratorSelector\"/>",
                    "id": "IValueGeneratorSelector",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ValueGeneratorSelector\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices.ValueGeneratorSelector\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L49"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices.yml",
    "name": "IDatabaseProviderServices",
    "fullName": "Microsoft.Data.Entity.Storage.IDatabaseProviderServices",
    "type": "Interface",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs",
      "startLine": 22,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Storage",
    "summary": "<para>\nThe base set of services required by EF for a database provider to function.\n</para>\n<para>\nThis type is typically used by database providers (and other extensions). It is generally\nnot used in application code.\n</para>",
    "syntax": {
      "content": "public interface IDatabaseProviderServices",
      "content.vb": "Public Interface IDatabaseProviderServices"
    },
    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices\" name=\"Microsoft.Data.Entity.Storage.IDatabaseProviderServices\"/>",
    "level": 0,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Storage/IDatabaseProviderServices.cs/#L23"
  },
  "isClass": true,
  "_allowToc": true
}
