
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Internal.LazyRef`1",
    "id": "LazyRef_T_",
    "parent": "Microsoft.Data.Entity.Internal",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Internal.LazyRef`1.#ctor(`0)",
            "id": "LazyRef_T_",
            "parent": "Microsoft.Data.Entity.Internal.LazyRef`1",
            "href": "Microsoft.Data.Entity.Internal.LazyRef`1.yml",
            "name": "LazyRef(T)",
            "fullName": "Microsoft.Data.Entity.Internal.LazyRef<T>.LazyRef(T)",
            "fullName.vb": "Microsoft.Data.Entity.Internal.LazyRef(Of T).LazyRef(T)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/LazyRef.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/LazyRef.cs",
              "startLine": 20,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public LazyRef(T value)",
              "content.vb": "Public Sub New(value As T)",
              "parameters": [
                {
                  "id": "value",
                  "type": {
                    "uid": "{T}",
                    "isExternal": false,
                    "name": "T",
                    "fullName": "T",
                    "specName": "<xref href=\"{T}\" name=\"T\"/>",
                    "id": "T",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.LazyRef`1.#ctor(`0)\" name=\"Microsoft.Data.Entity.Internal.LazyRef&lt;T&gt;.LazyRef(T)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/LazyRef.cs/#L21"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.LazyRef`1.#ctor(System.Func{`0})",
            "id": "LazyRef_Func_T__",
            "parent": "Microsoft.Data.Entity.Internal.LazyRef`1",
            "href": "Microsoft.Data.Entity.Internal.LazyRef`1.yml",
            "name": "LazyRef(Func<T>)",
            "name.vb": "LazyRef(Func(Of T))",
            "fullName": "Microsoft.Data.Entity.Internal.LazyRef<T>.LazyRef(System.Func<T>)",
            "fullName.vb": "Microsoft.Data.Entity.Internal.LazyRef(Of T).LazyRef(System.Func(Of T))",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/LazyRef.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/LazyRef.cs",
              "startLine": 15,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public LazyRef(Func<T> initializer)",
              "content.vb": "Public Sub New(initializer As Func(Of T))",
              "parameters": [
                {
                  "id": "initializer",
                  "type": {
                    "uid": "System.Func{{T}}",
                    "parent": "System",
                    "definition": "System.Func`1",
                    "name": "Func<T>",
                    "name.vb": "Func(Of T)",
                    "fullName": "System.Func<T>",
                    "fullName.vb": "System.Func(Of T)",
                    "spec.csharp": [
                      {
                        "uid": "System.Func`1",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "T",
                        "fullName": "T",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Func`1",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "T",
                        "fullName": "T",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Func`1\" name=\"System.Func\"/>&lt;T&gt;",
                    "id": "Func_T_",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.LazyRef`1.#ctor(System.Func{`0})\" name=\"Microsoft.Data.Entity.Internal.LazyRef&lt;T&gt;.LazyRef(System.Func&lt;T&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/LazyRef.cs/#L16"
          }
        ]
      },
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Internal.LazyRef`1.HasValue",
            "id": "HasValue",
            "parent": "Microsoft.Data.Entity.Internal.LazyRef`1",
            "href": "Microsoft.Data.Entity.Internal.LazyRef`1.yml",
            "name": "HasValue",
            "fullName": "Microsoft.Data.Entity.Internal.LazyRef<T>.HasValue",
            "fullName.vb": "Microsoft.Data.Entity.Internal.LazyRef(Of T).HasValue",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/LazyRef.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/LazyRef.cs",
              "startLine": 45,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
                "content": "public bool HasValue { get; }",
                "content.vb": "Public ReadOnly Property HasValue As Boolean",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.LazyRef`1.HasValue\" name=\"Microsoft.Data.Entity.Internal.LazyRef&lt;T&gt;.HasValue\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/LazyRef.cs/#L46"
          },
          {
            "uid": "Microsoft.Data.Entity.Internal.LazyRef`1.Value",
            "id": "Value",
            "parent": "Microsoft.Data.Entity.Internal.LazyRef`1",
            "href": "Microsoft.Data.Entity.Internal.LazyRef`1.yml",
            "name": "Value",
            "fullName": "Microsoft.Data.Entity.Internal.LazyRef<T>.Value",
            "fullName.vb": "Microsoft.Data.Entity.Internal.LazyRef(Of T).Value",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/LazyRef.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/LazyRef.cs",
              "startLine": 25,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
                "content": "public T Value { get; set; }",
                "content.vb": "Public Property Value As T",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "{T}",
                    "isExternal": false,
                    "name": "T",
                    "fullName": "T",
                    "specName": "<xref href=\"{T}\" name=\"T\"/>",
                    "id": "T",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.LazyRef`1.Value\" name=\"Microsoft.Data.Entity.Internal.LazyRef&lt;T&gt;.Value\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/LazyRef.cs/#L26"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Internal.LazyRef`1.Reset(System.Func{`0})",
            "id": "Reset_Func_T__",
            "parent": "Microsoft.Data.Entity.Internal.LazyRef`1",
            "href": "Microsoft.Data.Entity.Internal.LazyRef`1.yml",
            "name": "Reset(Func<T>)",
            "name.vb": "Reset(Func(Of T))",
            "fullName": "Microsoft.Data.Entity.Internal.LazyRef<T>.Reset(System.Func<T>)",
            "fullName.vb": "Microsoft.Data.Entity.Internal.LazyRef(Of T).Reset(System.Func(Of T))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Internal/LazyRef.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Internal/LazyRef.cs",
              "startLine": 47,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Internal",
            "syntax": {
              "content": "public void Reset(Func<T> initializer)",
              "content.vb": "Public Sub Reset(initializer As Func(Of T))",
              "parameters": [
                {
                  "id": "initializer",
                  "type": {
                    "uid": "System.Func{{T}}",
                    "parent": "System",
                    "definition": "System.Func`1",
                    "name": "Func<T>",
                    "name.vb": "Func(Of T)",
                    "fullName": "System.Func<T>",
                    "fullName.vb": "System.Func(Of T)",
                    "spec.csharp": [
                      {
                        "uid": "System.Func`1",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "T",
                        "fullName": "T",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Func`1",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "T",
                        "fullName": "T",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Func`1\" name=\"System.Func\"/>&lt;T&gt;",
                    "id": "Func_T_",
                    "level": 0
                  }
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Internal.LazyRef`1.Reset(System.Func{`0})\" name=\"Microsoft.Data.Entity.Internal.LazyRef&lt;T&gt;.Reset(System.Func&lt;T&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/LazyRef.cs/#L48"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Internal.LazyRef`1.yml",
    "name": "LazyRef<T>",
    "name.vb": "LazyRef(Of T)",
    "fullName": "Microsoft.Data.Entity.Internal.LazyRef<T>",
    "fullName.vb": "Microsoft.Data.Entity.Internal.LazyRef(Of T)",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Internal/LazyRef.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Internal/LazyRef.cs",
      "startLine": 9,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Internal",
    "syntax": {
      "content": "public sealed class LazyRef<T>",
      "content.vb": "Public NotInheritable Class LazyRef(Of T)",
      "typeParameters": [
        {
          "id": "T"
        }
      ]
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      }
    ],
    "inheritedMembers": [
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Internal.LazyRef`1\" name=\"Microsoft.Data.Entity.Internal.LazyRef&lt;T&gt;\"/>",
    "level": 1,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Internal/LazyRef.cs/#L10"
  },
  "isClass": true,
  "_allowToc": true
}
