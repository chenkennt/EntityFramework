
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
    "id": "ISqlExpressionVisitor",
    "parent": "Microsoft.Data.Entity.Query.Sql",
    "children": [
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitAlias(Microsoft.Data.Entity.Query.Expressions.AliasExpression)",
            "id": "VisitAlias_AliasExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitAlias(AliasExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitAlias(Microsoft.Data.Entity.Query.Expressions.AliasExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 12,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitAlias(AliasExpression aliasExpression)",
              "content.vb": "Function VisitAlias(aliasExpression As AliasExpression) As Expression",
              "parameters": [
                {
                  "id": "aliasExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.AliasExpression",
                    "parent": "Microsoft.Data.Entity.Query.Expressions",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.AliasExpression.yml",
                    "name": "AliasExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.AliasExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.AliasExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.AliasExpression\"/>",
                    "id": "AliasExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitAlias(Microsoft.Data.Entity.Query.Expressions.AliasExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitAlias(Microsoft.Data.Entity.Query.Expressions.AliasExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L13"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitColumn(Microsoft.Data.Entity.Query.Expressions.ColumnExpression)",
            "id": "VisitColumn_ColumnExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitColumn(ColumnExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitColumn(Microsoft.Data.Entity.Query.Expressions.ColumnExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 11,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitColumn(ColumnExpression columnExpression)",
              "content.vb": "Function VisitColumn(columnExpression As ColumnExpression) As Expression",
              "parameters": [
                {
                  "id": "columnExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.ColumnExpression",
                    "parent": "Microsoft.Data.Entity.Query.Expressions",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.ColumnExpression.yml",
                    "name": "ColumnExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.ColumnExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.ColumnExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.ColumnExpression\"/>",
                    "id": "ColumnExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitColumn(Microsoft.Data.Entity.Query.Expressions.ColumnExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitColumn(Microsoft.Data.Entity.Query.Expressions.ColumnExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L12"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitCount(Microsoft.Data.Entity.Query.Expressions.CountExpression)",
            "id": "VisitCount_CountExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitCount(CountExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitCount(Microsoft.Data.Entity.Query.Expressions.CountExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 24,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitCount(CountExpression countExpression)",
              "content.vb": "Function VisitCount(countExpression As CountExpression) As Expression",
              "parameters": [
                {
                  "id": "countExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.CountExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.CountExpression.yml",
                    "name": "CountExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.CountExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.CountExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.CountExpression\"/>",
                    "id": "CountExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitCount(Microsoft.Data.Entity.Query.Expressions.CountExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitCount(Microsoft.Data.Entity.Query.Expressions.CountExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L25"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitCrossJoin(Microsoft.Data.Entity.Query.Expressions.CrossJoinExpression)",
            "id": "VisitCrossJoin_CrossJoinExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitCrossJoin(CrossJoinExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitCrossJoin(Microsoft.Data.Entity.Query.Expressions.CrossJoinExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 19,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitCrossJoin(CrossJoinExpression crossJoinExpression)",
              "content.vb": "Function VisitCrossJoin(crossJoinExpression As CrossJoinExpression) As Expression",
              "parameters": [
                {
                  "id": "crossJoinExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.CrossJoinExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.CrossJoinExpression.yml",
                    "name": "CrossJoinExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.CrossJoinExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.CrossJoinExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.CrossJoinExpression\"/>",
                    "id": "CrossJoinExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitCrossJoin(Microsoft.Data.Entity.Query.Expressions.CrossJoinExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitCrossJoin(Microsoft.Data.Entity.Query.Expressions.CrossJoinExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L20"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitExists(Microsoft.Data.Entity.Query.Expressions.ExistsExpression)",
            "id": "VisitExists_ExistsExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitExists(ExistsExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitExists(Microsoft.Data.Entity.Query.Expressions.ExistsExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 23,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitExists(ExistsExpression existsExpression)",
              "content.vb": "Function VisitExists(existsExpression As ExistsExpression) As Expression",
              "parameters": [
                {
                  "id": "existsExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.ExistsExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.ExistsExpression.yml",
                    "name": "ExistsExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.ExistsExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.ExistsExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.ExistsExpression\"/>",
                    "id": "ExistsExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitExists(Microsoft.Data.Entity.Query.Expressions.ExistsExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitExists(Microsoft.Data.Entity.Query.Expressions.ExistsExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L24"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitFromSql(Microsoft.Data.Entity.Query.Expressions.FromSqlExpression)",
            "id": "VisitFromSql_FromSqlExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitFromSql(FromSqlExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitFromSql(Microsoft.Data.Entity.Query.Expressions.FromSqlExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 18,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitFromSql(FromSqlExpression fromSqlExpression)",
              "content.vb": "Function VisitFromSql(fromSqlExpression As FromSqlExpression) As Expression",
              "parameters": [
                {
                  "id": "fromSqlExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.FromSqlExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.FromSqlExpression.yml",
                    "name": "FromSqlExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.FromSqlExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.FromSqlExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.FromSqlExpression\"/>",
                    "id": "FromSqlExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitFromSql(Microsoft.Data.Entity.Query.Expressions.FromSqlExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitFromSql(Microsoft.Data.Entity.Query.Expressions.FromSqlExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L19"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitIn(Microsoft.Data.Entity.Query.Expressions.InExpression)",
            "id": "VisitIn_InExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitIn(InExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitIn(Microsoft.Data.Entity.Query.Expressions.InExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 28,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitIn(InExpression inExpression)",
              "content.vb": "Function VisitIn(inExpression As InExpression) As Expression",
              "parameters": [
                {
                  "id": "inExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.InExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.InExpression.yml",
                    "name": "InExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.InExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.InExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.InExpression\"/>",
                    "id": "InExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitIn(Microsoft.Data.Entity.Query.Expressions.InExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitIn(Microsoft.Data.Entity.Query.Expressions.InExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L29"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitInnerJoin(Microsoft.Data.Entity.Query.Expressions.InnerJoinExpression)",
            "id": "VisitInnerJoin_InnerJoinExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitInnerJoin(InnerJoinExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitInnerJoin(Microsoft.Data.Entity.Query.Expressions.InnerJoinExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 21,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitInnerJoin(InnerJoinExpression innerJoinExpression)",
              "content.vb": "Function VisitInnerJoin(innerJoinExpression As InnerJoinExpression) As Expression",
              "parameters": [
                {
                  "id": "innerJoinExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.InnerJoinExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.InnerJoinExpression.yml",
                    "name": "InnerJoinExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.InnerJoinExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.InnerJoinExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.InnerJoinExpression\"/>",
                    "id": "InnerJoinExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitInnerJoin(Microsoft.Data.Entity.Query.Expressions.InnerJoinExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitInnerJoin(Microsoft.Data.Entity.Query.Expressions.InnerJoinExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L22"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitIsNull(Microsoft.Data.Entity.Query.Expressions.IsNullExpression)",
            "id": "VisitIsNull_IsNullExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitIsNull(IsNullExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitIsNull(Microsoft.Data.Entity.Query.Expressions.IsNullExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 13,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitIsNull(IsNullExpression isNullExpression)",
              "content.vb": "Function VisitIsNull(isNullExpression As IsNullExpression) As Expression",
              "parameters": [
                {
                  "id": "isNullExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.IsNullExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.IsNullExpression.yml",
                    "name": "IsNullExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.IsNullExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.IsNullExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.IsNullExpression\"/>",
                    "id": "IsNullExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitIsNull(Microsoft.Data.Entity.Query.Expressions.IsNullExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitIsNull(Microsoft.Data.Entity.Query.Expressions.IsNullExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L14"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitLateralJoin(Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression)",
            "id": "VisitLateralJoin_LateralJoinExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitLateralJoin(LateralJoinExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitLateralJoin(Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 20,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitLateralJoin(LateralJoinExpression lateralJoinExpression)",
              "content.vb": "Function VisitLateralJoin(lateralJoinExpression As LateralJoinExpression) As Expression",
              "parameters": [
                {
                  "id": "lateralJoinExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression.yml",
                    "name": "LateralJoinExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression\"/>",
                    "id": "LateralJoinExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitLateralJoin(Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitLateralJoin(Microsoft.Data.Entity.Query.Expressions.LateralJoinExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L21"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitLike(Microsoft.Data.Entity.Query.Expressions.LikeExpression)",
            "id": "VisitLike_LikeExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitLike(LikeExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitLike(Microsoft.Data.Entity.Query.Expressions.LikeExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 14,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitLike(LikeExpression likeExpression)",
              "content.vb": "Function VisitLike(likeExpression As LikeExpression) As Expression",
              "parameters": [
                {
                  "id": "likeExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.LikeExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.LikeExpression.yml",
                    "name": "LikeExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.LikeExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.LikeExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.LikeExpression\"/>",
                    "id": "LikeExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitLike(Microsoft.Data.Entity.Query.Expressions.LikeExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitLike(Microsoft.Data.Entity.Query.Expressions.LikeExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L15"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitLiteral(Microsoft.Data.Entity.Query.Expressions.LiteralExpression)",
            "id": "VisitLiteral_LiteralExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitLiteral(LiteralExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitLiteral(Microsoft.Data.Entity.Query.Expressions.LiteralExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 15,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitLiteral(LiteralExpression literalExpression)",
              "content.vb": "Function VisitLiteral(literalExpression As LiteralExpression) As Expression",
              "parameters": [
                {
                  "id": "literalExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.LiteralExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.LiteralExpression.yml",
                    "name": "LiteralExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.LiteralExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.LiteralExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.LiteralExpression\"/>",
                    "id": "LiteralExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitLiteral(Microsoft.Data.Entity.Query.Expressions.LiteralExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitLiteral(Microsoft.Data.Entity.Query.Expressions.LiteralExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L16"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitMax(Microsoft.Data.Entity.Query.Expressions.MaxExpression)",
            "id": "VisitMax_MaxExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitMax(MaxExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitMax(Microsoft.Data.Entity.Query.Expressions.MaxExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 27,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitMax(MaxExpression maxExpression)",
              "content.vb": "Function VisitMax(maxExpression As MaxExpression) As Expression",
              "parameters": [
                {
                  "id": "maxExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.MaxExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.MaxExpression.yml",
                    "name": "MaxExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.MaxExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.MaxExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.MaxExpression\"/>",
                    "id": "MaxExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitMax(Microsoft.Data.Entity.Query.Expressions.MaxExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitMax(Microsoft.Data.Entity.Query.Expressions.MaxExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L28"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitMin(Microsoft.Data.Entity.Query.Expressions.MinExpression)",
            "id": "VisitMin_MinExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitMin(MinExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitMin(Microsoft.Data.Entity.Query.Expressions.MinExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 26,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitMin(MinExpression minExpression)",
              "content.vb": "Function VisitMin(minExpression As MinExpression) As Expression",
              "parameters": [
                {
                  "id": "minExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.MinExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.MinExpression.yml",
                    "name": "MinExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.MinExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.MinExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.MinExpression\"/>",
                    "id": "MinExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitMin(Microsoft.Data.Entity.Query.Expressions.MinExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitMin(Microsoft.Data.Entity.Query.Expressions.MinExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L27"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitOuterJoin(Microsoft.Data.Entity.Query.Expressions.LeftOuterJoinExpression)",
            "id": "VisitOuterJoin_LeftOuterJoinExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitOuterJoin(LeftOuterJoinExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitOuterJoin(Microsoft.Data.Entity.Query.Expressions.LeftOuterJoinExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 22,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitOuterJoin(LeftOuterJoinExpression leftOuterJoinExpression)",
              "content.vb": "Function VisitOuterJoin(leftOuterJoinExpression As LeftOuterJoinExpression) As Expression",
              "parameters": [
                {
                  "id": "leftOuterJoinExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.LeftOuterJoinExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.LeftOuterJoinExpression.yml",
                    "name": "LeftOuterJoinExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.LeftOuterJoinExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.LeftOuterJoinExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.LeftOuterJoinExpression\"/>",
                    "id": "LeftOuterJoinExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitOuterJoin(Microsoft.Data.Entity.Query.Expressions.LeftOuterJoinExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitOuterJoin(Microsoft.Data.Entity.Query.Expressions.LeftOuterJoinExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L23"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitSelect(Microsoft.Data.Entity.Query.Expressions.SelectExpression)",
            "id": "VisitSelect_SelectExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitSelect(SelectExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitSelect(Microsoft.Data.Entity.Query.Expressions.SelectExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 16,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitSelect(SelectExpression selectExpression)",
              "content.vb": "Function VisitSelect(selectExpression As SelectExpression) As Expression",
              "parameters": [
                {
                  "id": "selectExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.SelectExpression",
                    "parent": "Microsoft.Data.Entity.Query.Expressions",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.SelectExpression.yml",
                    "name": "SelectExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.SelectExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.SelectExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.SelectExpression\"/>",
                    "id": "SelectExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitSelect(Microsoft.Data.Entity.Query.Expressions.SelectExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitSelect(Microsoft.Data.Entity.Query.Expressions.SelectExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L17"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitSqlFunction(Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression)",
            "id": "VisitSqlFunction_SqlFunctionExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitSqlFunction(SqlFunctionExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitSqlFunction(Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 29,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitSqlFunction(SqlFunctionExpression sqlFunctionExpression)",
              "content.vb": "Function VisitSqlFunction(sqlFunctionExpression As SqlFunctionExpression) As Expression",
              "parameters": [
                {
                  "id": "sqlFunctionExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression.yml",
                    "name": "SqlFunctionExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression\"/>",
                    "id": "SqlFunctionExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitSqlFunction(Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitSqlFunction(Microsoft.Data.Entity.Query.Expressions.SqlFunctionExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L30"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitStringCompare(Microsoft.Data.Entity.Query.Expressions.StringCompareExpression)",
            "id": "VisitStringCompare_StringCompareExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitStringCompare(StringCompareExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitStringCompare(Microsoft.Data.Entity.Query.Expressions.StringCompareExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 30,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitStringCompare(StringCompareExpression stringCompareExpression)",
              "content.vb": "Function VisitStringCompare(stringCompareExpression As StringCompareExpression) As Expression",
              "parameters": [
                {
                  "id": "stringCompareExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.StringCompareExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.StringCompareExpression.yml",
                    "name": "StringCompareExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.StringCompareExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.StringCompareExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.StringCompareExpression\"/>",
                    "id": "StringCompareExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitStringCompare(Microsoft.Data.Entity.Query.Expressions.StringCompareExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitStringCompare(Microsoft.Data.Entity.Query.Expressions.StringCompareExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L31"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitSum(Microsoft.Data.Entity.Query.Expressions.SumExpression)",
            "id": "VisitSum_SumExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitSum(SumExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitSum(Microsoft.Data.Entity.Query.Expressions.SumExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 25,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitSum(SumExpression sumExpression)",
              "content.vb": "Function VisitSum(sumExpression As SumExpression) As Expression",
              "parameters": [
                {
                  "id": "sumExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.SumExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.SumExpression.yml",
                    "name": "SumExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.SumExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.SumExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.SumExpression\"/>",
                    "id": "SumExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitSum(Microsoft.Data.Entity.Query.Expressions.SumExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitSum(Microsoft.Data.Entity.Query.Expressions.SumExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L26"
          },
          {
            "uid": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitTable(Microsoft.Data.Entity.Query.Expressions.TableExpression)",
            "id": "VisitTable_TableExpression_",
            "parent": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
            "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
            "name": "VisitTable(TableExpression)",
            "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitTable(Microsoft.Data.Entity.Query.Expressions.TableExpression)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
              "startLine": 17,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Query.Sql",
            "syntax": {
              "content": "Expression VisitTable(TableExpression tableExpression)",
              "content.vb": "Function VisitTable(tableExpression As TableExpression) As Expression",
              "parameters": [
                {
                  "id": "tableExpression",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Query.Expressions.TableExpression",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Query.Expressions.TableExpression.yml",
                    "name": "TableExpression",
                    "fullName": "Microsoft.Data.Entity.Query.Expressions.TableExpression",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Expressions.TableExpression\" name=\"Microsoft.Data.Entity.Query.Expressions.TableExpression\"/>",
                    "id": "TableExpression",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Linq.Expressions.Expression",
                  "parent": "System.Linq.Expressions",
                  "isExternal": true,
                  "name": "Expression",
                  "fullName": "System.Linq.Expressions.Expression",
                  "specName": "<xref href=\"System.Linq.Expressions.Expression\" name=\"System.Linq.Expressions.Expression\"/>",
                  "id": "Expression",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitTable(Microsoft.Data.Entity.Query.Expressions.TableExpression)\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.VisitTable(Microsoft.Data.Entity.Query.Expressions.TableExpression)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L18"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor.yml",
    "name": "ISqlExpressionVisitor",
    "fullName": "Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor",
    "type": "Interface",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs",
      "startLine": 9,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Relational"
    ],
    "namespace": "Microsoft.Data.Entity.Query.Sql",
    "syntax": {
      "content": "public interface ISqlExpressionVisitor",
      "content.vb": "Public Interface ISqlExpressionVisitor"
    },
    "specName": "<xref href=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor\" name=\"Microsoft.Data.Entity.Query.Sql.ISqlExpressionVisitor\"/>",
    "level": 0,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Query/Sql/ISqlExpressionVisitor.cs/#L10"
  },
  "isClass": true,
  "_allowToc": true
}
