
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
    "id": "ReferenceReferenceBuilder_TEntity__TRelatedEntity_",
    "parent": "Microsoft.Data.Entity.Metadata.Builders",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
            "id": "ReferenceReferenceBuilder_InternalRelationshipBuilder_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
            "name": "ReferenceReferenceBuilder(InternalRelationshipBuilder)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.ReferenceReferenceBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).ReferenceReferenceBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
              "startLine": 36,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<para>\nInitializes a new instance of the <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2\"></xref> class.\n</para>\n<para>\nInstances of this class are returned from methods when using the <xref href=\"Microsoft.Data.Entity.ModelBuilder\"></xref> API\nand it is not designed to be directly constructed in your application code.\n</para>",
            "syntax": {
              "content": "public ReferenceReferenceBuilder(InternalRelationshipBuilder builder)",
              "content.vb": "Public Sub New(builder As InternalRelationshipBuilder)",
              "parameters": [
                {
                  "id": "builder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder.yml",
                    "name": "InternalRelationshipBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\" name=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\"/>",
                    "id": "InternalRelationshipBuilder",
                    "level": 0
                  },
                  "description": "<p>The internal builder being used to configure this relationship.</p>\n"
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;.ReferenceReferenceBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs/#L37"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "id": "ReferenceReferenceBuilder_InternalRelationshipBuilder__ReferenceReferenceBuilder__Boolean__Boolean__Boolean__Boolean_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
            "name": "ReferenceReferenceBuilder(InternalRelationshipBuilder, ReferenceReferenceBuilder, Boolean, Boolean, Boolean, Boolean)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.ReferenceReferenceBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder, Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder, System.Boolean, System.Boolean, System.Boolean, System.Boolean)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).ReferenceReferenceBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder, Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder, System.Boolean, System.Boolean, System.Boolean, System.Boolean)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
              "startLine": 60,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<para>\nInitializes a new instance of the <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2\"></xref> class.\n</para>",
            "syntax": {
              "content": "protected ReferenceReferenceBuilder(InternalRelationshipBuilder builder, ReferenceReferenceBuilder oldBuilder, bool inverted = false, bool foreignKeySet = false, bool principalKeySet = false, bool requiredSet = false)",
              "content.vb": "Protected Sub New(builder As InternalRelationshipBuilder, oldBuilder As ReferenceReferenceBuilder, inverted As Boolean = False, foreignKeySet As Boolean = False, principalKeySet As Boolean = False, requiredSet As Boolean = False)",
              "parameters": [
                {
                  "id": "builder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Internal",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder.yml",
                    "name": "InternalRelationshipBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder",
                    "type": "class",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\" name=\"Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder\"/>",
                    "id": "InternalRelationshipBuilder",
                    "level": 0
                  },
                  "description": "<p>The internal builder being used to configure this relationship.</p>\n"
                },
                {
                  "id": "oldBuilder",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder",
                    "parent": "Microsoft.Data.Entity.Metadata.Builders",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.yml",
                    "name": "ReferenceReferenceBuilder",
                    "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder",
                    "type": "class",
                    "summary": "<para>\nProvides a simple API for configuring a one-to-one relationship.\n</para>\n<para>\nIf multiple reference key properties are specified, the order of reference key properties should\nmatch the order that the primary key or unique index properties were configured on the principal\nentity type.\n</para>",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder\"/>",
                    "id": "ReferenceReferenceBuilder",
                    "level": 0
                  },
                  "description": "<p>A builder to copy configuration from.</p>\n"
                },
                {
                  "id": "inverted",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether to reverse the direction of the relationship.</p>\n"
                },
                {
                  "id": "foreignKeySet",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether the foreign key properties have been configured in this chain of configuration calls.</p>\n"
                },
                {
                  "id": "principalKeySet",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether the principal key properties have been configured in this chain of configuration calls.</p>\n"
                },
                {
                  "id": "requiredSet",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether required/optional has been configured in this chain of configuration calls.</p>\n"
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;.ReferenceReferenceBuilder(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder, Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder, System.Boolean, System.Boolean, System.Boolean, System.Boolean)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs/#L61"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)",
            "id": "HasAnnotation_String__Object_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
            "name": "HasAnnotation(String, Object)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasAnnotation(System.String, System.Object)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasAnnotation(System.String, System.Object)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
              "startLine": 77,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Adds or updates an annotation on the relationship. If an annotation with the key specified in</p>\n<p><paramref name=\"annotation\"></paramref> already exists it&#39;s value will be updated.</p>\n",
            "syntax": {
              "content": "public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasAnnotation(string annotation, object value)",
              "content.vb": "Public Overridable Function HasAnnotation(annotation As String, value As Object) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
              "parameters": [
                {
                  "id": "annotation",
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  },
                  "description": "<p>The key of the annotation to be added or updated.</p>\n"
                },
                {
                  "id": "value",
                  "type": {
                    "uid": "System.Object",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Object",
                    "fullName": "System.Object",
                    "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
                    "id": "Object",
                    "level": 0
                  },
                  "description": "<p>The value to be stored in the annotation.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
                  "id": "ReferenceReferenceBuilder_TEntity__TRelatedEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
                  "name": "ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "name.vb": "ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                    "startLine": 22,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-one relationship.\n</para>\n<para>\nIf multiple reference key properties are specified, the order of reference key properties should\nmatch the order that the primary key or unique index properties were configured on the principal\nentity type.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceReferenceBuilder<TEntity, TRelatedEntity> : ReferenceReferenceBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TEntity : class where TRelatedEntity : class",
                    "content.vb": "Public Class ReferenceReferenceBuilder(Of TEntity As Class, TRelatedEntity As Class) Inherits ReferenceReferenceBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TEntity"
                      },
                      {
                        "id": "TRelatedEntity"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;.HasAnnotation(System.String, System.Object)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs/#L78"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])",
            "id": "HasForeignKey_String__String___",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
            "name": "HasForeignKey(String, String[])",
            "name.vb": "HasForeignKey(String, String())",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasForeignKey(System.String, System.String[])",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasForeignKey(System.String, System.String())",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
              "startLine": 174,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<para>\nConfigures the property(s) to use as the foreign key for this relationship.\n</para>\n<para>\nIf the specified property name(s) do not exist on the entity type then a new shadow state\nproperty(s) will be added to serve as the foreign key. A shadow state property is one\nthat does not have a corresponding property in the entity class. The current value for the\nproperty is stored in the <xref href=\"Microsoft.Data.Entity.ChangeTracking.ChangeTracker\"></xref> rather than being stored in instances\nof the entity class.\n</para>\n<para>\nIf <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])\"></xref> is not specified, then an attempt will be made to\nmatch the data type and order of foreign key properties against the primary key of the principal\nentity type. If they do not match, new shadow state properties that form a unique index will be\nadded to the principal entity type to serve as the reference key.\n</para>",
            "syntax": {
              "content": "public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasForeignKey(string dependentEntityTypeName, params string[] foreignKeyPropertyNames)",
              "content.vb": "Public Overridable Function HasForeignKey(dependentEntityTypeName As String, ParamArray foreignKeyPropertyNames As String()) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
              "parameters": [
                {
                  "id": "dependentEntityTypeName",
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  },
                  "description": "<p>The name of entity type that is the dependent in this relationship (the type that has the foreign key\nproperties).</p>\n"
                },
                {
                  "id": "foreignKeyPropertyNames",
                  "type": {
                    "uid": "System.String[]",
                    "isExternal": true,
                    "name": "String[]",
                    "name.vb": "String()",
                    "fullName": "System.String[]",
                    "fullName.vb": "System.String()",
                    "spec.csharp": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "[]",
                        "fullName": "[]",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "()",
                        "fullName": "()",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>[]",
                    "id": "String__",
                    "level": 0
                  },
                  "description": "<p>The name(s) of the foreign key property(s).</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
                  "id": "ReferenceReferenceBuilder_TEntity__TRelatedEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
                  "name": "ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "name.vb": "ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                    "startLine": 22,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-one relationship.\n</para>\n<para>\nIf multiple reference key properties are specified, the order of reference key properties should\nmatch the order that the primary key or unique index properties were configured on the principal\nentity type.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceReferenceBuilder<TEntity, TRelatedEntity> : ReferenceReferenceBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TEntity : class where TRelatedEntity : class",
                    "content.vb": "Public Class ReferenceReferenceBuilder(Of TEntity As Class, TRelatedEntity As Class) Inherits ReferenceReferenceBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TEntity"
                      },
                      {
                        "id": "TRelatedEntity"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;.HasForeignKey(System.String, System.String[])\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs/#L175"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])",
            "id": "HasForeignKey_Type__String___",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
            "name": "HasForeignKey(Type, String[])",
            "name.vb": "HasForeignKey(Type, String())",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasForeignKey(System.Type, System.String[])",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasForeignKey(System.Type, System.String())",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
              "startLine": 106,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<para>\nConfigures the property(s) to use as the foreign key for this relationship.\n</para>\n<para>\nIf the specified property name(s) do not exist on the entity type then a new shadow state\nproperty(s) will be added to serve as the foreign key. A shadow state property is one\nthat does not have a corresponding property in the entity class. The current value for the\nproperty is stored in the <xref href=\"Microsoft.Data.Entity.ChangeTracking.ChangeTracker\"></xref> rather than being stored in instances\nof the entity class.\n</para>\n<para>\nIf <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])\"></xref> is not specified, then an attempt will be made to\nmatch the data type and order of foreign key properties against the primary key of the principal\nentity type. If they do not match, new shadow state properties that form a unique index will be\nadded to the principal entity type to serve as the reference key.\n</para>",
            "syntax": {
              "content": "public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasForeignKey(Type dependentEntityType, params string[] foreignKeyPropertyNames)",
              "content.vb": "Public Overridable Function HasForeignKey(dependentEntityType As Type, ParamArray foreignKeyPropertyNames As String()) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
              "parameters": [
                {
                  "id": "dependentEntityType",
                  "type": {
                    "uid": "System.Type",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Type",
                    "fullName": "System.Type",
                    "specName": "<xref href=\"System.Type\" name=\"System.Type\"/>",
                    "id": "Type",
                    "level": 0
                  },
                  "description": "<p>The entity type that is the dependent in this relationship (the type that has the foreign key\nproperties).</p>\n"
                },
                {
                  "id": "foreignKeyPropertyNames",
                  "type": {
                    "uid": "System.String[]",
                    "isExternal": true,
                    "name": "String[]",
                    "name.vb": "String()",
                    "fullName": "System.String[]",
                    "fullName.vb": "System.String()",
                    "spec.csharp": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "[]",
                        "fullName": "[]",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "()",
                        "fullName": "()",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>[]",
                    "id": "String__",
                    "level": 0
                  },
                  "description": "<p>The name(s) of the foreign key property(s).</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
                  "id": "ReferenceReferenceBuilder_TEntity__TRelatedEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
                  "name": "ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "name.vb": "ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                    "startLine": 22,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-one relationship.\n</para>\n<para>\nIf multiple reference key properties are specified, the order of reference key properties should\nmatch the order that the primary key or unique index properties were configured on the principal\nentity type.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceReferenceBuilder<TEntity, TRelatedEntity> : ReferenceReferenceBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TEntity : class where TRelatedEntity : class",
                    "content.vb": "Public Class ReferenceReferenceBuilder(Of TEntity As Class, TRelatedEntity As Class) Inherits ReferenceReferenceBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TEntity"
                      },
                      {
                        "id": "TRelatedEntity"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;.HasForeignKey(System.Type, System.String[])\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs/#L107"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
            "id": "HasForeignKey_TDependentEntity__Expression_Func_TDependentEntity__Object___",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
            "name": "HasForeignKey<TDependentEntity>(Expression<Func<TDependentEntity, Object>>)",
            "name.vb": "HasForeignKey(Of TDependentEntity)(Expression(Of Func(Of TDependentEntity, Object)))",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasForeignKey<TDependentEntity>(System.Linq.Expressions.Expression<System.Func<TDependentEntity, System.Object>>)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasForeignKey(Of TDependentEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TDependentEntity, System.Object)))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
              "startLine": 247,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<para>\nConfigures the property(s) to use as the foreign key for this relationship.\n</para>\n<para>\nIf <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\"></xref>\nis not specified, then an attempt will be made to match the data type and order of foreign key\nproperties against the primary key of the principal entity type. If they do not match, new shadow\nstate properties that form a unique index will be\nadded to the principal entity type to serve as the reference key.\nA shadow state property is one that does not have a corresponding property in the entity class. The\ncurrent value for the property is stored in the <xref href=\"Microsoft.Data.Entity.ChangeTracking.ChangeTracker\"></xref> rather than being\nstored in instances of the entity class.\n</para>",
            "syntax": {
              "content": "public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasForeignKey<TDependentEntity>(Expression<Func<TDependentEntity, object>> foreignKeyExpression)",
              "content.vb": "Public Overridable Function HasForeignKey(Of TDependentEntity)(foreignKeyExpression As Expression(Of Func(Of TDependentEntity, Object))) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
              "parameters": [
                {
                  "id": "foreignKeyExpression",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression{System.Func{{TDependentEntity},System.Object}}",
                    "parent": "System.Linq.Expressions",
                    "definition": "System.Linq.Expressions.Expression`1",
                    "name": "Expression<Func<TDependentEntity, Object>>",
                    "name.vb": "Expression(Of Func(Of TDependentEntity, Object))",
                    "fullName": "System.Linq.Expressions.Expression<System.Func<TDependentEntity, System.Object>>",
                    "fullName.vb": "System.Linq.Expressions.Expression(Of System.Func(Of TDependentEntity, System.Object))",
                    "spec.csharp": [
                      {
                        "uid": "System.Linq.Expressions.Expression`1",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Func`2",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "TDependentEntity",
                        "fullName": "TDependentEntity",
                        "isExternal": false
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Linq.Expressions.Expression`1",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Func`2",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "TDependentEntity",
                        "fullName": "TDependentEntity",
                        "isExternal": false
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Linq.Expressions.Expression`1\" name=\"System.Linq.Expressions.Expression\"/>&lt;<xref href=\"System.Func`2\" name=\"System.Func\"/>&lt;TDependentEntity, <xref href=\"System.Object\" name=\"System.Object\"/>&gt;&gt;",
                    "id": "Expression_Func_TDependentEntity__Object__",
                    "level": 0
                  },
                  "description": "<para>\nA lambda expression representing the foreign key property(s) (<c>t =&gt; t.Id1</c>).\n</para>\n<para>\nIf the foreign key is made up of multiple properties then specify an anonymous type including the\nproperties (<c>t =&gt; new { t.Id1, t.Id2 }</c>). The order specified should match the order of\ncorresponding keys in <xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\"></xref>.\n</para>"
                }
              ],
              "typeParameters": [
                {
                  "id": "TDependentEntity",
                  "description": "The entity type that is the dependent in this relationship. That is, the type\nthat has the foreign key properties."
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
                  "id": "ReferenceReferenceBuilder_TEntity__TRelatedEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
                  "name": "ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "name.vb": "ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                    "startLine": 22,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-one relationship.\n</para>\n<para>\nIf multiple reference key properties are specified, the order of reference key properties should\nmatch the order that the primary key or unique index properties were configured on the principal\nentity type.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceReferenceBuilder<TEntity, TRelatedEntity> : ReferenceReferenceBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TEntity : class where TRelatedEntity : class",
                    "content.vb": "Public Class ReferenceReferenceBuilder(Of TEntity As Class, TRelatedEntity As Class) Inherits ReferenceReferenceBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TEntity"
                      },
                      {
                        "id": "TRelatedEntity"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;.HasForeignKey&lt;TDependentEntity&gt;(System.Linq.Expressions.Expression&lt;System.Func&lt;TDependentEntity, System.Object&gt;&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs/#L248"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])",
            "id": "HasPrincipalKey_String__String___",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
            "name": "HasPrincipalKey(String, String[])",
            "name.vb": "HasPrincipalKey(String, String())",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasPrincipalKey(System.String, System.String[])",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(System.String, System.String())",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
              "startLine": 202,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures the unique property(s) that this relationship targets. Typically you would only call this\nmethod if you want to use a property(s) other than the primary key as the principal property(s). If\nthe specified property(s) is not already a unique constraint (or the primary key) then a new unique\nconstraint\nwill be introduced.</p>\n",
            "syntax": {
              "content": "public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasPrincipalKey(string principalEntityTypeName, params string[] keyPropertyNames)",
              "content.vb": "Public Overridable Function HasPrincipalKey(principalEntityTypeName As String, ParamArray keyPropertyNames As String()) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
              "parameters": [
                {
                  "id": "principalEntityTypeName",
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  },
                  "description": "<p>The name of entity type that is the principal in this relationship (the type\nthat has the reference key properties).</p>\n"
                },
                {
                  "id": "keyPropertyNames",
                  "type": {
                    "uid": "System.String[]",
                    "isExternal": true,
                    "name": "String[]",
                    "name.vb": "String()",
                    "fullName": "System.String[]",
                    "fullName.vb": "System.String()",
                    "spec.csharp": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "[]",
                        "fullName": "[]",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "()",
                        "fullName": "()",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>[]",
                    "id": "String__",
                    "level": 0
                  },
                  "description": "<p>The name(s) of the reference key property(s).</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
                  "id": "ReferenceReferenceBuilder_TEntity__TRelatedEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
                  "name": "ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "name.vb": "ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                    "startLine": 22,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-one relationship.\n</para>\n<para>\nIf multiple reference key properties are specified, the order of reference key properties should\nmatch the order that the primary key or unique index properties were configured on the principal\nentity type.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceReferenceBuilder<TEntity, TRelatedEntity> : ReferenceReferenceBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TEntity : class where TRelatedEntity : class",
                    "content.vb": "Public Class ReferenceReferenceBuilder(Of TEntity As Class, TRelatedEntity As Class) Inherits ReferenceReferenceBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TEntity"
                      },
                      {
                        "id": "TRelatedEntity"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;.HasPrincipalKey(System.String, System.String[])\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs/#L203"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])",
            "id": "HasPrincipalKey_Type__String___",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
            "name": "HasPrincipalKey(Type, String[])",
            "name.vb": "HasPrincipalKey(Type, String())",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasPrincipalKey(System.Type, System.String[])",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(System.Type, System.String())",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
              "startLine": 133,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures the unique property(s) that this relationship targets. Typically you would only call this\nmethod if you want to use a property(s) other than the primary key as the principal property(s). If\nthe specified property(s) is not already a unique constraint (or the primary key) then a new unique\nconstraint will be introduced.</p>\n",
            "syntax": {
              "content": "public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasPrincipalKey(Type principalEntityType, params string[] keyPropertyNames)",
              "content.vb": "Public Overridable Function HasPrincipalKey(principalEntityType As Type, ParamArray keyPropertyNames As String()) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
              "parameters": [
                {
                  "id": "principalEntityType",
                  "type": {
                    "uid": "System.Type",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Type",
                    "fullName": "System.Type",
                    "specName": "<xref href=\"System.Type\" name=\"System.Type\"/>",
                    "id": "Type",
                    "level": 0
                  },
                  "description": "<p>The entity type that is the principal in this relationship (the type\nthat has the reference key properties).</p>\n"
                },
                {
                  "id": "keyPropertyNames",
                  "type": {
                    "uid": "System.String[]",
                    "isExternal": true,
                    "name": "String[]",
                    "name.vb": "String()",
                    "fullName": "System.String[]",
                    "fullName.vb": "System.String()",
                    "spec.csharp": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "[]",
                        "fullName": "[]",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.String",
                        "name": "String",
                        "fullName": "System.String",
                        "isExternal": true
                      },
                      {
                        "name": "()",
                        "fullName": "()",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>[]",
                    "id": "String__",
                    "level": 0
                  },
                  "description": "<p>The name(s) of the reference key property(s).</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
                  "id": "ReferenceReferenceBuilder_TEntity__TRelatedEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
                  "name": "ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "name.vb": "ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                    "startLine": 22,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-one relationship.\n</para>\n<para>\nIf multiple reference key properties are specified, the order of reference key properties should\nmatch the order that the primary key or unique index properties were configured on the principal\nentity type.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceReferenceBuilder<TEntity, TRelatedEntity> : ReferenceReferenceBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TEntity : class where TRelatedEntity : class",
                    "content.vb": "Public Class ReferenceReferenceBuilder(Of TEntity As Class, TRelatedEntity As Class) Inherits ReferenceReferenceBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TEntity"
                      },
                      {
                        "id": "TRelatedEntity"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;.HasPrincipalKey(System.Type, System.String[])\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs/#L134"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
            "id": "HasPrincipalKey_TPrincipalEntity__Expression_Func_TPrincipalEntity__Object___",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
            "name": "HasPrincipalKey<TPrincipalEntity>(Expression<Func<TPrincipalEntity, Object>>)",
            "name.vb": "HasPrincipalKey(Of TPrincipalEntity)(Expression(Of Func(Of TPrincipalEntity, Object)))",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasPrincipalKey<TPrincipalEntity>(System.Linq.Expressions.Expression<System.Func<TPrincipalEntity, System.Object>>)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(Of TPrincipalEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TPrincipalEntity, System.Object)))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
              "startLine": 280,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures the unique property(s) that this relationship targets. Typically you would only call this\nmethod if you want to use a property(s) other than the primary key as the principal property(s). If\nthe specified property(s) is not already a unique constraint (or the primary key) then a new unique\nconstraint will be introduced.</p>\n",
            "syntax": {
              "content": "public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasPrincipalKey<TPrincipalEntity>(Expression<Func<TPrincipalEntity, object>> keyExpression)",
              "content.vb": "Public Overridable Function HasPrincipalKey(Of TPrincipalEntity)(keyExpression As Expression(Of Func(Of TPrincipalEntity, Object))) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
              "parameters": [
                {
                  "id": "keyExpression",
                  "type": {
                    "uid": "System.Linq.Expressions.Expression{System.Func{{TPrincipalEntity},System.Object}}",
                    "parent": "System.Linq.Expressions",
                    "definition": "System.Linq.Expressions.Expression`1",
                    "name": "Expression<Func<TPrincipalEntity, Object>>",
                    "name.vb": "Expression(Of Func(Of TPrincipalEntity, Object))",
                    "fullName": "System.Linq.Expressions.Expression<System.Func<TPrincipalEntity, System.Object>>",
                    "fullName.vb": "System.Linq.Expressions.Expression(Of System.Func(Of TPrincipalEntity, System.Object))",
                    "spec.csharp": [
                      {
                        "uid": "System.Linq.Expressions.Expression`1",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Func`2",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "name": "TPrincipalEntity",
                        "fullName": "TPrincipalEntity",
                        "isExternal": false
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Linq.Expressions.Expression`1",
                        "name": "Expression",
                        "fullName": "System.Linq.Expressions.Expression",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Func`2",
                        "name": "Func",
                        "fullName": "System.Func",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "name": "TPrincipalEntity",
                        "fullName": "TPrincipalEntity",
                        "isExternal": false
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Object",
                        "name": "Object",
                        "fullName": "System.Object",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Linq.Expressions.Expression`1\" name=\"System.Linq.Expressions.Expression\"/>&lt;<xref href=\"System.Func`2\" name=\"System.Func\"/>&lt;TPrincipalEntity, <xref href=\"System.Object\" name=\"System.Object\"/>&gt;&gt;",
                    "id": "Expression_Func_TPrincipalEntity__Object__",
                    "level": 0
                  },
                  "description": "<para>\nA lambda expression representing the reference key property(s) (<c>t =&gt; t.Id</c>).\n</para>\n<para>\nIf the principal key is made up of multiple properties then specify an anonymous type including\nthe properties (<c>t =&gt; new { t.Id1, t.Id2 }</c>).\n</para>"
                }
              ],
              "typeParameters": [
                {
                  "id": "TPrincipalEntity",
                  "description": "The entity type that is the principal in this relationship. That is, the type\nthat has the reference key properties."
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
                  "id": "ReferenceReferenceBuilder_TEntity__TRelatedEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
                  "name": "ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "name.vb": "ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                    "startLine": 22,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-one relationship.\n</para>\n<para>\nIf multiple reference key properties are specified, the order of reference key properties should\nmatch the order that the primary key or unique index properties were configured on the principal\nentity type.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceReferenceBuilder<TEntity, TRelatedEntity> : ReferenceReferenceBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TEntity : class where TRelatedEntity : class",
                    "content.vb": "Public Class ReferenceReferenceBuilder(Of TEntity As Class, TRelatedEntity As Class) Inherits ReferenceReferenceBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TEntity"
                      },
                      {
                        "id": "TRelatedEntity"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;.HasPrincipalKey&lt;TPrincipalEntity&gt;(System.Linq.Expressions.Expression&lt;System.Func&lt;TPrincipalEntity, System.Object&gt;&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs/#L281"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)",
            "id": "IsRequired_Boolean_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
            "name": "IsRequired(Boolean)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.IsRequired(System.Boolean)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).IsRequired(System.Boolean)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
              "startLine": 299,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures whether this is a required relationship (i.e. whether the foreign key property(s) can\nbe assigned null).</p>\n",
            "syntax": {
              "content": "public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> IsRequired(bool required = true)",
              "content.vb": "Public Overridable Function IsRequired(required As Boolean = True) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
              "parameters": [
                {
                  "id": "required",
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  },
                  "description": "<p>A value indicating whether this is a required relationship.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
                  "id": "ReferenceReferenceBuilder_TEntity__TRelatedEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
                  "name": "ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "name.vb": "ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                    "startLine": 22,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-one relationship.\n</para>\n<para>\nIf multiple reference key properties are specified, the order of reference key properties should\nmatch the order that the primary key or unique index properties were configured on the principal\nentity type.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceReferenceBuilder<TEntity, TRelatedEntity> : ReferenceReferenceBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TEntity : class where TRelatedEntity : class",
                    "content.vb": "Public Class ReferenceReferenceBuilder(Of TEntity As Class, TRelatedEntity As Class) Inherits ReferenceReferenceBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TEntity"
                      },
                      {
                        "id": "TRelatedEntity"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;.IsRequired(System.Boolean)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs/#L300"
          },
          {
            "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)",
            "id": "OnDelete_DeleteBehavior_",
            "parent": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
            "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
            "name": "OnDelete(DeleteBehavior)",
            "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)",
            "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
              "startLine": 311,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Metadata.Builders",
            "summary": "<p>Configures how a delete operation is applied to dependent entities in the relationship when the\nprincipal is deleted or the relationship is severed.</p>\n",
            "syntax": {
              "content": "public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> OnDelete(DeleteBehavior deleteBehavior)",
              "content.vb": "Public Overridable Function OnDelete(deleteBehavior As DeleteBehavior) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
              "parameters": [
                {
                  "id": "deleteBehavior",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.DeleteBehavior",
                    "parent": "Microsoft.Data.Entity.Metadata",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.DeleteBehavior.yml",
                    "name": "DeleteBehavior",
                    "fullName": "Microsoft.Data.Entity.Metadata.DeleteBehavior",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.DeleteBehavior\" name=\"Microsoft.Data.Entity.Metadata.DeleteBehavior\"/>",
                    "id": "DeleteBehavior",
                    "level": 0
                  },
                  "description": "<p>The action to perform.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2",
                  "id": "ReferenceReferenceBuilder_TEntity__TRelatedEntity_",
                  "parent": "Microsoft.Data.Entity.Metadata.Builders",
                  "children": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder,Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)"
                  ],
                  "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
                  "name": "ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "name.vb": "ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
                  "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
                    "startLine": 22,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Metadata.Builders",
                  "summary": "<para>\nProvides a simple API for configuring a one-to-one relationship.\n</para>\n<para>\nIf multiple reference key properties are specified, the order of reference key properties should\nmatch the order that the primary key or unique index properties were configured on the principal\nentity type.\n</para>",
                  "syntax": {
                    "content": "public class ReferenceReferenceBuilder<TEntity, TRelatedEntity> : ReferenceReferenceBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TEntity : class where TRelatedEntity : class",
                    "content.vb": "Public Class ReferenceReferenceBuilder(Of TEntity As Class, TRelatedEntity As Class) Inherits ReferenceReferenceBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
                    "typeParameters": [
                      {
                        "id": "TEntity"
                      },
                      {
                        "id": "TRelatedEntity"
                      }
                    ]
                  },
                  "inheritance": [
                    "System.Object",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
                  ],
                  "inheritedMembers": [
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Builder",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Metadata",
                    "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;\"/>",
                  "level": 2
                },
                "description": "<p>The same builder instance so that multiple configuration calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;.OnDelete(Microsoft.Data.Entity.Metadata.DeleteBehavior)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs/#L312"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2.yml",
    "name": "ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
    "name.vb": "ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
    "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>",
    "fullName.vb": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs",
      "startLine": 22,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Metadata.Builders",
    "summary": "<para>\nProvides a simple API for configuring a one-to-one relationship.\n</para>\n<para>\nIf multiple reference key properties are specified, the order of reference key properties should\nmatch the order that the primary key or unique index properties were configured on the principal\nentity type.\n</para>",
    "syntax": {
      "content": "public class ReferenceReferenceBuilder<TEntity, TRelatedEntity> : ReferenceReferenceBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TEntity : class where TRelatedEntity : class",
      "content.vb": "Public Class ReferenceReferenceBuilder(Of TEntity As Class, TRelatedEntity As Class) Inherits ReferenceReferenceBuilder Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)",
      "typeParameters": [
        {
          "id": "TEntity"
        },
        {
          "id": "TRelatedEntity"
        }
      ]
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      },
      {
        "uid": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder",
        "parent": "Microsoft.Data.Entity.Metadata.Builders",
        "isExternal": false,
        "href": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.yml",
        "name": "ReferenceReferenceBuilder",
        "fullName": "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder",
        "type": "class",
        "summary": "<para>\nProvides a simple API for configuring a one-to-one relationship.\n</para>\n<para>\nIf multiple reference key properties are specified, the order of reference key properties should\nmatch the order that the primary key or unique index properties were configured on the principal\nentity type.\n</para>",
        "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder\"/>",
        "id": "ReferenceReferenceBuilder",
        "level": 0,
        "index": 1
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.IMutableModel}",
      "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Data.Entity.Metadata.Internal.InternalRelationshipBuilder}"
    ],
    "inheritedMembers": [
      "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Builder",
      "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#Internal#InternalRelationshipBuilder}#Instance",
      "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Metadata",
      "Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Data#Entity#Metadata#IMutableModel}#Instance",
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder`2\" name=\"Microsoft.Data.Entity.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt;\"/>",
    "level": 2,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Metadata/Builders/ReferenceReferenceBuilder`.cs/#L23"
  },
  "isClass": true,
  "_allowToc": true
}
