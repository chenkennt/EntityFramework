
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Infrastructure.DbContextOptions",
    "id": "DbContextOptions",
    "parent": "Microsoft.Data.Entity.Infrastructure",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension})",
            "id": "DbContextOptions_IReadOnlyDictionary_Type__IDbContextOptionsExtension__",
            "parent": "Microsoft.Data.Entity.Infrastructure.DbContextOptions",
            "href": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.yml",
            "name": "DbContextOptions(IReadOnlyDictionary<Type, IDbContextOptionsExtension>)",
            "name.vb": "DbContextOptions(IReadOnlyDictionary(Of Type, IDbContextOptionsExtension))",
            "fullName": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.DbContextOptions(System.Collections.Generic.IReadOnlyDictionary<System.Type, Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension>)",
            "fullName.vb": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.DbContextOptions(System.Collections.Generic.IReadOnlyDictionary(Of System.Type, Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension))",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
              "startLine": 24,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<p>Initializes a new instance of the <xref href=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions\"></xref> class. You normally override\n<xref href=\"Microsoft.Data.Entity.DbContext.OnConfiguring(Microsoft.Data.Entity.DbContextOptionsBuilder)\"></xref> or use a <xref href=\"Microsoft.Data.Entity.DbContextOptionsBuilder\"></xref>\nto create instances of this class and it is not designed to be directly constructed in your application code.</p>\n",
            "syntax": {
              "content": "protected DbContextOptions(IReadOnlyDictionary<Type, IDbContextOptionsExtension> extensions)",
              "content.vb": "Protected Sub New(extensions As IReadOnlyDictionary(Of Type, IDbContextOptionsExtension))",
              "parameters": [
                {
                  "id": "extensions",
                  "type": {
                    "uid": "System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
                    "href": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension.yml",
                    "name": "IReadOnlyDictionary<Type, IDbContextOptionsExtension>",
                    "name.vb": "IReadOnlyDictionary(Of Type, IDbContextOptionsExtension)",
                    "fullName": "System.Collections.Generic.IReadOnlyDictionary<System.Type, Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension>",
                    "fullName.vb": "System.Collections.Generic.IReadOnlyDictionary(Of System.Type, Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyDictionary`2",
                        "name": "IReadOnlyDictionary",
                        "fullName": "System.Collections.Generic.IReadOnlyDictionary",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Type",
                        "name": "Type",
                        "fullName": "System.Type",
                        "isExternal": true
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension",
                        "name": "IDbContextOptionsExtension",
                        "fullName": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension.yml"
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IReadOnlyDictionary`2",
                        "name": "IReadOnlyDictionary",
                        "fullName": "System.Collections.Generic.IReadOnlyDictionary",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Type",
                        "name": "Type",
                        "fullName": "System.Type",
                        "isExternal": true
                      },
                      {
                        "name": ", ",
                        "fullName": ", ",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension",
                        "name": "IDbContextOptionsExtension",
                        "fullName": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension.yml"
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IReadOnlyDictionary`2\" name=\"System.Collections.Generic.IReadOnlyDictionary\"/>&lt;<xref href=\"System.Type\" name=\"System.Type\"/>, <xref href=\"Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension\" name=\"Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension\"/>&gt;",
                    "id": "IReadOnlyDictionary_Type__IDbContextOptionsExtension_",
                    "level": 0
                  },
                  "description": "<p>The extensions that store the configured options.</p>\n"
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension})\" name=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions.DbContextOptions(System.Collections.Generic.IReadOnlyDictionary&lt;System.Type, Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/DbContextOptions.cs/#L25"
          }
        ]
      },
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.Extensions",
            "id": "Extensions",
            "parent": "Microsoft.Data.Entity.Infrastructure.DbContextOptions",
            "href": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.yml",
            "name": "Extensions",
            "fullName": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.Extensions",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
              "startLine": 35,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<p>Gets the extensions that store the configured options.</p>\n",
            "syntax": {
                "content": "public virtual IEnumerable<IDbContextOptionsExtension> Extensions { get; }",
                "content.vb": "Public Overridable ReadOnly Property Extensions As IEnumerable(Of IDbContextOptionsExtension)",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Collections.Generic.IEnumerable{Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension}",
                    "parent": "System.Collections.Generic",
                    "definition": "System.Collections.Generic.IEnumerable`1",
                    "href": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension.yml",
                    "name": "IEnumerable<IDbContextOptionsExtension>",
                    "name.vb": "IEnumerable(Of IDbContextOptionsExtension)",
                    "fullName": "System.Collections.Generic.IEnumerable<Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension>",
                    "fullName.vb": "System.Collections.Generic.IEnumerable(Of Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension)",
                    "spec.csharp": [
                      {
                        "uid": "System.Collections.Generic.IEnumerable`1",
                        "name": "IEnumerable",
                        "fullName": "System.Collections.Generic.IEnumerable",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension",
                        "name": "IDbContextOptionsExtension",
                        "fullName": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension.yml"
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Collections.Generic.IEnumerable`1",
                        "name": "IEnumerable",
                        "fullName": "System.Collections.Generic.IEnumerable",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension",
                        "name": "IDbContextOptionsExtension",
                        "fullName": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension.yml"
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Collections.Generic.IEnumerable`1\" name=\"System.Collections.Generic.IEnumerable\"/>&lt;<xref href=\"Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension\" name=\"Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension\"/>&gt;",
                    "id": "IEnumerable_IDbContextOptionsExtension_",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions.Extensions\" name=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions.Extensions\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/DbContextOptions.cs/#L36"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.FindExtension``1",
            "id": "FindExtension_TExtension___",
            "parent": "Microsoft.Data.Entity.Infrastructure.DbContextOptions",
            "href": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.yml",
            "name": "FindExtension<TExtension>()",
            "name.vb": "FindExtension(Of TExtension)()",
            "fullName": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.FindExtension<TExtension>()",
            "fullName.vb": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.FindExtension(Of TExtension)()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
              "startLine": 42,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<p>Gets the extension of the specified type. Returns null if no extension of the specified type is configured.</p>\n",
            "syntax": {
              "content": "public virtual TExtension FindExtension<TExtension>()where TExtension : class, IDbContextOptionsExtension",
              "content.vb": "Public Overridable Function FindExtension(Of TExtension As {Class, IDbContextOptionsExtension}) As TExtension",
              "typeParameters": [
                {
                  "id": "TExtension",
                  "description": "The type of the extension to get."
                }
              ],
              "return": {
                "type": {
                  "uid": "{TExtension}",
                  "isExternal": false,
                  "name": "TExtension",
                  "fullName": "TExtension",
                  "specName": "<xref href=\"{TExtension}\" name=\"TExtension\"/>",
                  "id": "TExtension",
                  "level": 0
                },
                "description": "<p>The extension, or null if none was found.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions.FindExtension``1\" name=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions.FindExtension&lt;TExtension&gt;()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/DbContextOptions.cs/#L43"
          },
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.GetExtension``1",
            "id": "GetExtension_TExtension___",
            "parent": "Microsoft.Data.Entity.Infrastructure.DbContextOptions",
            "href": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.yml",
            "name": "GetExtension<TExtension>()",
            "name.vb": "GetExtension(Of TExtension)()",
            "fullName": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.GetExtension<TExtension>()",
            "fullName.vb": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.GetExtension(Of TExtension)()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
              "startLine": 54,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<p>Gets the extension of the specified type. Throws if no extension of the specified type is configured.</p>\n",
            "syntax": {
              "content": "public virtual TExtension GetExtension<TExtension>()where TExtension : class, IDbContextOptionsExtension",
              "content.vb": "Public Overridable Function GetExtension(Of TExtension As {Class, IDbContextOptionsExtension}) As TExtension",
              "typeParameters": [
                {
                  "id": "TExtension",
                  "description": "The type of the extension to get."
                }
              ],
              "return": {
                "type": {
                  "uid": "{TExtension}",
                  "isExternal": false,
                  "name": "TExtension",
                  "fullName": "TExtension",
                  "specName": "<xref href=\"{TExtension}\" name=\"TExtension\"/>",
                  "id": "TExtension",
                  "level": 0
                },
                "description": "<p>The extension.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions.GetExtension``1\" name=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions.GetExtension&lt;TExtension&gt;()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/DbContextOptions.cs/#L55"
          },
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.WithExtension``1(``0)",
            "id": "WithExtension_TExtension__TExtension_",
            "parent": "Microsoft.Data.Entity.Infrastructure.DbContextOptions",
            "href": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.yml",
            "name": "WithExtension<TExtension>(TExtension)",
            "name.vb": "WithExtension(Of TExtension)(TExtension)",
            "fullName": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.WithExtension<TExtension>(TExtension)",
            "fullName.vb": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.WithExtension(Of TExtension)(TExtension)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
              "startLine": 71,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<p>Adds the given extension to the options.</p>\n",
            "syntax": {
              "content": "public abstract DbContextOptions WithExtension<TExtension>(TExtension extension)where TExtension : class, IDbContextOptionsExtension",
              "content.vb": "Public MustOverride Function WithExtension(Of TExtension As {Class, IDbContextOptionsExtension})(extension As TExtension) As DbContextOptions",
              "parameters": [
                {
                  "id": "extension",
                  "type": {
                    "uid": "{TExtension}",
                    "isExternal": false,
                    "name": "TExtension",
                    "fullName": "TExtension",
                    "specName": "<xref href=\"{TExtension}\" name=\"TExtension\"/>",
                    "id": "TExtension",
                    "level": 0
                  },
                  "description": "<p>The extension to be added.</p>\n"
                }
              ],
              "typeParameters": [
                {
                  "id": "TExtension",
                  "description": "The type of extension to be added."
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Infrastructure.DbContextOptions",
                  "id": "DbContextOptions",
                  "parent": "Microsoft.Data.Entity.Infrastructure",
                  "children": [
                    "Microsoft.Data.Entity.Infrastructure.DbContextOptions.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.Data.Entity.Infrastructure.IDbContextOptionsExtension})",
                    "Microsoft.Data.Entity.Infrastructure.DbContextOptions.Extensions",
                    "Microsoft.Data.Entity.Infrastructure.DbContextOptions.FindExtension``1",
                    "Microsoft.Data.Entity.Infrastructure.DbContextOptions.GetExtension``1",
                    "Microsoft.Data.Entity.Infrastructure.DbContextOptions.WithExtension``1(``0)"
                  ],
                  "href": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.yml",
                  "name": "DbContextOptions",
                  "fullName": "Microsoft.Data.Entity.Infrastructure.DbContextOptions",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
                    "startLine": 16,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Infrastructure",
                  "summary": "<p>The options to be used by a <xref href=\"Microsoft.Data.Entity.DbContext\"></xref>. You normally override\n<xref href=\"Microsoft.Data.Entity.DbContext.OnConfiguring(Microsoft.Data.Entity.DbContextOptionsBuilder)\"></xref> or use a <xref href=\"Microsoft.Data.Entity.DbContextOptionsBuilder\"></xref>\nto create instances of this class and it is not designed to be directly constructed in your application code.</p>\n",
                  "syntax": {
                    "content": "public abstract class DbContextOptions : IDbContextOptions",
                    "content.vb": "Public MustInherit Class DbContextOptions Implements IDbContextOptions"
                  },
                  "inheritance": [
                    "System.Object"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IDbContextOptions"
                  ],
                  "inheritedMembers": [
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions\" name=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions\"/>",
                  "level": 1
                },
                "description": "<p>The same options instance so that multiple calls can be chained.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions.WithExtension``1(``0)\" name=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions.WithExtension&lt;TExtension&gt;(TExtension)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/DbContextOptions.cs/#L72"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Infrastructure.DbContextOptions.yml",
    "name": "DbContextOptions",
    "fullName": "Microsoft.Data.Entity.Infrastructure.DbContextOptions",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Infrastructure/DbContextOptions.cs",
      "startLine": 16,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Infrastructure",
    "summary": "<p>The options to be used by a <xref href=\"Microsoft.Data.Entity.DbContext\"></xref>. You normally override\n<xref href=\"Microsoft.Data.Entity.DbContext.OnConfiguring(Microsoft.Data.Entity.DbContextOptionsBuilder)\"></xref> or use a <xref href=\"Microsoft.Data.Entity.DbContextOptionsBuilder\"></xref>\nto create instances of this class and it is not designed to be directly constructed in your application code.</p>\n",
    "syntax": {
      "content": "public abstract class DbContextOptions : IDbContextOptions",
      "content.vb": "Public MustInherit Class DbContextOptions Implements IDbContextOptions"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Infrastructure.IDbContextOptions"
    ],
    "inheritedMembers": [
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions\" name=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions\"/>",
    "level": 1,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/DbContextOptions.cs/#L17"
  },
  "isClass": true,
  "_allowToc": true
}
