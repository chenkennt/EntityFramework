
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection",
    "id": "IRelationalConnection",
    "parent": "Microsoft.Data.Entity.Storage",
    "children": [
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection.CommandTimeout",
            "id": "CommandTimeout",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
            "name": "CommandTimeout",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection.CommandTimeout",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
              "startLine": 18,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
                "content": "int ? CommandTimeout { get; set; }",
                "content.vb": "Property CommandTimeout As Integer?",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Nullable{System.Int32}",
                    "parent": "System",
                    "definition": "System.Nullable`1",
                    "name": "Nullable<Int32>",
                    "name.vb": "Nullable(Of Int32)",
                    "fullName": "System.Nullable<System.Int32>",
                    "fullName.vb": "System.Nullable(Of System.Int32)",
                    "spec.csharp": [
                      {
                        "uid": "System.Nullable`1",
                        "name": "Nullable",
                        "fullName": "System.Nullable",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Int32",
                        "name": "Int32",
                        "fullName": "System.Int32",
                        "isExternal": true
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Nullable`1",
                        "name": "Nullable",
                        "fullName": "System.Nullable",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "System.Int32",
                        "name": "Int32",
                        "fullName": "System.Int32",
                        "isExternal": true
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Nullable`1\" name=\"System.Nullable\"/>&lt;<xref href=\"System.Int32\" name=\"System.Int32\"/>&gt;",
                    "id": "Nullable_Int32_",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection.CommandTimeout\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection.CommandTimeout\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalConnection.cs/#L19"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection.ConnectionString",
            "id": "ConnectionString",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
            "name": "ConnectionString",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection.ConnectionString",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
              "startLine": 12,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
                "content": "string ConnectionString { get; }",
                "content.vb": "ReadOnly Property ConnectionString As String",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.String",
                    "parent": "System",
                    "isExternal": true,
                    "name": "String",
                    "fullName": "System.String",
                    "specName": "<xref href=\"System.String\" name=\"System.String\"/>",
                    "id": "String",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection.ConnectionString\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection.ConnectionString\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalConnection.cs/#L13"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection.CurrentTransaction",
            "id": "CurrentTransaction",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
            "name": "CurrentTransaction",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection.CurrentTransaction",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
              "startLine": 16,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
                "content": "IDbContextTransaction CurrentTransaction { get; }",
                "content.vb": "ReadOnly Property CurrentTransaction As IDbContextTransaction",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                    "parent": "Microsoft.Data.Entity.Storage",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Storage.IDbContextTransaction.yml",
                    "name": "IDbContextTransaction",
                    "fullName": "Microsoft.Data.Entity.Storage.IDbContextTransaction",
                    "type": "interface",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\" name=\"Microsoft.Data.Entity.Storage.IDbContextTransaction\"/>",
                    "id": "IDbContextTransaction",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection.CurrentTransaction\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection.CurrentTransaction\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalConnection.cs/#L17"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection.DbConnection",
            "id": "DbConnection",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
            "name": "DbConnection",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection.DbConnection",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
              "startLine": 14,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
                "content": "DbConnection DbConnection { get; }",
                "content.vb": "ReadOnly Property DbConnection As DbConnection",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Data.Common.DbConnection",
                    "parent": "System.Data.Common",
                    "isExternal": true,
                    "name": "DbConnection",
                    "fullName": "System.Data.Common.DbConnection",
                    "specName": "<xref href=\"System.Data.Common.DbConnection\" name=\"System.Data.Common.DbConnection\"/>",
                    "id": "DbConnection",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection.DbConnection\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection.DbConnection\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalConnection.cs/#L15"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled",
            "id": "IsMultipleActiveResultSetsEnabled",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
            "name": "IsMultipleActiveResultSetsEnabled",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
              "startLine": 26,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
                "content": "bool IsMultipleActiveResultSetsEnabled { get; }",
                "content.vb": "ReadOnly Property IsMultipleActiveResultSetsEnabled As Boolean",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "System.Boolean",
                    "parent": "System",
                    "isExternal": true,
                    "name": "Boolean",
                    "fullName": "System.Boolean",
                    "specName": "<xref href=\"System.Boolean\" name=\"System.Boolean\"/>",
                    "id": "Boolean",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalConnection.cs/#L27"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection.Close",
            "id": "Close__",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
            "name": "Close()",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection.Close()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
              "startLine": 24,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "void Close()",
              "content.vb": "Sub Close"
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection.Close\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection.Close()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalConnection.cs/#L25"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection.Open",
            "id": "Open__",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
            "name": "Open()",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection.Open()",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
              "startLine": 20,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "void Open()",
              "content.vb": "Sub Open"
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection.Open\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection.Open()\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalConnection.cs/#L21"
          },
          {
            "uid": "Microsoft.Data.Entity.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)",
            "id": "OpenAsync_CancellationToken_",
            "parent": "Microsoft.Data.Entity.Storage.IRelationalConnection",
            "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
            "name": "OpenAsync(CancellationToken)",
            "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
              "startLine": 22,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Relational"
            ],
            "namespace": "Microsoft.Data.Entity.Storage",
            "syntax": {
              "content": "Task OpenAsync(CancellationToken cancellationToken = null)",
              "content.vb": "Function OpenAsync(cancellationToken As CancellationToken = Nothing) As Task",
              "parameters": [
                {
                  "id": "cancellationToken",
                  "type": {
                    "uid": "System.Threading.CancellationToken",
                    "parent": "System.Threading",
                    "isExternal": true,
                    "name": "CancellationToken",
                    "fullName": "System.Threading.CancellationToken",
                    "specName": "<xref href=\"System.Threading.CancellationToken\" name=\"System.Threading.CancellationToken\"/>",
                    "id": "CancellationToken",
                    "level": 0
                  }
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Threading.Tasks.Task",
                  "parent": "System.Threading.Tasks",
                  "isExternal": true,
                  "name": "Task",
                  "fullName": "System.Threading.Tasks.Task",
                  "specName": "<xref href=\"System.Threading.Tasks.Task\" name=\"System.Threading.Tasks.Task\"/>",
                  "id": "Task",
                  "level": 0
                }
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalConnection.cs/#L23"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Storage.IRelationalConnection.yml",
    "name": "IRelationalConnection",
    "fullName": "Microsoft.Data.Entity.Storage.IRelationalConnection",
    "type": "Interface",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Relational/Storage/IRelationalConnection.cs",
      "startLine": 10,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Relational"
    ],
    "namespace": "Microsoft.Data.Entity.Storage",
    "syntax": {
      "content": "public interface IRelationalConnection : IRelationalTransactionManager, IDbContextTransactionManager, IDisposable",
      "content.vb": "Public Interface IRelationalConnection Inherits IRelationalTransactionManager, IDisposable"
    },
    "inheritedMembers": [
      "Microsoft.Data.Entity.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)",
      "Microsoft.Data.Entity.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)",
      "Microsoft.Data.Entity.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)",
      "Microsoft.Data.Entity.Storage.IDbContextTransactionManager.BeginTransaction",
      "Microsoft.Data.Entity.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)",
      "Microsoft.Data.Entity.Storage.IDbContextTransactionManager.CommitTransaction",
      "Microsoft.Data.Entity.Storage.IDbContextTransactionManager.RollbackTransaction",
      "System.IDisposable.Dispose"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Storage.IRelationalConnection\" name=\"Microsoft.Data.Entity.Storage.IRelationalConnection\"/>",
    "level": 0,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Relational/Storage/IRelationalConnection.cs/#L11"
  },
  "isClass": true,
  "_allowToc": true
}
