
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.KeyExtensions",
    "id": "KeyExtensions",
    "parent": "Microsoft.Data.Entity",
    "children": [
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.KeyExtensions.FindReferencingForeignKeys(Microsoft.Data.Entity.Metadata.IKey)",
            "id": "FindReferencingForeignKeys_IKey_",
            "parent": "Microsoft.Data.Entity.KeyExtensions",
            "href": "Microsoft.Data.Entity.KeyExtensions.yml",
            "name": "FindReferencingForeignKeys(IKey)",
            "fullName": "Microsoft.Data.Entity.KeyExtensions.FindReferencingForeignKeys(Microsoft.Data.Entity.Metadata.IKey)",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Extensions/KeyExtensions.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Extensions/KeyExtensions.cs",
              "startLine": 22,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity",
            "summary": "<p>Gets all foreign keys that target a given primary or alternate key.</p>\n",
            "syntax": {
              "content": "public static IEnumerable<IForeignKey> FindReferencingForeignKeys(IKey key)",
              "content.vb": "Public Shared Function FindReferencingForeignKeys(key As IKey) As IEnumerable(Of IForeignKey)",
              "parameters": [
                {
                  "id": "key",
                  "type": {
                    "uid": "Microsoft.Data.Entity.Metadata.IKey",
                    "parent": "Microsoft.Data.Entity.Metadata",
                    "isExternal": false,
                    "href": "Microsoft.Data.Entity.Metadata.IKey.yml",
                    "name": "IKey",
                    "fullName": "Microsoft.Data.Entity.Metadata.IKey",
                    "specName": "<xref href=\"Microsoft.Data.Entity.Metadata.IKey\" name=\"Microsoft.Data.Entity.Metadata.IKey\"/>",
                    "id": "IKey",
                    "level": 0
                  },
                  "description": "<p>The key to find the foreign keys for.</p>\n"
                }
              ],
              "return": {
                "type": {
                  "uid": "System.Collections.Generic.IEnumerable{Microsoft.Data.Entity.Metadata.IForeignKey}",
                  "parent": "System.Collections.Generic",
                  "definition": "System.Collections.Generic.IEnumerable`1",
                  "href": "Microsoft.Data.Entity.Metadata.IForeignKey.yml",
                  "name": "IEnumerable<IForeignKey>",
                  "name.vb": "IEnumerable(Of IForeignKey)",
                  "fullName": "System.Collections.Generic.IEnumerable<Microsoft.Data.Entity.Metadata.IForeignKey>",
                  "fullName.vb": "System.Collections.Generic.IEnumerable(Of Microsoft.Data.Entity.Metadata.IForeignKey)",
                  "spec.csharp": [
                    {
                      "uid": "System.Collections.Generic.IEnumerable`1",
                      "name": "IEnumerable",
                      "fullName": "System.Collections.Generic.IEnumerable",
                      "isExternal": true
                    },
                    {
                      "name": "<",
                      "fullName": "<",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Metadata.IForeignKey",
                      "name": "IForeignKey",
                      "fullName": "Microsoft.Data.Entity.Metadata.IForeignKey",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Metadata.IForeignKey.yml"
                    },
                    {
                      "name": ">",
                      "fullName": ">",
                      "isExternal": false
                    }
                  ],
                  "spec.vb": [
                    {
                      "uid": "System.Collections.Generic.IEnumerable`1",
                      "name": "IEnumerable",
                      "fullName": "System.Collections.Generic.IEnumerable",
                      "isExternal": true
                    },
                    {
                      "name": "(Of ",
                      "fullName": "(Of ",
                      "isExternal": false
                    },
                    {
                      "uid": "Microsoft.Data.Entity.Metadata.IForeignKey",
                      "name": "IForeignKey",
                      "fullName": "Microsoft.Data.Entity.Metadata.IForeignKey",
                      "isExternal": false,
                      "href": "Microsoft.Data.Entity.Metadata.IForeignKey.yml"
                    },
                    {
                      "name": ")",
                      "fullName": ")",
                      "isExternal": false
                    }
                  ],
                  "specName": "<xref href=\"System.Collections.Generic.IEnumerable`1\" name=\"System.Collections.Generic.IEnumerable\"/>&lt;<xref href=\"Microsoft.Data.Entity.Metadata.IForeignKey\" name=\"Microsoft.Data.Entity.Metadata.IForeignKey\"/>&gt;",
                  "id": "IEnumerable_IForeignKey_",
                  "level": 0
                },
                "description": "<p>The foreign keys that reference the given key.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.KeyExtensions.FindReferencingForeignKeys(Microsoft.Data.Entity.Metadata.IKey)\" name=\"Microsoft.Data.Entity.KeyExtensions.FindReferencingForeignKeys(Microsoft.Data.Entity.Metadata.IKey)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Extensions/KeyExtensions.cs/#L23"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.KeyExtensions.yml",
    "name": "KeyExtensions",
    "fullName": "Microsoft.Data.Entity.KeyExtensions",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Extensions/KeyExtensions.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Extensions/KeyExtensions.cs",
      "startLine": 15,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity",
    "summary": "<p>Extension methods for <xref href=\"Microsoft.Data.Entity.Metadata.IKey\"></xref>.</p>\n",
    "syntax": {
      "content": "public class KeyExtensions",
      "content.vb": "Public Class KeyExtensions"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      }
    ],
    "inheritedMembers": [
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.KeyExtensions\" name=\"Microsoft.Data.Entity.KeyExtensions\"/>",
    "level": 1,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Extensions/KeyExtensions.cs/#L16"
  },
  "isClass": true,
  "_allowToc": true
}
