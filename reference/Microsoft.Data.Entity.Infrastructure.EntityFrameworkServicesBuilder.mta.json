
{
  "_lang": "csharp",
  "_tocPath": "reference/toc.html",
  "_navPath": "toc.html",
  "_rel": "../",
  "_navRel": "../toc.html",
  "_tocRel": "toc.html",
  "_appTitle": "Entity Framework",
  "item": {
    "uid": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder",
    "id": "EntityFrameworkServicesBuilder",
    "parent": "Microsoft.Data.Entity.Infrastructure",
    "children": [
      {
        "title": "Constructors",
        "id": "constructors",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)",
            "id": "EntityFrameworkServicesBuilder_IServiceCollection_",
            "parent": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder",
            "href": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.yml",
            "name": "EntityFrameworkServicesBuilder(IServiceCollection)",
            "fullName": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.EntityFrameworkServicesBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)",
            "type": "constructor",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs",
              "startLine": 26,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<p>Initializes a new instance of the <xref href=\"Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder\"></xref> class.</p>\n",
            "syntax": {
              "content": "public EntityFrameworkServicesBuilder(IServiceCollection serviceCollection)",
              "content.vb": "Public Sub New(serviceCollection As IServiceCollection)",
              "parameters": [
                {
                  "id": "serviceCollection",
                  "type": {
                    "uid": "Microsoft.Extensions.DependencyInjection.IServiceCollection",
                    "parent": "Microsoft.Extensions.DependencyInjection",
                    "isExternal": true,
                    "name": "IServiceCollection",
                    "fullName": "Microsoft.Extensions.DependencyInjection.IServiceCollection",
                    "specName": "<xref href=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\" name=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\"/>",
                    "id": "IServiceCollection",
                    "level": 0
                  },
                  "description": "<p>The <xref href=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\"></xref> being configured.</p>\n"
                }
              ]
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)\" name=\"Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.EntityFrameworkServicesBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs/#L27"
          }
        ]
      },
      {
        "title": "Properties",
        "id": "properties",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Extensions#DependencyInjection#IServiceCollection}#Instance",
            "id": "IInfrastructure_IServiceCollection__Instance",
            "parent": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder",
            "href": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.yml",
            "name": "IInfrastructure<IServiceCollection>.Instance",
            "name.vb": "Microsoft.Data.Entity.Infrastructure.IInfrastructure<Microsoft.Extensions.DependencyInjection.IServiceCollection>.Instance",
            "fullName": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.Microsoft.Data.Entity.Infrastructure.IInfrastructure<Microsoft.Extensions.DependencyInjection.IServiceCollection>.Instance",
            "type": "property",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs",
              "startLine": 113,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<para>\nGets the <xref href=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\"></xref> being configured.\n</para>\n<para>\nThis property is intended for use by extension methods that need to make use of services\nnot directly exposed in the public API surface.\n</para>",
            "syntax": {
                "content": "IServiceCollection IInfrastructure<IServiceCollection>.Instance { get; }",
                "content.vb": "ReadOnly WriteOnly Property Microsoft.Data.Entity.Infrastructure.IInfrastructure<Microsoft.Extensions.DependencyInjection.IServiceCollection>.Instance As IServiceCollection Implements IInfrastructure(Of IServiceCollection).Instance",
                "parameters": [],
                "return": {
                  "type": {
                    "uid": "Microsoft.Extensions.DependencyInjection.IServiceCollection",
                    "parent": "Microsoft.Extensions.DependencyInjection",
                    "isExternal": true,
                    "name": "IServiceCollection",
                    "fullName": "Microsoft.Extensions.DependencyInjection.IServiceCollection",
                    "specName": "<xref href=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\" name=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\"/>",
                    "id": "IServiceCollection",
                    "level": 0
                  }
                }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Extensions#DependencyInjection#IServiceCollection}#Instance\" name=\"Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.Microsoft.Data.Entity.Infrastructure.IInfrastructure&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt;.Instance\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs/#L114"
          }
        ]
      },
      {
        "title": "Methods",
        "id": "methods",
        "children": [
          {
            "uid": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.AddDbContext``1(System.Action{Microsoft.Data.Entity.DbContextOptionsBuilder})",
            "id": "AddDbContext_TContext__Action_DbContextOptionsBuilder__",
            "parent": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder",
            "href": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.yml",
            "name": "AddDbContext<TContext>(Action<DbContextOptionsBuilder>)",
            "name.vb": "AddDbContext(Of TContext)(Action(Of DbContextOptionsBuilder))",
            "fullName": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.AddDbContext<TContext>(System.Action<Microsoft.Data.Entity.DbContextOptionsBuilder>)",
            "fullName.vb": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.AddDbContext(Of TContext)(System.Action(Of Microsoft.Data.Entity.DbContextOptionsBuilder))",
            "type": "method",
            "source": {
              "remote": {
                "path": "src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs",
                "branch": "dev",
                "repo": "https://github.com/chenkennt/EntityFramework.git"
              },
              "path": "src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs",
              "startLine": 77,
              "endLine": 0,
              "isExternal": false
            },
            "assemblies": [
              "EntityFramework.Core"
            ],
            "namespace": "Microsoft.Data.Entity.Infrastructure",
            "summary": "<para>\nRegisters the given context as a service in the <xref href=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\"></xref> and ensures services that the context\nuses are resolved from the <xref href=\"System.IServiceProvider\"></xref>.\n</para>\n<para>\nYou use this method when using dependency injection in your application, such as with ASP.NET.\nFor more information on setting up dependency injection, see http://go.microsoft.com/fwlink/?LinkId=526890.\n</para>",
            "example": "<code>\npublic void ConfigureServices(IServiceCollection services)\n{\nvar connectionString = \"connection string to database\";\n\n\nservices.AddEntityFramework()\n.AddSqlServer()\n.AddDbContext&lt;MyContext&gt;(options =&gt; options.UseSqlServer(connectionString));\n}\n</code>",
            "syntax": {
              "content": "public virtual EntityFrameworkServicesBuilder AddDbContext<TContext>(Action<DbContextOptionsBuilder> optionsAction = null)where TContext : DbContext",
              "content.vb": "Public Overridable Function AddDbContext(Of TContext As DbContext)(optionsAction As Action(Of DbContextOptionsBuilder) = Nothing) As EntityFrameworkServicesBuilder",
              "parameters": [
                {
                  "id": "optionsAction",
                  "type": {
                    "uid": "System.Action{Microsoft.Data.Entity.DbContextOptionsBuilder}",
                    "parent": "System",
                    "definition": "System.Action`1",
                    "href": "Microsoft.Data.Entity.DbContextOptionsBuilder.yml",
                    "name": "Action<DbContextOptionsBuilder>",
                    "name.vb": "Action(Of DbContextOptionsBuilder)",
                    "fullName": "System.Action<Microsoft.Data.Entity.DbContextOptionsBuilder>",
                    "fullName.vb": "System.Action(Of Microsoft.Data.Entity.DbContextOptionsBuilder)",
                    "spec.csharp": [
                      {
                        "uid": "System.Action`1",
                        "name": "Action",
                        "fullName": "System.Action",
                        "isExternal": true
                      },
                      {
                        "name": "<",
                        "fullName": "<",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.DbContextOptionsBuilder",
                        "name": "DbContextOptionsBuilder",
                        "fullName": "Microsoft.Data.Entity.DbContextOptionsBuilder",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.DbContextOptionsBuilder.yml"
                      },
                      {
                        "name": ">",
                        "fullName": ">",
                        "isExternal": false
                      }
                    ],
                    "spec.vb": [
                      {
                        "uid": "System.Action`1",
                        "name": "Action",
                        "fullName": "System.Action",
                        "isExternal": true
                      },
                      {
                        "name": "(Of ",
                        "fullName": "(Of ",
                        "isExternal": false
                      },
                      {
                        "uid": "Microsoft.Data.Entity.DbContextOptionsBuilder",
                        "name": "DbContextOptionsBuilder",
                        "fullName": "Microsoft.Data.Entity.DbContextOptionsBuilder",
                        "isExternal": false,
                        "href": "Microsoft.Data.Entity.DbContextOptionsBuilder.yml"
                      },
                      {
                        "name": ")",
                        "fullName": ")",
                        "isExternal": false
                      }
                    ],
                    "specName": "<xref href=\"System.Action`1\" name=\"System.Action\"/>&lt;<xref href=\"Microsoft.Data.Entity.DbContextOptionsBuilder\" name=\"Microsoft.Data.Entity.DbContextOptionsBuilder\"/>&gt;",
                    "id": "Action_DbContextOptionsBuilder_",
                    "level": 0
                  },
                  "description": "<para>\nAn optional action to configure the <xref href=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions\"></xref> for the context. This provides an\nalternative to performing configuration of the context by overriding the\n<xref href=\"Microsoft.Data.Entity.DbContext.OnConfiguring(Microsoft.Data.Entity.DbContextOptionsBuilder)\"></xref> method in your derived context.\n</para>\n<para>\nIf an action is supplied here, the <xref href=\"Microsoft.Data.Entity.DbContext.OnConfiguring(Microsoft.Data.Entity.DbContextOptionsBuilder)\"></xref> method will still be run if it has\nbeen overridden on the derived context. <xref href=\"Microsoft.Data.Entity.DbContext.OnConfiguring(Microsoft.Data.Entity.DbContextOptionsBuilder)\"></xref> configuration will be applied\nin addition to configuration performed here.\n</para>\n<para>\nYou do not need to expose a <xref href=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions\"></xref> constructor parameter for the options to be passed to the\ncontext. If you choose to expose a constructor parameter, we recommend typing it as the generic\n<xref href=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions`1\"></xref>. You can use the non-generic <xref href=\"Microsoft.Data.Entity.Infrastructure.DbContextOptions\"></xref> but this will only\nwork if you have one derived context type registered in your <xref href=\"System.IServiceProvider\"></xref>.\n</para>"
                }
              ],
              "typeParameters": [
                {
                  "id": "TContext",
                  "description": "The type of context to be registered."
                }
              ],
              "return": {
                "type": {
                  "uid": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder",
                  "id": "EntityFrameworkServicesBuilder",
                  "parent": "Microsoft.Data.Entity.Infrastructure",
                  "children": [
                    "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)",
                    "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.AddDbContext``1(System.Action{Microsoft.Data.Entity.DbContextOptionsBuilder})",
                    "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.Microsoft#Data#Entity#Infrastructure#IInfrastructure{Microsoft#Extensions#DependencyInjection#IServiceCollection}#Instance"
                  ],
                  "href": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.yml",
                  "name": "EntityFrameworkServicesBuilder",
                  "fullName": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder",
                  "type": "class",
                  "source": {
                    "remote": {
                      "path": "src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs",
                      "branch": "dev",
                      "repo": "https://github.com/chenkennt/EntityFramework.git"
                    },
                    "path": "src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs",
                    "startLine": 18,
                    "endLine": 0,
                    "isExternal": false
                  },
                  "assemblies": [
                    "EntityFramework.Core"
                  ],
                  "namespace": "Microsoft.Data.Entity.Infrastructure",
                  "summary": "<p>Provides Entity Framework specific APIs for configuring services in an <xref href=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\"></xref>.\nThese APIs are usually accessed by calling\n<xref href=\"Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.AddEntityFramework(Microsoft.Extensions.DependencyInjection.IServiceCollection)\"></xref>\nand then chaining API calls on the returned <xref href=\"Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder\"></xref>.</p>\n",
                  "syntax": {
                    "content": "public class EntityFrameworkServicesBuilder : IInfrastructure<IServiceCollection>",
                    "content.vb": "Public Class EntityFrameworkServicesBuilder Implements IInfrastructure(Of IServiceCollection)"
                  },
                  "inheritance": [
                    "System.Object"
                  ],
                  "implements": [
                    "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Extensions.DependencyInjection.IServiceCollection}"
                  ],
                  "inheritedMembers": [
                    "System.Object.ToString",
                    "System.Object.Equals(System.Object)",
                    "System.Object.Equals(System.Object,System.Object)",
                    "System.Object.ReferenceEquals(System.Object,System.Object)",
                    "System.Object.GetHashCode",
                    "System.Object.GetType",
                    "System.Object.MemberwiseClone"
                  ],
                  "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder\" name=\"Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder\"/>",
                  "level": 1
                },
                "description": "<p>A builder that allows further Entity Framework specific setup of the <xref href=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\"></xref>.</p>\n"
              }
            },
            "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.AddDbContext``1(System.Action{Microsoft.Data.Entity.DbContextOptionsBuilder})\" name=\"Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.AddDbContext&lt;TContext&gt;(System.Action&lt;Microsoft.Data.Entity.DbContextOptionsBuilder&gt;)\"/>",
            "level": 0,
            "docurl": "",
            "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs/#L78"
          }
        ]
      }
    ],
    "href": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder.yml",
    "name": "EntityFrameworkServicesBuilder",
    "fullName": "Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder",
    "type": "Class",
    "source": {
      "remote": {
        "path": "src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs",
        "branch": "dev",
        "repo": "https://github.com/chenkennt/EntityFramework.git"
      },
      "path": "src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs",
      "startLine": 18,
      "endLine": 0,
      "isExternal": false
    },
    "assemblies": [
      "EntityFramework.Core"
    ],
    "namespace": "Microsoft.Data.Entity.Infrastructure",
    "summary": "<p>Provides Entity Framework specific APIs for configuring services in an <xref href=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\"></xref>.\nThese APIs are usually accessed by calling\n<xref href=\"Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.AddEntityFramework(Microsoft.Extensions.DependencyInjection.IServiceCollection)\"></xref>\nand then chaining API calls on the returned <xref href=\"Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder\"></xref>.</p>\n",
    "syntax": {
      "content": "public class EntityFrameworkServicesBuilder : IInfrastructure<IServiceCollection>",
      "content.vb": "Public Class EntityFrameworkServicesBuilder Implements IInfrastructure(Of IServiceCollection)"
    },
    "inheritance": [
      {
        "uid": "System.Object",
        "parent": "System",
        "isExternal": true,
        "name": "Object",
        "fullName": "System.Object",
        "specName": "<xref href=\"System.Object\" name=\"System.Object\"/>",
        "id": "Object",
        "level": 0,
        "index": 0
      }
    ],
    "implements": [
      "Microsoft.Data.Entity.Infrastructure.IInfrastructure{Microsoft.Extensions.DependencyInjection.IServiceCollection}"
    ],
    "inheritedMembers": [
      "System.Object.ToString",
      "System.Object.Equals(System.Object)",
      "System.Object.Equals(System.Object,System.Object)",
      "System.Object.ReferenceEquals(System.Object,System.Object)",
      "System.Object.GetHashCode",
      "System.Object.GetType",
      "System.Object.MemberwiseClone"
    ],
    "specName": "<xref href=\"Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder\" name=\"Microsoft.Data.Entity.Infrastructure.EntityFrameworkServicesBuilder\"/>",
    "level": 1,
    "docurl": "",
    "sourceurl": "https://github.com/chenkennt/EntityFramework/blob/dev/src/EntityFramework.Core/Infrastructure/EntityFrameworkServicesBuilder.cs/#L19"
  },
  "isClass": true,
  "_allowToc": true
}
